package org.xtext.example.myxenia.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.myxenia.services.MyXeniaGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalMyXeniaParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "LinkedProperty", "SiteWithModal", "InfoProperty", "MappedEntity", "RedirectPage", "Synchronized", "InfoEntity", "Instanceof", "SuperSite", "Extension", "InfoValue", "AppName", "Default", "Extends", "Finally", "Entity", "Header", "Import", "Return", "Static", "Switch", "Typeof", "Model", "Catch", "False", "Super", "Throw", "While", "FREQ", "PRIO", "PROD", "Site", "Case", "Else", "Mode", "Name", "Null", "Page", "Path", "Site_1", "Tech", "True", "ExclamationMarkEqualsSignEqualsSign", "FullStopFullStopLessThanSign", "EqualsSignEqualsSignEqualsSign", "DEV", "MOD", "For", "New", "Try", "Val", "Var", "ExclamationMarkEqualsSign", "PercentSignEqualsSign", "AmpersandAmpersand", "AsteriskAsterisk", "AsteriskEqualsSign", "PlusSignPlusSign", "PlusSignEqualsSign", "HyphenMinusHyphenMinus", "HyphenMinusEqualsSign", "HyphenMinusGreaterThanSign", "FullStopFullStop", "SolidusEqualsSign", "ColonColon", "LessThanSignGreaterThanSign", "EqualsSignEqualsSign", "EqualsSignGreaterThanSign", "GreaterThanSignEqualsSign", "QuestionMarkFullStop", "QuestionMarkColon", "As", "Do", "If", "VerticalLineVerticalLine", "ExclamationMark", "NumberSign", "PercentSign", "Ampersand", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "QuestionMark", "LeftSquareBracket", "RightSquareBracket", "LeftCurlyBracket", "VerticalLine", "RightCurlyBracket", "RULE_BEGIN", "RULE_END", "RULE_HEX", "RULE_INT", "RULE_DECIMAL", "RULE_ID", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int Val=54;
    public static final int Entity=19;
    public static final int LessThanSignGreaterThanSign=69;
    public static final int RULE_HEX=104;
    public static final int Import=21;
    public static final int EqualsSignGreaterThanSign=71;
    public static final int Var=55;
    public static final int False=28;
    public static final int LessThanSign=93;
    public static final int LeftParenthesis=83;
    public static final int Throw=30;
    public static final int InfoValue=14;
    public static final int Extends=17;
    public static final int ExclamationMark=79;
    public static final int ExclamationMarkEqualsSignEqualsSign=46;
    public static final int GreaterThanSign=95;
    public static final int RULE_ID=107;
    public static final int SiteWithModal=5;
    public static final int GreaterThanSignEqualsSign=72;
    public static final int ColonColon=68;
    public static final int EqualsSignEqualsSign=70;
    public static final int Header=20;
    public static final int Switch=24;
    public static final int VerticalLine=100;
    public static final int PlusSign=86;
    public static final int RULE_INT=105;
    public static final int RULE_ML_COMMENT=109;
    public static final int LeftSquareBracket=97;
    public static final int If=77;
    public static final int Finally=18;
    public static final int Site=35;
    public static final int Catch=27;
    public static final int VerticalLineVerticalLine=78;
    public static final int InfoProperty=6;
    public static final int Case=36;
    public static final int QuestionMarkFullStop=73;
    public static final int Comma=87;
    public static final int As=75;
    public static final int HyphenMinus=88;
    public static final int Synchronized=9;
    public static final int QuestionMarkColon=74;
    public static final int FREQ=32;
    public static final int Solidus=90;
    public static final int RightCurlyBracket=101;
    public static final int PercentSignEqualsSign=57;
    public static final int Path=42;
    public static final int FullStop=89;
    public static final int Default=16;
    public static final int Semicolon=92;
    public static final int PROD=34;
    public static final int PlusSignPlusSign=61;
    public static final int QuestionMark=96;
    public static final int Model=26;
    public static final int Else=37;
    public static final int ExclamationMarkEqualsSign=56;
    public static final int HyphenMinusGreaterThanSign=65;
    public static final int HyphenMinusHyphenMinus=63;
    public static final int New=52;
    public static final int Null=40;
    public static final int RULE_BEGIN=102;
    public static final int Typeof=25;
    public static final int SolidusEqualsSign=67;
    public static final int True=45;
    public static final int Page=41;
    public static final int PRIO=33;
    public static final int Name=39;
    public static final int Tech=44;
    public static final int PercentSign=81;
    public static final int Super=29;
    public static final int FullStopFullStop=66;
    public static final int Try=53;
    public static final int Ampersand=82;
    public static final int AsteriskEqualsSign=60;
    public static final int RightSquareBracket=98;
    public static final int For=51;
    public static final int RightParenthesis=84;
    public static final int Do=76;
    public static final int EqualsSignEqualsSignEqualsSign=48;
    public static final int RULE_DECIMAL=106;
    public static final int InfoEntity=10;
    public static final int NumberSign=80;
    public static final int AsteriskAsterisk=59;
    public static final int Static=23;
    public static final int RULE_END=103;
    public static final int RULE_STRING=108;
    public static final int AppName=15;
    public static final int RULE_SL_COMMENT=110;
    public static final int EqualsSign=94;
    public static final int AmpersandAmpersand=58;
    public static final int SuperSite=12;
    public static final int Instanceof=11;
    public static final int HyphenMinusEqualsSign=64;
    public static final int Colon=91;
    public static final int EOF=-1;
    public static final int RedirectPage=8;
    public static final int Asterisk=85;
    public static final int PlusSignEqualsSign=62;
    public static final int Return=22;
    public static final int MOD=50;
    public static final int RULE_WS=111;
    public static final int MappedEntity=7;
    public static final int Mode=38;
    public static final int LeftCurlyBracket=99;
    public static final int While=31;
    public static final int RULE_ANY_OTHER=112;
    public static final int LinkedProperty=4;
    public static final int Extension=13;
    public static final int FullStopFullStopLessThanSign=47;
    public static final int DEV=49;
    public static final int Site_1=43;

    // delegates
    // delegators


        public InternalMyXeniaParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalMyXeniaParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalMyXeniaParser.tokenNames; }
    public String getGrammarFileName() { return "InternalMyXeniaParser.g"; }



     	private MyXeniaGrammarAccess grammarAccess;

        public InternalMyXeniaParser(TokenStream input, MyXeniaGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected MyXeniaGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalMyXeniaParser.g:58:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalMyXeniaParser.g:58:46: (iv_ruleModel= ruleModel EOF )
            // InternalMyXeniaParser.g:59:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalMyXeniaParser.g:65:1: ruleModel returns [EObject current=null] : ( () otherlv_1= Model this_BEGIN_2= RULE_BEGIN ( ( (lv_headers_3_0= ruleHeader ) ) ( (lv_headers_4_0= ruleHeader ) )* )? ( ( (lv_entities_5_0= ruleEntity ) ) ( (lv_entities_6_0= ruleEntity ) )* )? ( ( (lv_mapped_entities_7_0= ruleMappedEntity ) ) ( (lv_mapped_entities_8_0= ruleMappedEntity ) )* )? this_END_9= RULE_END ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_2=null;
        Token this_END_9=null;
        EObject lv_headers_3_0 = null;

        EObject lv_headers_4_0 = null;

        EObject lv_entities_5_0 = null;

        EObject lv_entities_6_0 = null;

        EObject lv_mapped_entities_7_0 = null;

        EObject lv_mapped_entities_8_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:71:2: ( ( () otherlv_1= Model this_BEGIN_2= RULE_BEGIN ( ( (lv_headers_3_0= ruleHeader ) ) ( (lv_headers_4_0= ruleHeader ) )* )? ( ( (lv_entities_5_0= ruleEntity ) ) ( (lv_entities_6_0= ruleEntity ) )* )? ( ( (lv_mapped_entities_7_0= ruleMappedEntity ) ) ( (lv_mapped_entities_8_0= ruleMappedEntity ) )* )? this_END_9= RULE_END ) )
            // InternalMyXeniaParser.g:72:2: ( () otherlv_1= Model this_BEGIN_2= RULE_BEGIN ( ( (lv_headers_3_0= ruleHeader ) ) ( (lv_headers_4_0= ruleHeader ) )* )? ( ( (lv_entities_5_0= ruleEntity ) ) ( (lv_entities_6_0= ruleEntity ) )* )? ( ( (lv_mapped_entities_7_0= ruleMappedEntity ) ) ( (lv_mapped_entities_8_0= ruleMappedEntity ) )* )? this_END_9= RULE_END )
            {
            // InternalMyXeniaParser.g:72:2: ( () otherlv_1= Model this_BEGIN_2= RULE_BEGIN ( ( (lv_headers_3_0= ruleHeader ) ) ( (lv_headers_4_0= ruleHeader ) )* )? ( ( (lv_entities_5_0= ruleEntity ) ) ( (lv_entities_6_0= ruleEntity ) )* )? ( ( (lv_mapped_entities_7_0= ruleMappedEntity ) ) ( (lv_mapped_entities_8_0= ruleMappedEntity ) )* )? this_END_9= RULE_END )
            // InternalMyXeniaParser.g:73:3: () otherlv_1= Model this_BEGIN_2= RULE_BEGIN ( ( (lv_headers_3_0= ruleHeader ) ) ( (lv_headers_4_0= ruleHeader ) )* )? ( ( (lv_entities_5_0= ruleEntity ) ) ( (lv_entities_6_0= ruleEntity ) )* )? ( ( (lv_mapped_entities_7_0= ruleMappedEntity ) ) ( (lv_mapped_entities_8_0= ruleMappedEntity ) )* )? this_END_9= RULE_END
            {
            // InternalMyXeniaParser.g:73:3: ()
            // InternalMyXeniaParser.g:74:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getModelAccess().getModelAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Model,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getModelAccess().getModelKeyword_1());
              		
            }
            this_BEGIN_2=(Token)match(input,RULE_BEGIN,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_2, grammarAccess.getModelAccess().getBEGINTerminalRuleCall_2());
              		
            }
            // InternalMyXeniaParser.g:88:3: ( ( (lv_headers_3_0= ruleHeader ) ) ( (lv_headers_4_0= ruleHeader ) )* )?
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==Header) ) {
                alt2=1;
            }
            switch (alt2) {
                case 1 :
                    // InternalMyXeniaParser.g:89:4: ( (lv_headers_3_0= ruleHeader ) ) ( (lv_headers_4_0= ruleHeader ) )*
                    {
                    // InternalMyXeniaParser.g:89:4: ( (lv_headers_3_0= ruleHeader ) )
                    // InternalMyXeniaParser.g:90:5: (lv_headers_3_0= ruleHeader )
                    {
                    // InternalMyXeniaParser.g:90:5: (lv_headers_3_0= ruleHeader )
                    // InternalMyXeniaParser.g:91:6: lv_headers_3_0= ruleHeader
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelAccess().getHeadersHeaderParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_headers_3_0=ruleHeader();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelRule());
                      						}
                      						add(
                      							current,
                      							"headers",
                      							lv_headers_3_0,
                      							"org.xtext.example.myxenia.MyXenia.Header");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:108:4: ( (lv_headers_4_0= ruleHeader ) )*
                    loop1:
                    do {
                        int alt1=2;
                        int LA1_0 = input.LA(1);

                        if ( (LA1_0==Header) ) {
                            alt1=1;
                        }


                        switch (alt1) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:109:5: (lv_headers_4_0= ruleHeader )
                    	    {
                    	    // InternalMyXeniaParser.g:109:5: (lv_headers_4_0= ruleHeader )
                    	    // InternalMyXeniaParser.g:110:6: lv_headers_4_0= ruleHeader
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getModelAccess().getHeadersHeaderParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_4);
                    	    lv_headers_4_0=ruleHeader();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getModelRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"headers",
                    	      							lv_headers_4_0,
                    	      							"org.xtext.example.myxenia.MyXenia.Header");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop1;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalMyXeniaParser.g:128:3: ( ( (lv_entities_5_0= ruleEntity ) ) ( (lv_entities_6_0= ruleEntity ) )* )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==Entity) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalMyXeniaParser.g:129:4: ( (lv_entities_5_0= ruleEntity ) ) ( (lv_entities_6_0= ruleEntity ) )*
                    {
                    // InternalMyXeniaParser.g:129:4: ( (lv_entities_5_0= ruleEntity ) )
                    // InternalMyXeniaParser.g:130:5: (lv_entities_5_0= ruleEntity )
                    {
                    // InternalMyXeniaParser.g:130:5: (lv_entities_5_0= ruleEntity )
                    // InternalMyXeniaParser.g:131:6: lv_entities_5_0= ruleEntity
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelAccess().getEntitiesEntityParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_entities_5_0=ruleEntity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelRule());
                      						}
                      						add(
                      							current,
                      							"entities",
                      							lv_entities_5_0,
                      							"org.xtext.example.myxenia.MyXenia.Entity");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:148:4: ( (lv_entities_6_0= ruleEntity ) )*
                    loop3:
                    do {
                        int alt3=2;
                        int LA3_0 = input.LA(1);

                        if ( (LA3_0==Entity) ) {
                            alt3=1;
                        }


                        switch (alt3) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:149:5: (lv_entities_6_0= ruleEntity )
                    	    {
                    	    // InternalMyXeniaParser.g:149:5: (lv_entities_6_0= ruleEntity )
                    	    // InternalMyXeniaParser.g:150:6: lv_entities_6_0= ruleEntity
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getModelAccess().getEntitiesEntityParserRuleCall_4_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_5);
                    	    lv_entities_6_0=ruleEntity();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getModelRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"entities",
                    	      							lv_entities_6_0,
                    	      							"org.xtext.example.myxenia.MyXenia.Entity");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop3;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalMyXeniaParser.g:168:3: ( ( (lv_mapped_entities_7_0= ruleMappedEntity ) ) ( (lv_mapped_entities_8_0= ruleMappedEntity ) )* )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==MappedEntity) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalMyXeniaParser.g:169:4: ( (lv_mapped_entities_7_0= ruleMappedEntity ) ) ( (lv_mapped_entities_8_0= ruleMappedEntity ) )*
                    {
                    // InternalMyXeniaParser.g:169:4: ( (lv_mapped_entities_7_0= ruleMappedEntity ) )
                    // InternalMyXeniaParser.g:170:5: (lv_mapped_entities_7_0= ruleMappedEntity )
                    {
                    // InternalMyXeniaParser.g:170:5: (lv_mapped_entities_7_0= ruleMappedEntity )
                    // InternalMyXeniaParser.g:171:6: lv_mapped_entities_7_0= ruleMappedEntity
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelAccess().getMapped_entitiesMappedEntityParserRuleCall_5_0_0());
                      					
                    }
                    pushFollow(FOLLOW_6);
                    lv_mapped_entities_7_0=ruleMappedEntity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelRule());
                      						}
                      						add(
                      							current,
                      							"mapped_entities",
                      							lv_mapped_entities_7_0,
                      							"org.xtext.example.myxenia.MyXenia.MappedEntity");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:188:4: ( (lv_mapped_entities_8_0= ruleMappedEntity ) )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==MappedEntity) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:189:5: (lv_mapped_entities_8_0= ruleMappedEntity )
                    	    {
                    	    // InternalMyXeniaParser.g:189:5: (lv_mapped_entities_8_0= ruleMappedEntity )
                    	    // InternalMyXeniaParser.g:190:6: lv_mapped_entities_8_0= ruleMappedEntity
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getModelAccess().getMapped_entitiesMappedEntityParserRuleCall_5_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_6);
                    	    lv_mapped_entities_8_0=ruleMappedEntity();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getModelRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"mapped_entities",
                    	      							lv_mapped_entities_8_0,
                    	      							"org.xtext.example.myxenia.MyXenia.MappedEntity");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);


                    }
                    break;

            }

            this_END_9=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_9, grammarAccess.getModelAccess().getENDTerminalRuleCall_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleSuperSite"
    // InternalMyXeniaParser.g:216:1: entryRuleSuperSite returns [EObject current=null] : iv_ruleSuperSite= ruleSuperSite EOF ;
    public final EObject entryRuleSuperSite() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSuperSite = null;


        try {
            // InternalMyXeniaParser.g:216:50: (iv_ruleSuperSite= ruleSuperSite EOF )
            // InternalMyXeniaParser.g:217:2: iv_ruleSuperSite= ruleSuperSite EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSuperSiteRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSuperSite=ruleSuperSite();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSuperSite; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSuperSite"


    // $ANTLR start "ruleSuperSite"
    // InternalMyXeniaParser.g:223:1: ruleSuperSite returns [EObject current=null] : (this_SuperSite_Impl_0= ruleSuperSite_Impl | this_SiteWithModal_1= ruleSiteWithModal | this_Site_2= ruleSite ) ;
    public final EObject ruleSuperSite() throws RecognitionException {
        EObject current = null;

        EObject this_SuperSite_Impl_0 = null;

        EObject this_SiteWithModal_1 = null;

        EObject this_Site_2 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:229:2: ( (this_SuperSite_Impl_0= ruleSuperSite_Impl | this_SiteWithModal_1= ruleSiteWithModal | this_Site_2= ruleSite ) )
            // InternalMyXeniaParser.g:230:2: (this_SuperSite_Impl_0= ruleSuperSite_Impl | this_SiteWithModal_1= ruleSiteWithModal | this_Site_2= ruleSite )
            {
            // InternalMyXeniaParser.g:230:2: (this_SuperSite_Impl_0= ruleSuperSite_Impl | this_SiteWithModal_1= ruleSiteWithModal | this_Site_2= ruleSite )
            int alt7=3;
            switch ( input.LA(1) ) {
            case SuperSite:
                {
                alt7=1;
                }
                break;
            case SiteWithModal:
                {
                alt7=2;
                }
                break;
            case Site:
                {
                alt7=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // InternalMyXeniaParser.g:231:3: this_SuperSite_Impl_0= ruleSuperSite_Impl
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSuperSiteAccess().getSuperSite_ImplParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SuperSite_Impl_0=ruleSuperSite_Impl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SuperSite_Impl_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:240:3: this_SiteWithModal_1= ruleSiteWithModal
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSuperSiteAccess().getSiteWithModalParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SiteWithModal_1=ruleSiteWithModal();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SiteWithModal_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyXeniaParser.g:249:3: this_Site_2= ruleSite
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSuperSiteAccess().getSiteParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Site_2=ruleSite();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Site_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuperSite"


    // $ANTLR start "entryRuleHeader"
    // InternalMyXeniaParser.g:261:1: entryRuleHeader returns [EObject current=null] : iv_ruleHeader= ruleHeader EOF ;
    public final EObject entryRuleHeader() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHeader = null;


        try {
            // InternalMyXeniaParser.g:261:47: (iv_ruleHeader= ruleHeader EOF )
            // InternalMyXeniaParser.g:262:2: iv_ruleHeader= ruleHeader EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHeaderRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHeader=ruleHeader();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHeader; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHeader"


    // $ANTLR start "ruleHeader"
    // InternalMyXeniaParser.g:268:1: ruleHeader returns [EObject current=null] : ( () otherlv_1= Header this_BEGIN_2= RULE_BEGIN (otherlv_3= AppName ( (lv_appName_4_0= ruleEString ) ) )? ( ( (lv_sites_5_0= ruleSuperSite ) ) ( (lv_sites_6_0= ruleSuperSite ) )* )? this_END_7= RULE_END ) ;
    public final EObject ruleHeader() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_2=null;
        Token otherlv_3=null;
        Token this_END_7=null;
        AntlrDatatypeRuleToken lv_appName_4_0 = null;

        EObject lv_sites_5_0 = null;

        EObject lv_sites_6_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:274:2: ( ( () otherlv_1= Header this_BEGIN_2= RULE_BEGIN (otherlv_3= AppName ( (lv_appName_4_0= ruleEString ) ) )? ( ( (lv_sites_5_0= ruleSuperSite ) ) ( (lv_sites_6_0= ruleSuperSite ) )* )? this_END_7= RULE_END ) )
            // InternalMyXeniaParser.g:275:2: ( () otherlv_1= Header this_BEGIN_2= RULE_BEGIN (otherlv_3= AppName ( (lv_appName_4_0= ruleEString ) ) )? ( ( (lv_sites_5_0= ruleSuperSite ) ) ( (lv_sites_6_0= ruleSuperSite ) )* )? this_END_7= RULE_END )
            {
            // InternalMyXeniaParser.g:275:2: ( () otherlv_1= Header this_BEGIN_2= RULE_BEGIN (otherlv_3= AppName ( (lv_appName_4_0= ruleEString ) ) )? ( ( (lv_sites_5_0= ruleSuperSite ) ) ( (lv_sites_6_0= ruleSuperSite ) )* )? this_END_7= RULE_END )
            // InternalMyXeniaParser.g:276:3: () otherlv_1= Header this_BEGIN_2= RULE_BEGIN (otherlv_3= AppName ( (lv_appName_4_0= ruleEString ) ) )? ( ( (lv_sites_5_0= ruleSuperSite ) ) ( (lv_sites_6_0= ruleSuperSite ) )* )? this_END_7= RULE_END
            {
            // InternalMyXeniaParser.g:276:3: ()
            // InternalMyXeniaParser.g:277:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getHeaderAccess().getHeaderAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Header,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getHeaderAccess().getHeaderKeyword_1());
              		
            }
            this_BEGIN_2=(Token)match(input,RULE_BEGIN,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_2, grammarAccess.getHeaderAccess().getBEGINTerminalRuleCall_2());
              		
            }
            // InternalMyXeniaParser.g:291:3: (otherlv_3= AppName ( (lv_appName_4_0= ruleEString ) ) )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==AppName) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalMyXeniaParser.g:292:4: otherlv_3= AppName ( (lv_appName_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,AppName,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getHeaderAccess().getAppNameKeyword_3_0());
                      			
                    }
                    // InternalMyXeniaParser.g:296:4: ( (lv_appName_4_0= ruleEString ) )
                    // InternalMyXeniaParser.g:297:5: (lv_appName_4_0= ruleEString )
                    {
                    // InternalMyXeniaParser.g:297:5: (lv_appName_4_0= ruleEString )
                    // InternalMyXeniaParser.g:298:6: lv_appName_4_0= ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHeaderAccess().getAppNameEStringParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_appName_4_0=ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHeaderRule());
                      						}
                      						set(
                      							current,
                      							"appName",
                      							lv_appName_4_0,
                      							"org.xtext.example.myxenia.MyXenia.EString");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyXeniaParser.g:316:3: ( ( (lv_sites_5_0= ruleSuperSite ) ) ( (lv_sites_6_0= ruleSuperSite ) )* )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==SiteWithModal||LA10_0==SuperSite||LA10_0==Site) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalMyXeniaParser.g:317:4: ( (lv_sites_5_0= ruleSuperSite ) ) ( (lv_sites_6_0= ruleSuperSite ) )*
                    {
                    // InternalMyXeniaParser.g:317:4: ( (lv_sites_5_0= ruleSuperSite ) )
                    // InternalMyXeniaParser.g:318:5: (lv_sites_5_0= ruleSuperSite )
                    {
                    // InternalMyXeniaParser.g:318:5: (lv_sites_5_0= ruleSuperSite )
                    // InternalMyXeniaParser.g:319:6: lv_sites_5_0= ruleSuperSite
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHeaderAccess().getSitesSuperSiteParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_sites_5_0=ruleSuperSite();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHeaderRule());
                      						}
                      						add(
                      							current,
                      							"sites",
                      							lv_sites_5_0,
                      							"org.xtext.example.myxenia.MyXenia.SuperSite");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:336:4: ( (lv_sites_6_0= ruleSuperSite ) )*
                    loop9:
                    do {
                        int alt9=2;
                        int LA9_0 = input.LA(1);

                        if ( (LA9_0==SiteWithModal||LA9_0==SuperSite||LA9_0==Site) ) {
                            alt9=1;
                        }


                        switch (alt9) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:337:5: (lv_sites_6_0= ruleSuperSite )
                    	    {
                    	    // InternalMyXeniaParser.g:337:5: (lv_sites_6_0= ruleSuperSite )
                    	    // InternalMyXeniaParser.g:338:6: lv_sites_6_0= ruleSuperSite
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getHeaderAccess().getSitesSuperSiteParserRuleCall_4_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_9);
                    	    lv_sites_6_0=ruleSuperSite();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getHeaderRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"sites",
                    	      							lv_sites_6_0,
                    	      							"org.xtext.example.myxenia.MyXenia.SuperSite");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop9;
                        }
                    } while (true);


                    }
                    break;

            }

            this_END_7=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_7, grammarAccess.getHeaderAccess().getENDTerminalRuleCall_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHeader"


    // $ANTLR start "entryRuleEntity"
    // InternalMyXeniaParser.g:364:1: entryRuleEntity returns [EObject current=null] : iv_ruleEntity= ruleEntity EOF ;
    public final EObject entryRuleEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEntity = null;


        try {
            // InternalMyXeniaParser.g:364:47: (iv_ruleEntity= ruleEntity EOF )
            // InternalMyXeniaParser.g:365:2: iv_ruleEntity= ruleEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEntityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEntity=ruleEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEntity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEntity"


    // $ANTLR start "ruleEntity"
    // InternalMyXeniaParser.g:371:1: ruleEntity returns [EObject current=null] : ( () otherlv_1= Entity this_BEGIN_2= RULE_BEGIN (otherlv_3= Tech ( (lv_tech_4_0= ruleEString ) ) )? (otherlv_5= Path ( (lv_path_6_0= ruleEString ) ) )? (otherlv_7= Mode ( (lv_mode_8_0= ruleMode ) ) )? this_END_9= RULE_END ) ;
    public final EObject ruleEntity() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token this_END_9=null;
        AntlrDatatypeRuleToken lv_tech_4_0 = null;

        AntlrDatatypeRuleToken lv_path_6_0 = null;

        Enumerator lv_mode_8_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:377:2: ( ( () otherlv_1= Entity this_BEGIN_2= RULE_BEGIN (otherlv_3= Tech ( (lv_tech_4_0= ruleEString ) ) )? (otherlv_5= Path ( (lv_path_6_0= ruleEString ) ) )? (otherlv_7= Mode ( (lv_mode_8_0= ruleMode ) ) )? this_END_9= RULE_END ) )
            // InternalMyXeniaParser.g:378:2: ( () otherlv_1= Entity this_BEGIN_2= RULE_BEGIN (otherlv_3= Tech ( (lv_tech_4_0= ruleEString ) ) )? (otherlv_5= Path ( (lv_path_6_0= ruleEString ) ) )? (otherlv_7= Mode ( (lv_mode_8_0= ruleMode ) ) )? this_END_9= RULE_END )
            {
            // InternalMyXeniaParser.g:378:2: ( () otherlv_1= Entity this_BEGIN_2= RULE_BEGIN (otherlv_3= Tech ( (lv_tech_4_0= ruleEString ) ) )? (otherlv_5= Path ( (lv_path_6_0= ruleEString ) ) )? (otherlv_7= Mode ( (lv_mode_8_0= ruleMode ) ) )? this_END_9= RULE_END )
            // InternalMyXeniaParser.g:379:3: () otherlv_1= Entity this_BEGIN_2= RULE_BEGIN (otherlv_3= Tech ( (lv_tech_4_0= ruleEString ) ) )? (otherlv_5= Path ( (lv_path_6_0= ruleEString ) ) )? (otherlv_7= Mode ( (lv_mode_8_0= ruleMode ) ) )? this_END_9= RULE_END
            {
            // InternalMyXeniaParser.g:379:3: ()
            // InternalMyXeniaParser.g:380:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getEntityAccess().getEntityAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Entity,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getEntityAccess().getEntityKeyword_1());
              		
            }
            this_BEGIN_2=(Token)match(input,RULE_BEGIN,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_2, grammarAccess.getEntityAccess().getBEGINTerminalRuleCall_2());
              		
            }
            // InternalMyXeniaParser.g:394:3: (otherlv_3= Tech ( (lv_tech_4_0= ruleEString ) ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==Tech) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalMyXeniaParser.g:395:4: otherlv_3= Tech ( (lv_tech_4_0= ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,Tech,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getEntityAccess().getTechKeyword_3_0());
                      			
                    }
                    // InternalMyXeniaParser.g:399:4: ( (lv_tech_4_0= ruleEString ) )
                    // InternalMyXeniaParser.g:400:5: (lv_tech_4_0= ruleEString )
                    {
                    // InternalMyXeniaParser.g:400:5: (lv_tech_4_0= ruleEString )
                    // InternalMyXeniaParser.g:401:6: lv_tech_4_0= ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEntityAccess().getTechEStringParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_tech_4_0=ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEntityRule());
                      						}
                      						set(
                      							current,
                      							"tech",
                      							lv_tech_4_0,
                      							"org.xtext.example.myxenia.MyXenia.EString");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyXeniaParser.g:419:3: (otherlv_5= Path ( (lv_path_6_0= ruleEString ) ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==Path) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalMyXeniaParser.g:420:4: otherlv_5= Path ( (lv_path_6_0= ruleEString ) )
                    {
                    otherlv_5=(Token)match(input,Path,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getEntityAccess().getPathKeyword_4_0());
                      			
                    }
                    // InternalMyXeniaParser.g:424:4: ( (lv_path_6_0= ruleEString ) )
                    // InternalMyXeniaParser.g:425:5: (lv_path_6_0= ruleEString )
                    {
                    // InternalMyXeniaParser.g:425:5: (lv_path_6_0= ruleEString )
                    // InternalMyXeniaParser.g:426:6: lv_path_6_0= ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEntityAccess().getPathEStringParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_path_6_0=ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEntityRule());
                      						}
                      						set(
                      							current,
                      							"path",
                      							lv_path_6_0,
                      							"org.xtext.example.myxenia.MyXenia.EString");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyXeniaParser.g:444:3: (otherlv_7= Mode ( (lv_mode_8_0= ruleMode ) ) )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==Mode) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalMyXeniaParser.g:445:4: otherlv_7= Mode ( (lv_mode_8_0= ruleMode ) )
                    {
                    otherlv_7=(Token)match(input,Mode,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getEntityAccess().getModeKeyword_5_0());
                      			
                    }
                    // InternalMyXeniaParser.g:449:4: ( (lv_mode_8_0= ruleMode ) )
                    // InternalMyXeniaParser.g:450:5: (lv_mode_8_0= ruleMode )
                    {
                    // InternalMyXeniaParser.g:450:5: (lv_mode_8_0= ruleMode )
                    // InternalMyXeniaParser.g:451:6: lv_mode_8_0= ruleMode
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEntityAccess().getModeModeEnumRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_mode_8_0=ruleMode();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEntityRule());
                      						}
                      						set(
                      							current,
                      							"mode",
                      							lv_mode_8_0,
                      							"org.xtext.example.myxenia.MyXenia.Mode");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            this_END_9=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_9, grammarAccess.getEntityAccess().getENDTerminalRuleCall_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEntity"


    // $ANTLR start "entryRuleMappedEntity"
    // InternalMyXeniaParser.g:477:1: entryRuleMappedEntity returns [EObject current=null] : iv_ruleMappedEntity= ruleMappedEntity EOF ;
    public final EObject entryRuleMappedEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMappedEntity = null;


        try {
            // InternalMyXeniaParser.g:477:53: (iv_ruleMappedEntity= ruleMappedEntity EOF )
            // InternalMyXeniaParser.g:478:2: iv_ruleMappedEntity= ruleMappedEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMappedEntityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMappedEntity=ruleMappedEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMappedEntity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMappedEntity"


    // $ANTLR start "ruleMappedEntity"
    // InternalMyXeniaParser.g:484:1: ruleMappedEntity returns [EObject current=null] : ( () otherlv_1= MappedEntity this_BEGIN_2= RULE_BEGIN ( ( (lv_infoProps_3_0= ruleInfoProperty ) ) ( (lv_infoProps_4_0= ruleInfoProperty ) )* )? ( ( (lv_linkedProps_5_0= ruleLinkedProperty ) ) ( (lv_linkedProps_6_0= ruleLinkedProperty ) )* )? this_END_7= RULE_END ) ;
    public final EObject ruleMappedEntity() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_2=null;
        Token this_END_7=null;
        EObject lv_infoProps_3_0 = null;

        EObject lv_infoProps_4_0 = null;

        EObject lv_linkedProps_5_0 = null;

        EObject lv_linkedProps_6_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:490:2: ( ( () otherlv_1= MappedEntity this_BEGIN_2= RULE_BEGIN ( ( (lv_infoProps_3_0= ruleInfoProperty ) ) ( (lv_infoProps_4_0= ruleInfoProperty ) )* )? ( ( (lv_linkedProps_5_0= ruleLinkedProperty ) ) ( (lv_linkedProps_6_0= ruleLinkedProperty ) )* )? this_END_7= RULE_END ) )
            // InternalMyXeniaParser.g:491:2: ( () otherlv_1= MappedEntity this_BEGIN_2= RULE_BEGIN ( ( (lv_infoProps_3_0= ruleInfoProperty ) ) ( (lv_infoProps_4_0= ruleInfoProperty ) )* )? ( ( (lv_linkedProps_5_0= ruleLinkedProperty ) ) ( (lv_linkedProps_6_0= ruleLinkedProperty ) )* )? this_END_7= RULE_END )
            {
            // InternalMyXeniaParser.g:491:2: ( () otherlv_1= MappedEntity this_BEGIN_2= RULE_BEGIN ( ( (lv_infoProps_3_0= ruleInfoProperty ) ) ( (lv_infoProps_4_0= ruleInfoProperty ) )* )? ( ( (lv_linkedProps_5_0= ruleLinkedProperty ) ) ( (lv_linkedProps_6_0= ruleLinkedProperty ) )* )? this_END_7= RULE_END )
            // InternalMyXeniaParser.g:492:3: () otherlv_1= MappedEntity this_BEGIN_2= RULE_BEGIN ( ( (lv_infoProps_3_0= ruleInfoProperty ) ) ( (lv_infoProps_4_0= ruleInfoProperty ) )* )? ( ( (lv_linkedProps_5_0= ruleLinkedProperty ) ) ( (lv_linkedProps_6_0= ruleLinkedProperty ) )* )? this_END_7= RULE_END
            {
            // InternalMyXeniaParser.g:492:3: ()
            // InternalMyXeniaParser.g:493:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMappedEntityAccess().getMappedEntityAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,MappedEntity,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMappedEntityAccess().getMappedEntityKeyword_1());
              		
            }
            this_BEGIN_2=(Token)match(input,RULE_BEGIN,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_2, grammarAccess.getMappedEntityAccess().getBEGINTerminalRuleCall_2());
              		
            }
            // InternalMyXeniaParser.g:507:3: ( ( (lv_infoProps_3_0= ruleInfoProperty ) ) ( (lv_infoProps_4_0= ruleInfoProperty ) )* )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==InfoProperty) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalMyXeniaParser.g:508:4: ( (lv_infoProps_3_0= ruleInfoProperty ) ) ( (lv_infoProps_4_0= ruleInfoProperty ) )*
                    {
                    // InternalMyXeniaParser.g:508:4: ( (lv_infoProps_3_0= ruleInfoProperty ) )
                    // InternalMyXeniaParser.g:509:5: (lv_infoProps_3_0= ruleInfoProperty )
                    {
                    // InternalMyXeniaParser.g:509:5: (lv_infoProps_3_0= ruleInfoProperty )
                    // InternalMyXeniaParser.g:510:6: lv_infoProps_3_0= ruleInfoProperty
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMappedEntityAccess().getInfoPropsInfoPropertyParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_infoProps_3_0=ruleInfoProperty();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMappedEntityRule());
                      						}
                      						add(
                      							current,
                      							"infoProps",
                      							lv_infoProps_3_0,
                      							"org.xtext.example.myxenia.MyXenia.InfoProperty");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:527:4: ( (lv_infoProps_4_0= ruleInfoProperty ) )*
                    loop14:
                    do {
                        int alt14=2;
                        int LA14_0 = input.LA(1);

                        if ( (LA14_0==InfoProperty) ) {
                            alt14=1;
                        }


                        switch (alt14) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:528:5: (lv_infoProps_4_0= ruleInfoProperty )
                    	    {
                    	    // InternalMyXeniaParser.g:528:5: (lv_infoProps_4_0= ruleInfoProperty )
                    	    // InternalMyXeniaParser.g:529:6: lv_infoProps_4_0= ruleInfoProperty
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getMappedEntityAccess().getInfoPropsInfoPropertyParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_infoProps_4_0=ruleInfoProperty();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getMappedEntityRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"infoProps",
                    	      							lv_infoProps_4_0,
                    	      							"org.xtext.example.myxenia.MyXenia.InfoProperty");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop14;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalMyXeniaParser.g:547:3: ( ( (lv_linkedProps_5_0= ruleLinkedProperty ) ) ( (lv_linkedProps_6_0= ruleLinkedProperty ) )* )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==LinkedProperty) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // InternalMyXeniaParser.g:548:4: ( (lv_linkedProps_5_0= ruleLinkedProperty ) ) ( (lv_linkedProps_6_0= ruleLinkedProperty ) )*
                    {
                    // InternalMyXeniaParser.g:548:4: ( (lv_linkedProps_5_0= ruleLinkedProperty ) )
                    // InternalMyXeniaParser.g:549:5: (lv_linkedProps_5_0= ruleLinkedProperty )
                    {
                    // InternalMyXeniaParser.g:549:5: (lv_linkedProps_5_0= ruleLinkedProperty )
                    // InternalMyXeniaParser.g:550:6: lv_linkedProps_5_0= ruleLinkedProperty
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMappedEntityAccess().getLinkedPropsLinkedPropertyParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_linkedProps_5_0=ruleLinkedProperty();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMappedEntityRule());
                      						}
                      						add(
                      							current,
                      							"linkedProps",
                      							lv_linkedProps_5_0,
                      							"org.xtext.example.myxenia.MyXenia.LinkedProperty");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:567:4: ( (lv_linkedProps_6_0= ruleLinkedProperty ) )*
                    loop16:
                    do {
                        int alt16=2;
                        int LA16_0 = input.LA(1);

                        if ( (LA16_0==LinkedProperty) ) {
                            alt16=1;
                        }


                        switch (alt16) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:568:5: (lv_linkedProps_6_0= ruleLinkedProperty )
                    	    {
                    	    // InternalMyXeniaParser.g:568:5: (lv_linkedProps_6_0= ruleLinkedProperty )
                    	    // InternalMyXeniaParser.g:569:6: lv_linkedProps_6_0= ruleLinkedProperty
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getMappedEntityAccess().getLinkedPropsLinkedPropertyParserRuleCall_4_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_linkedProps_6_0=ruleLinkedProperty();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getMappedEntityRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"linkedProps",
                    	      							lv_linkedProps_6_0,
                    	      							"org.xtext.example.myxenia.MyXenia.LinkedProperty");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop16;
                        }
                    } while (true);


                    }
                    break;

            }

            this_END_7=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_7, grammarAccess.getMappedEntityAccess().getENDTerminalRuleCall_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMappedEntity"


    // $ANTLR start "entryRuleEString"
    // InternalMyXeniaParser.g:595:1: entryRuleEString returns [String current=null] : iv_ruleEString= ruleEString EOF ;
    public final String entryRuleEString() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEString = null;


        try {
            // InternalMyXeniaParser.g:595:47: (iv_ruleEString= ruleEString EOF )
            // InternalMyXeniaParser.g:596:2: iv_ruleEString= ruleEString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEString=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEString.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEString"


    // $ANTLR start "ruleEString"
    // InternalMyXeniaParser.g:602:1: ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID ) ;
    public final AntlrDatatypeRuleToken ruleEString() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_ID_1=null;


        	enterRule();

        try {
            // InternalMyXeniaParser.g:608:2: ( (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID ) )
            // InternalMyXeniaParser.g:609:2: (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID )
            {
            // InternalMyXeniaParser.g:609:2: (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_STRING) ) {
                alt18=1;
            }
            else if ( (LA18_0==RULE_ID) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalMyXeniaParser.g:610:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:618:3: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEString"


    // $ANTLR start "entryRuleSuperSite_Impl"
    // InternalMyXeniaParser.g:629:1: entryRuleSuperSite_Impl returns [EObject current=null] : iv_ruleSuperSite_Impl= ruleSuperSite_Impl EOF ;
    public final EObject entryRuleSuperSite_Impl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSuperSite_Impl = null;


        try {
            // InternalMyXeniaParser.g:629:55: (iv_ruleSuperSite_Impl= ruleSuperSite_Impl EOF )
            // InternalMyXeniaParser.g:630:2: iv_ruleSuperSite_Impl= ruleSuperSite_Impl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSuperSite_ImplRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSuperSite_Impl=ruleSuperSite_Impl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSuperSite_Impl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSuperSite_Impl"


    // $ANTLR start "ruleSuperSite_Impl"
    // InternalMyXeniaParser.g:636:1: ruleSuperSite_Impl returns [EObject current=null] : ( () otherlv_1= SuperSite ( (lv_name_2_0= ruleEString ) ) ) ;
    public final EObject ruleSuperSite_Impl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:642:2: ( ( () otherlv_1= SuperSite ( (lv_name_2_0= ruleEString ) ) ) )
            // InternalMyXeniaParser.g:643:2: ( () otherlv_1= SuperSite ( (lv_name_2_0= ruleEString ) ) )
            {
            // InternalMyXeniaParser.g:643:2: ( () otherlv_1= SuperSite ( (lv_name_2_0= ruleEString ) ) )
            // InternalMyXeniaParser.g:644:3: () otherlv_1= SuperSite ( (lv_name_2_0= ruleEString ) )
            {
            // InternalMyXeniaParser.g:644:3: ()
            // InternalMyXeniaParser.g:645:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSuperSite_ImplAccess().getSuperSiteAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,SuperSite,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSuperSite_ImplAccess().getSuperSiteKeyword_1());
              		
            }
            // InternalMyXeniaParser.g:655:3: ( (lv_name_2_0= ruleEString ) )
            // InternalMyXeniaParser.g:656:4: (lv_name_2_0= ruleEString )
            {
            // InternalMyXeniaParser.g:656:4: (lv_name_2_0= ruleEString )
            // InternalMyXeniaParser.g:657:5: lv_name_2_0= ruleEString
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSuperSite_ImplAccess().getNameEStringParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_2_0=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSuperSite_ImplRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.example.myxenia.MyXenia.EString");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSuperSite_Impl"


    // $ANTLR start "entryRuleSiteWithModal"
    // InternalMyXeniaParser.g:678:1: entryRuleSiteWithModal returns [EObject current=null] : iv_ruleSiteWithModal= ruleSiteWithModal EOF ;
    public final EObject entryRuleSiteWithModal() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSiteWithModal = null;


        try {
            // InternalMyXeniaParser.g:678:54: (iv_ruleSiteWithModal= ruleSiteWithModal EOF )
            // InternalMyXeniaParser.g:679:2: iv_ruleSiteWithModal= ruleSiteWithModal EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSiteWithModalRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSiteWithModal=ruleSiteWithModal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSiteWithModal; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSiteWithModal"


    // $ANTLR start "ruleSiteWithModal"
    // InternalMyXeniaParser.g:685:1: ruleSiteWithModal returns [EObject current=null] : ( () otherlv_1= SiteWithModal ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN ( ( (lv_sites_4_0= ruleSuperSite ) ) ( (lv_sites_5_0= ruleSuperSite ) )* )? this_END_6= RULE_END ) ;
    public final EObject ruleSiteWithModal() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_3=null;
        Token this_END_6=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_sites_4_0 = null;

        EObject lv_sites_5_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:691:2: ( ( () otherlv_1= SiteWithModal ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN ( ( (lv_sites_4_0= ruleSuperSite ) ) ( (lv_sites_5_0= ruleSuperSite ) )* )? this_END_6= RULE_END ) )
            // InternalMyXeniaParser.g:692:2: ( () otherlv_1= SiteWithModal ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN ( ( (lv_sites_4_0= ruleSuperSite ) ) ( (lv_sites_5_0= ruleSuperSite ) )* )? this_END_6= RULE_END )
            {
            // InternalMyXeniaParser.g:692:2: ( () otherlv_1= SiteWithModal ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN ( ( (lv_sites_4_0= ruleSuperSite ) ) ( (lv_sites_5_0= ruleSuperSite ) )* )? this_END_6= RULE_END )
            // InternalMyXeniaParser.g:693:3: () otherlv_1= SiteWithModal ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN ( ( (lv_sites_4_0= ruleSuperSite ) ) ( (lv_sites_5_0= ruleSuperSite ) )* )? this_END_6= RULE_END
            {
            // InternalMyXeniaParser.g:693:3: ()
            // InternalMyXeniaParser.g:694:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSiteWithModalAccess().getSiteWithModalAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,SiteWithModal,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSiteWithModalAccess().getSiteWithModalKeyword_1());
              		
            }
            // InternalMyXeniaParser.g:704:3: ( (lv_name_2_0= ruleEString ) )
            // InternalMyXeniaParser.g:705:4: (lv_name_2_0= ruleEString )
            {
            // InternalMyXeniaParser.g:705:4: (lv_name_2_0= ruleEString )
            // InternalMyXeniaParser.g:706:5: lv_name_2_0= ruleEString
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSiteWithModalAccess().getNameEStringParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_name_2_0=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSiteWithModalRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.example.myxenia.MyXenia.EString");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            this_BEGIN_3=(Token)match(input,RULE_BEGIN,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_3, grammarAccess.getSiteWithModalAccess().getBEGINTerminalRuleCall_3());
              		
            }
            // InternalMyXeniaParser.g:727:3: ( ( (lv_sites_4_0= ruleSuperSite ) ) ( (lv_sites_5_0= ruleSuperSite ) )* )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==SiteWithModal||LA20_0==SuperSite||LA20_0==Site) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // InternalMyXeniaParser.g:728:4: ( (lv_sites_4_0= ruleSuperSite ) ) ( (lv_sites_5_0= ruleSuperSite ) )*
                    {
                    // InternalMyXeniaParser.g:728:4: ( (lv_sites_4_0= ruleSuperSite ) )
                    // InternalMyXeniaParser.g:729:5: (lv_sites_4_0= ruleSuperSite )
                    {
                    // InternalMyXeniaParser.g:729:5: (lv_sites_4_0= ruleSuperSite )
                    // InternalMyXeniaParser.g:730:6: lv_sites_4_0= ruleSuperSite
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSiteWithModalAccess().getSitesSuperSiteParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_sites_4_0=ruleSuperSite();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSiteWithModalRule());
                      						}
                      						add(
                      							current,
                      							"sites",
                      							lv_sites_4_0,
                      							"org.xtext.example.myxenia.MyXenia.SuperSite");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:747:4: ( (lv_sites_5_0= ruleSuperSite ) )*
                    loop19:
                    do {
                        int alt19=2;
                        int LA19_0 = input.LA(1);

                        if ( (LA19_0==SiteWithModal||LA19_0==SuperSite||LA19_0==Site) ) {
                            alt19=1;
                        }


                        switch (alt19) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:748:5: (lv_sites_5_0= ruleSuperSite )
                    	    {
                    	    // InternalMyXeniaParser.g:748:5: (lv_sites_5_0= ruleSuperSite )
                    	    // InternalMyXeniaParser.g:749:6: lv_sites_5_0= ruleSuperSite
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getSiteWithModalAccess().getSitesSuperSiteParserRuleCall_4_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_9);
                    	    lv_sites_5_0=ruleSuperSite();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getSiteWithModalRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"sites",
                    	      							lv_sites_5_0,
                    	      							"org.xtext.example.myxenia.MyXenia.SuperSite");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop19;
                        }
                    } while (true);


                    }
                    break;

            }

            this_END_6=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_6, grammarAccess.getSiteWithModalAccess().getENDTerminalRuleCall_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSiteWithModal"


    // $ANTLR start "entryRuleSite"
    // InternalMyXeniaParser.g:775:1: entryRuleSite returns [EObject current=null] : iv_ruleSite= ruleSite EOF ;
    public final EObject entryRuleSite() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSite = null;


        try {
            // InternalMyXeniaParser.g:775:45: (iv_ruleSite= ruleSite EOF )
            // InternalMyXeniaParser.g:776:2: iv_ruleSite= ruleSite EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSiteRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSite=ruleSite();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSite; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSite"


    // $ANTLR start "ruleSite"
    // InternalMyXeniaParser.g:782:1: ruleSite returns [EObject current=null] : ( () otherlv_1= Site ( (lv_name_2_0= ruleEString ) ) ) ;
    public final EObject ruleSite() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:788:2: ( ( () otherlv_1= Site ( (lv_name_2_0= ruleEString ) ) ) )
            // InternalMyXeniaParser.g:789:2: ( () otherlv_1= Site ( (lv_name_2_0= ruleEString ) ) )
            {
            // InternalMyXeniaParser.g:789:2: ( () otherlv_1= Site ( (lv_name_2_0= ruleEString ) ) )
            // InternalMyXeniaParser.g:790:3: () otherlv_1= Site ( (lv_name_2_0= ruleEString ) )
            {
            // InternalMyXeniaParser.g:790:3: ()
            // InternalMyXeniaParser.g:791:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSiteAccess().getSiteAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Site,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSiteAccess().getSiteKeyword_1());
              		
            }
            // InternalMyXeniaParser.g:801:3: ( (lv_name_2_0= ruleEString ) )
            // InternalMyXeniaParser.g:802:4: (lv_name_2_0= ruleEString )
            {
            // InternalMyXeniaParser.g:802:4: (lv_name_2_0= ruleEString )
            // InternalMyXeniaParser.g:803:5: lv_name_2_0= ruleEString
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSiteAccess().getNameEStringParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_2_0=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSiteRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.example.myxenia.MyXenia.EString");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSite"


    // $ANTLR start "entryRuleInfoProperty"
    // InternalMyXeniaParser.g:824:1: entryRuleInfoProperty returns [EObject current=null] : iv_ruleInfoProperty= ruleInfoProperty EOF ;
    public final EObject entryRuleInfoProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInfoProperty = null;


        try {
            // InternalMyXeniaParser.g:824:53: (iv_ruleInfoProperty= ruleInfoProperty EOF )
            // InternalMyXeniaParser.g:825:2: iv_ruleInfoProperty= ruleInfoProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInfoPropertyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInfoProperty=ruleInfoProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInfoProperty; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInfoProperty"


    // $ANTLR start "ruleInfoProperty"
    // InternalMyXeniaParser.g:831:1: ruleInfoProperty returns [EObject current=null] : ( () otherlv_1= InfoProperty this_BEGIN_2= RULE_BEGIN (otherlv_3= Page ( ( ruleEString ) ) )? ( ( (lv_entities_5_0= ruleInfoEntity ) ) ( (lv_entities_6_0= ruleInfoEntity ) )* )? this_END_7= RULE_END ) ;
    public final EObject ruleInfoProperty() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_2=null;
        Token otherlv_3=null;
        Token this_END_7=null;
        EObject lv_entities_5_0 = null;

        EObject lv_entities_6_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:837:2: ( ( () otherlv_1= InfoProperty this_BEGIN_2= RULE_BEGIN (otherlv_3= Page ( ( ruleEString ) ) )? ( ( (lv_entities_5_0= ruleInfoEntity ) ) ( (lv_entities_6_0= ruleInfoEntity ) )* )? this_END_7= RULE_END ) )
            // InternalMyXeniaParser.g:838:2: ( () otherlv_1= InfoProperty this_BEGIN_2= RULE_BEGIN (otherlv_3= Page ( ( ruleEString ) ) )? ( ( (lv_entities_5_0= ruleInfoEntity ) ) ( (lv_entities_6_0= ruleInfoEntity ) )* )? this_END_7= RULE_END )
            {
            // InternalMyXeniaParser.g:838:2: ( () otherlv_1= InfoProperty this_BEGIN_2= RULE_BEGIN (otherlv_3= Page ( ( ruleEString ) ) )? ( ( (lv_entities_5_0= ruleInfoEntity ) ) ( (lv_entities_6_0= ruleInfoEntity ) )* )? this_END_7= RULE_END )
            // InternalMyXeniaParser.g:839:3: () otherlv_1= InfoProperty this_BEGIN_2= RULE_BEGIN (otherlv_3= Page ( ( ruleEString ) ) )? ( ( (lv_entities_5_0= ruleInfoEntity ) ) ( (lv_entities_6_0= ruleInfoEntity ) )* )? this_END_7= RULE_END
            {
            // InternalMyXeniaParser.g:839:3: ()
            // InternalMyXeniaParser.g:840:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getInfoPropertyAccess().getInfoPropertyAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,InfoProperty,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInfoPropertyAccess().getInfoPropertyKeyword_1());
              		
            }
            this_BEGIN_2=(Token)match(input,RULE_BEGIN,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_2, grammarAccess.getInfoPropertyAccess().getBEGINTerminalRuleCall_2());
              		
            }
            // InternalMyXeniaParser.g:854:3: (otherlv_3= Page ( ( ruleEString ) ) )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==Page) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalMyXeniaParser.g:855:4: otherlv_3= Page ( ( ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,Page,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getInfoPropertyAccess().getPageKeyword_3_0());
                      			
                    }
                    // InternalMyXeniaParser.g:859:4: ( ( ruleEString ) )
                    // InternalMyXeniaParser.g:860:5: ( ruleEString )
                    {
                    // InternalMyXeniaParser.g:860:5: ( ruleEString )
                    // InternalMyXeniaParser.g:861:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getInfoPropertyRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInfoPropertyAccess().getPageSiteCrossReference_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyXeniaParser.g:876:3: ( ( (lv_entities_5_0= ruleInfoEntity ) ) ( (lv_entities_6_0= ruleInfoEntity ) )* )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==InfoEntity) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalMyXeniaParser.g:877:4: ( (lv_entities_5_0= ruleInfoEntity ) ) ( (lv_entities_6_0= ruleInfoEntity ) )*
                    {
                    // InternalMyXeniaParser.g:877:4: ( (lv_entities_5_0= ruleInfoEntity ) )
                    // InternalMyXeniaParser.g:878:5: (lv_entities_5_0= ruleInfoEntity )
                    {
                    // InternalMyXeniaParser.g:878:5: (lv_entities_5_0= ruleInfoEntity )
                    // InternalMyXeniaParser.g:879:6: lv_entities_5_0= ruleInfoEntity
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInfoPropertyAccess().getEntitiesInfoEntityParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_entities_5_0=ruleInfoEntity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInfoPropertyRule());
                      						}
                      						add(
                      							current,
                      							"entities",
                      							lv_entities_5_0,
                      							"org.xtext.example.myxenia.MyXenia.InfoEntity");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:896:4: ( (lv_entities_6_0= ruleInfoEntity ) )*
                    loop22:
                    do {
                        int alt22=2;
                        int LA22_0 = input.LA(1);

                        if ( (LA22_0==InfoEntity) ) {
                            alt22=1;
                        }


                        switch (alt22) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:897:5: (lv_entities_6_0= ruleInfoEntity )
                    	    {
                    	    // InternalMyXeniaParser.g:897:5: (lv_entities_6_0= ruleInfoEntity )
                    	    // InternalMyXeniaParser.g:898:6: lv_entities_6_0= ruleInfoEntity
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getInfoPropertyAccess().getEntitiesInfoEntityParserRuleCall_4_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_18);
                    	    lv_entities_6_0=ruleInfoEntity();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getInfoPropertyRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"entities",
                    	      							lv_entities_6_0,
                    	      							"org.xtext.example.myxenia.MyXenia.InfoEntity");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop22;
                        }
                    } while (true);


                    }
                    break;

            }

            this_END_7=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_7, grammarAccess.getInfoPropertyAccess().getENDTerminalRuleCall_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInfoProperty"


    // $ANTLR start "entryRuleLinkedProperty"
    // InternalMyXeniaParser.g:924:1: entryRuleLinkedProperty returns [EObject current=null] : iv_ruleLinkedProperty= ruleLinkedProperty EOF ;
    public final EObject entryRuleLinkedProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLinkedProperty = null;


        try {
            // InternalMyXeniaParser.g:924:55: (iv_ruleLinkedProperty= ruleLinkedProperty EOF )
            // InternalMyXeniaParser.g:925:2: iv_ruleLinkedProperty= ruleLinkedProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLinkedPropertyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLinkedProperty=ruleLinkedProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLinkedProperty; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLinkedProperty"


    // $ANTLR start "ruleLinkedProperty"
    // InternalMyXeniaParser.g:931:1: ruleLinkedProperty returns [EObject current=null] : ( () otherlv_1= LinkedProperty this_BEGIN_2= RULE_BEGIN (otherlv_3= Name ( ( ruleEString ) ) )? ( (lv_page_5_0= ruleRedirectPage ) )? this_END_6= RULE_END ) ;
    public final EObject ruleLinkedProperty() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_2=null;
        Token otherlv_3=null;
        Token this_END_6=null;
        EObject lv_page_5_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:937:2: ( ( () otherlv_1= LinkedProperty this_BEGIN_2= RULE_BEGIN (otherlv_3= Name ( ( ruleEString ) ) )? ( (lv_page_5_0= ruleRedirectPage ) )? this_END_6= RULE_END ) )
            // InternalMyXeniaParser.g:938:2: ( () otherlv_1= LinkedProperty this_BEGIN_2= RULE_BEGIN (otherlv_3= Name ( ( ruleEString ) ) )? ( (lv_page_5_0= ruleRedirectPage ) )? this_END_6= RULE_END )
            {
            // InternalMyXeniaParser.g:938:2: ( () otherlv_1= LinkedProperty this_BEGIN_2= RULE_BEGIN (otherlv_3= Name ( ( ruleEString ) ) )? ( (lv_page_5_0= ruleRedirectPage ) )? this_END_6= RULE_END )
            // InternalMyXeniaParser.g:939:3: () otherlv_1= LinkedProperty this_BEGIN_2= RULE_BEGIN (otherlv_3= Name ( ( ruleEString ) ) )? ( (lv_page_5_0= ruleRedirectPage ) )? this_END_6= RULE_END
            {
            // InternalMyXeniaParser.g:939:3: ()
            // InternalMyXeniaParser.g:940:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLinkedPropertyAccess().getLinkedPropertyAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,LinkedProperty,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLinkedPropertyAccess().getLinkedPropertyKeyword_1());
              		
            }
            this_BEGIN_2=(Token)match(input,RULE_BEGIN,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_2, grammarAccess.getLinkedPropertyAccess().getBEGINTerminalRuleCall_2());
              		
            }
            // InternalMyXeniaParser.g:954:3: (otherlv_3= Name ( ( ruleEString ) ) )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==Name) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalMyXeniaParser.g:955:4: otherlv_3= Name ( ( ruleEString ) )
                    {
                    otherlv_3=(Token)match(input,Name,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getLinkedPropertyAccess().getNameKeyword_3_0());
                      			
                    }
                    // InternalMyXeniaParser.g:959:4: ( ( ruleEString ) )
                    // InternalMyXeniaParser.g:960:5: ( ruleEString )
                    {
                    // InternalMyXeniaParser.g:960:5: ( ruleEString )
                    // InternalMyXeniaParser.g:961:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLinkedPropertyRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLinkedPropertyAccess().getNameSiteCrossReference_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_20);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyXeniaParser.g:976:3: ( (lv_page_5_0= ruleRedirectPage ) )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==RedirectPage) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalMyXeniaParser.g:977:4: (lv_page_5_0= ruleRedirectPage )
                    {
                    // InternalMyXeniaParser.g:977:4: (lv_page_5_0= ruleRedirectPage )
                    // InternalMyXeniaParser.g:978:5: lv_page_5_0= ruleRedirectPage
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLinkedPropertyAccess().getPageRedirectPageParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_14);
                    lv_page_5_0=ruleRedirectPage();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLinkedPropertyRule());
                      					}
                      					set(
                      						current,
                      						"page",
                      						lv_page_5_0,
                      						"org.xtext.example.myxenia.MyXenia.RedirectPage");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            this_END_6=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_6, grammarAccess.getLinkedPropertyAccess().getENDTerminalRuleCall_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLinkedProperty"


    // $ANTLR start "entryRuleInfoEntity"
    // InternalMyXeniaParser.g:1003:1: entryRuleInfoEntity returns [EObject current=null] : iv_ruleInfoEntity= ruleInfoEntity EOF ;
    public final EObject entryRuleInfoEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInfoEntity = null;


        try {
            // InternalMyXeniaParser.g:1003:51: (iv_ruleInfoEntity= ruleInfoEntity EOF )
            // InternalMyXeniaParser.g:1004:2: iv_ruleInfoEntity= ruleInfoEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInfoEntityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInfoEntity=ruleInfoEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInfoEntity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInfoEntity"


    // $ANTLR start "ruleInfoEntity"
    // InternalMyXeniaParser.g:1010:1: ruleInfoEntity returns [EObject current=null] : ( () otherlv_1= InfoEntity this_BEGIN_2= RULE_BEGIN ( ( (lv_entries_3_0= ruleInfoEntry ) ) ( (lv_entries_4_0= ruleInfoEntry ) )* )? (otherlv_5= InfoValue ( (lv_infoValue_6_0= ruleEString ) ) )? this_END_7= RULE_END ) ;
    public final EObject ruleInfoEntity() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_2=null;
        Token otherlv_5=null;
        Token this_END_7=null;
        Enumerator lv_entries_3_0 = null;

        Enumerator lv_entries_4_0 = null;

        AntlrDatatypeRuleToken lv_infoValue_6_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:1016:2: ( ( () otherlv_1= InfoEntity this_BEGIN_2= RULE_BEGIN ( ( (lv_entries_3_0= ruleInfoEntry ) ) ( (lv_entries_4_0= ruleInfoEntry ) )* )? (otherlv_5= InfoValue ( (lv_infoValue_6_0= ruleEString ) ) )? this_END_7= RULE_END ) )
            // InternalMyXeniaParser.g:1017:2: ( () otherlv_1= InfoEntity this_BEGIN_2= RULE_BEGIN ( ( (lv_entries_3_0= ruleInfoEntry ) ) ( (lv_entries_4_0= ruleInfoEntry ) )* )? (otherlv_5= InfoValue ( (lv_infoValue_6_0= ruleEString ) ) )? this_END_7= RULE_END )
            {
            // InternalMyXeniaParser.g:1017:2: ( () otherlv_1= InfoEntity this_BEGIN_2= RULE_BEGIN ( ( (lv_entries_3_0= ruleInfoEntry ) ) ( (lv_entries_4_0= ruleInfoEntry ) )* )? (otherlv_5= InfoValue ( (lv_infoValue_6_0= ruleEString ) ) )? this_END_7= RULE_END )
            // InternalMyXeniaParser.g:1018:3: () otherlv_1= InfoEntity this_BEGIN_2= RULE_BEGIN ( ( (lv_entries_3_0= ruleInfoEntry ) ) ( (lv_entries_4_0= ruleInfoEntry ) )* )? (otherlv_5= InfoValue ( (lv_infoValue_6_0= ruleEString ) ) )? this_END_7= RULE_END
            {
            // InternalMyXeniaParser.g:1018:3: ()
            // InternalMyXeniaParser.g:1019:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getInfoEntityAccess().getInfoEntityAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,InfoEntity,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInfoEntityAccess().getInfoEntityKeyword_1());
              		
            }
            this_BEGIN_2=(Token)match(input,RULE_BEGIN,FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_2, grammarAccess.getInfoEntityAccess().getBEGINTerminalRuleCall_2());
              		
            }
            // InternalMyXeniaParser.g:1033:3: ( ( (lv_entries_3_0= ruleInfoEntry ) ) ( (lv_entries_4_0= ruleInfoEntry ) )* )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( ((LA27_0>=FREQ && LA27_0<=PRIO)||LA27_0==MOD) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalMyXeniaParser.g:1034:4: ( (lv_entries_3_0= ruleInfoEntry ) ) ( (lv_entries_4_0= ruleInfoEntry ) )*
                    {
                    // InternalMyXeniaParser.g:1034:4: ( (lv_entries_3_0= ruleInfoEntry ) )
                    // InternalMyXeniaParser.g:1035:5: (lv_entries_3_0= ruleInfoEntry )
                    {
                    // InternalMyXeniaParser.g:1035:5: (lv_entries_3_0= ruleInfoEntry )
                    // InternalMyXeniaParser.g:1036:6: lv_entries_3_0= ruleInfoEntry
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInfoEntityAccess().getEntriesInfoEntryEnumRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_entries_3_0=ruleInfoEntry();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInfoEntityRule());
                      						}
                      						add(
                      							current,
                      							"entries",
                      							lv_entries_3_0,
                      							"org.xtext.example.myxenia.MyXenia.InfoEntry");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:1053:4: ( (lv_entries_4_0= ruleInfoEntry ) )*
                    loop26:
                    do {
                        int alt26=2;
                        int LA26_0 = input.LA(1);

                        if ( ((LA26_0>=FREQ && LA26_0<=PRIO)||LA26_0==MOD) ) {
                            alt26=1;
                        }


                        switch (alt26) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:1054:5: (lv_entries_4_0= ruleInfoEntry )
                    	    {
                    	    // InternalMyXeniaParser.g:1054:5: (lv_entries_4_0= ruleInfoEntry )
                    	    // InternalMyXeniaParser.g:1055:6: lv_entries_4_0= ruleInfoEntry
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getInfoEntityAccess().getEntriesInfoEntryEnumRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_21);
                    	    lv_entries_4_0=ruleInfoEntry();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getInfoEntityRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"entries",
                    	      							lv_entries_4_0,
                    	      							"org.xtext.example.myxenia.MyXenia.InfoEntry");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop26;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalMyXeniaParser.g:1073:3: (otherlv_5= InfoValue ( (lv_infoValue_6_0= ruleEString ) ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==InfoValue) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalMyXeniaParser.g:1074:4: otherlv_5= InfoValue ( (lv_infoValue_6_0= ruleEString ) )
                    {
                    otherlv_5=(Token)match(input,InfoValue,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getInfoEntityAccess().getInfoValueKeyword_4_0());
                      			
                    }
                    // InternalMyXeniaParser.g:1078:4: ( (lv_infoValue_6_0= ruleEString ) )
                    // InternalMyXeniaParser.g:1079:5: (lv_infoValue_6_0= ruleEString )
                    {
                    // InternalMyXeniaParser.g:1079:5: (lv_infoValue_6_0= ruleEString )
                    // InternalMyXeniaParser.g:1080:6: lv_infoValue_6_0= ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInfoEntityAccess().getInfoValueEStringParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_infoValue_6_0=ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInfoEntityRule());
                      						}
                      						set(
                      							current,
                      							"infoValue",
                      							lv_infoValue_6_0,
                      							"org.xtext.example.myxenia.MyXenia.EString");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            this_END_7=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_7, grammarAccess.getInfoEntityAccess().getENDTerminalRuleCall_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInfoEntity"


    // $ANTLR start "entryRuleRedirectPage"
    // InternalMyXeniaParser.g:1106:1: entryRuleRedirectPage returns [EObject current=null] : iv_ruleRedirectPage= ruleRedirectPage EOF ;
    public final EObject entryRuleRedirectPage() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRedirectPage = null;


        try {
            // InternalMyXeniaParser.g:1106:53: (iv_ruleRedirectPage= ruleRedirectPage EOF )
            // InternalMyXeniaParser.g:1107:2: iv_ruleRedirectPage= ruleRedirectPage EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRedirectPageRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRedirectPage=ruleRedirectPage();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRedirectPage; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRedirectPage"


    // $ANTLR start "ruleRedirectPage"
    // InternalMyXeniaParser.g:1113:1: ruleRedirectPage returns [EObject current=null] : ( () otherlv_1= RedirectPage this_BEGIN_2= RULE_BEGIN (otherlv_3= Site_1 otherlv_4= LeftParenthesis ( ( ruleEString ) ) (otherlv_6= Comma ( ( ruleEString ) ) )* otherlv_8= RightParenthesis )? this_END_9= RULE_END ) ;
    public final EObject ruleRedirectPage() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token this_END_9=null;


        	enterRule();

        try {
            // InternalMyXeniaParser.g:1119:2: ( ( () otherlv_1= RedirectPage this_BEGIN_2= RULE_BEGIN (otherlv_3= Site_1 otherlv_4= LeftParenthesis ( ( ruleEString ) ) (otherlv_6= Comma ( ( ruleEString ) ) )* otherlv_8= RightParenthesis )? this_END_9= RULE_END ) )
            // InternalMyXeniaParser.g:1120:2: ( () otherlv_1= RedirectPage this_BEGIN_2= RULE_BEGIN (otherlv_3= Site_1 otherlv_4= LeftParenthesis ( ( ruleEString ) ) (otherlv_6= Comma ( ( ruleEString ) ) )* otherlv_8= RightParenthesis )? this_END_9= RULE_END )
            {
            // InternalMyXeniaParser.g:1120:2: ( () otherlv_1= RedirectPage this_BEGIN_2= RULE_BEGIN (otherlv_3= Site_1 otherlv_4= LeftParenthesis ( ( ruleEString ) ) (otherlv_6= Comma ( ( ruleEString ) ) )* otherlv_8= RightParenthesis )? this_END_9= RULE_END )
            // InternalMyXeniaParser.g:1121:3: () otherlv_1= RedirectPage this_BEGIN_2= RULE_BEGIN (otherlv_3= Site_1 otherlv_4= LeftParenthesis ( ( ruleEString ) ) (otherlv_6= Comma ( ( ruleEString ) ) )* otherlv_8= RightParenthesis )? this_END_9= RULE_END
            {
            // InternalMyXeniaParser.g:1121:3: ()
            // InternalMyXeniaParser.g:1122:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRedirectPageAccess().getRedirectPageAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,RedirectPage,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRedirectPageAccess().getRedirectPageKeyword_1());
              		
            }
            this_BEGIN_2=(Token)match(input,RULE_BEGIN,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_2, grammarAccess.getRedirectPageAccess().getBEGINTerminalRuleCall_2());
              		
            }
            // InternalMyXeniaParser.g:1136:3: (otherlv_3= Site_1 otherlv_4= LeftParenthesis ( ( ruleEString ) ) (otherlv_6= Comma ( ( ruleEString ) ) )* otherlv_8= RightParenthesis )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==Site_1) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalMyXeniaParser.g:1137:4: otherlv_3= Site_1 otherlv_4= LeftParenthesis ( ( ruleEString ) ) (otherlv_6= Comma ( ( ruleEString ) ) )* otherlv_8= RightParenthesis
                    {
                    otherlv_3=(Token)match(input,Site_1,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getRedirectPageAccess().getSiteKeyword_3_0());
                      			
                    }
                    otherlv_4=(Token)match(input,LeftParenthesis,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getRedirectPageAccess().getLeftParenthesisKeyword_3_1());
                      			
                    }
                    // InternalMyXeniaParser.g:1145:4: ( ( ruleEString ) )
                    // InternalMyXeniaParser.g:1146:5: ( ruleEString )
                    {
                    // InternalMyXeniaParser.g:1146:5: ( ruleEString )
                    // InternalMyXeniaParser.g:1147:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRedirectPageRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRedirectPageAccess().getSiteSiteCrossReference_3_2_0());
                      					
                    }
                    pushFollow(FOLLOW_24);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:1161:4: (otherlv_6= Comma ( ( ruleEString ) ) )*
                    loop29:
                    do {
                        int alt29=2;
                        int LA29_0 = input.LA(1);

                        if ( (LA29_0==Comma) ) {
                            alt29=1;
                        }


                        switch (alt29) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:1162:5: otherlv_6= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,Comma,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getRedirectPageAccess().getCommaKeyword_3_3_0());
                    	      				
                    	    }
                    	    // InternalMyXeniaParser.g:1166:5: ( ( ruleEString ) )
                    	    // InternalMyXeniaParser.g:1167:6: ( ruleEString )
                    	    {
                    	    // InternalMyXeniaParser.g:1167:6: ( ruleEString )
                    	    // InternalMyXeniaParser.g:1168:7: ruleEString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getRedirectPageRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getRedirectPageAccess().getSiteSiteCrossReference_3_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    ruleEString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop29;
                        }
                    } while (true);

                    otherlv_8=(Token)match(input,RightParenthesis,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getRedirectPageAccess().getRightParenthesisKeyword_3_4());
                      			
                    }

                    }
                    break;

            }

            this_END_9=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_9, grammarAccess.getRedirectPageAccess().getENDTerminalRuleCall_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRedirectPage"


    // $ANTLR start "entryRuleXBlockExpression"
    // InternalMyXeniaParser.g:1196:1: entryRuleXBlockExpression returns [EObject current=null] : iv_ruleXBlockExpression= ruleXBlockExpression EOF ;
    public final EObject entryRuleXBlockExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBlockExpression = null;


        try {
            // InternalMyXeniaParser.g:1196:57: (iv_ruleXBlockExpression= ruleXBlockExpression EOF )
            // InternalMyXeniaParser.g:1197:2: iv_ruleXBlockExpression= ruleXBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBlockExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBlockExpression=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBlockExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBlockExpression"


    // $ANTLR start "ruleXBlockExpression"
    // InternalMyXeniaParser.g:1203:1: ruleXBlockExpression returns [EObject current=null] : ( () this_BEGIN_1= RULE_BEGIN ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )* this_END_4= RULE_END ) ;
    public final EObject ruleXBlockExpression() throws RecognitionException {
        EObject current = null;

        Token this_BEGIN_1=null;
        Token otherlv_3=null;
        Token this_END_4=null;
        EObject lv_expressions_2_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:1209:2: ( ( () this_BEGIN_1= RULE_BEGIN ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )* this_END_4= RULE_END ) )
            // InternalMyXeniaParser.g:1210:2: ( () this_BEGIN_1= RULE_BEGIN ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )* this_END_4= RULE_END )
            {
            // InternalMyXeniaParser.g:1210:2: ( () this_BEGIN_1= RULE_BEGIN ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )* this_END_4= RULE_END )
            // InternalMyXeniaParser.g:1211:3: () this_BEGIN_1= RULE_BEGIN ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )* this_END_4= RULE_END
            {
            // InternalMyXeniaParser.g:1211:3: ()
            // InternalMyXeniaParser.g:1212:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
              					current);
              			
            }

            }

            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getXBlockExpressionAccess().getBEGINTerminalRuleCall_1());
              		
            }
            // InternalMyXeniaParser.g:1222:3: ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==Synchronized||LA32_0==Extension||LA32_0==Extends||(LA32_0>=Import && LA32_0<=Typeof)||(LA32_0>=False && LA32_0<=While)||LA32_0==Null||LA32_0==True||(LA32_0>=For && LA32_0<=Var)||(LA32_0>=Do && LA32_0<=If)||(LA32_0>=ExclamationMark && LA32_0<=NumberSign)||LA32_0==LeftParenthesis||LA32_0==PlusSign||LA32_0==HyphenMinus||LA32_0==LessThanSign||LA32_0==LeftSquareBracket||LA32_0==RULE_BEGIN||(LA32_0>=RULE_HEX && LA32_0<=RULE_STRING)) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // InternalMyXeniaParser.g:1223:4: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )?
            	    {
            	    // InternalMyXeniaParser.g:1223:4: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalMyXeniaParser.g:1224:5: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalMyXeniaParser.g:1224:5: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    // InternalMyXeniaParser.g:1225:6: lv_expressions_2_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_26);
            	    lv_expressions_2_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expressions",
            	      							lv_expressions_2_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalMyXeniaParser.g:1242:4: (otherlv_3= Semicolon )?
            	    int alt31=2;
            	    int LA31_0 = input.LA(1);

            	    if ( (LA31_0==Semicolon) ) {
            	        alt31=1;
            	    }
            	    switch (alt31) {
            	        case 1 :
            	            // InternalMyXeniaParser.g:1243:5: otherlv_3= Semicolon
            	            {
            	            otherlv_3=(Token)match(input,Semicolon,FOLLOW_25); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

            this_END_4=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_4, grammarAccess.getXBlockExpressionAccess().getENDTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBlockExpression"


    // $ANTLR start "entryRuleXExpression"
    // InternalMyXeniaParser.g:1257:1: entryRuleXExpression returns [EObject current=null] : iv_ruleXExpression= ruleXExpression EOF ;
    public final EObject entryRuleXExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpression = null;


        try {
            // InternalMyXeniaParser.g:1257:52: (iv_ruleXExpression= ruleXExpression EOF )
            // InternalMyXeniaParser.g:1258:2: iv_ruleXExpression= ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpression=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // InternalMyXeniaParser.g:1264:1: ruleXExpression returns [EObject current=null] : this_XAssignment_0= ruleXAssignment ;
    public final EObject ruleXExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAssignment_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:1270:2: (this_XAssignment_0= ruleXAssignment )
            // InternalMyXeniaParser.g:1271:2: this_XAssignment_0= ruleXAssignment
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_XAssignment_0=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_XAssignment_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleXAssignment"
    // InternalMyXeniaParser.g:1282:1: entryRuleXAssignment returns [EObject current=null] : iv_ruleXAssignment= ruleXAssignment EOF ;
    public final EObject entryRuleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAssignment = null;


        try {
            // InternalMyXeniaParser.g:1282:52: (iv_ruleXAssignment= ruleXAssignment EOF )
            // InternalMyXeniaParser.g:1283:2: iv_ruleXAssignment= ruleXAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAssignment=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAssignment"


    // $ANTLR start "ruleXAssignment"
    // InternalMyXeniaParser.g:1289:1: ruleXAssignment returns [EObject current=null] : ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) ;
    public final EObject ruleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject lv_value_3_0 = null;

        EObject this_XOrExpression_4 = null;

        EObject lv_rightOperand_7_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:1295:2: ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) )
            // InternalMyXeniaParser.g:1296:2: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            {
            // InternalMyXeniaParser.g:1296:2: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            int alt34=2;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA34_1 = input.LA(2);

                if ( (LA34_1==EOF||LA34_1==Synchronized||LA34_1==Instanceof||LA34_1==Extension||(LA34_1>=Default && LA34_1<=Finally)||(LA34_1>=Import && LA34_1<=Typeof)||(LA34_1>=Catch && LA34_1<=While)||(LA34_1>=Case && LA34_1<=Else)||LA34_1==Null||(LA34_1>=True && LA34_1<=EqualsSignEqualsSignEqualsSign)||(LA34_1>=For && LA34_1<=PercentSign)||(LA34_1>=LeftParenthesis && LA34_1<=LessThanSign)||LA34_1==GreaterThanSign||(LA34_1>=LeftSquareBracket && LA34_1<=LeftCurlyBracket)||(LA34_1>=RightCurlyBracket && LA34_1<=RULE_STRING)) ) {
                    alt34=2;
                }
                else if ( (LA34_1==EqualsSign) ) {
                    alt34=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 1, input);

                    throw nvae;
                }
                }
                break;
            case Extends:
                {
                int LA34_2 = input.LA(2);

                if ( (LA34_2==EOF||LA34_2==Synchronized||LA34_2==Instanceof||LA34_2==Extension||(LA34_2>=Default && LA34_2<=Finally)||(LA34_2>=Import && LA34_2<=Typeof)||(LA34_2>=Catch && LA34_2<=While)||(LA34_2>=Case && LA34_2<=Else)||LA34_2==Null||(LA34_2>=True && LA34_2<=EqualsSignEqualsSignEqualsSign)||(LA34_2>=For && LA34_2<=PercentSign)||(LA34_2>=LeftParenthesis && LA34_2<=LessThanSign)||LA34_2==GreaterThanSign||(LA34_2>=LeftSquareBracket && LA34_2<=LeftCurlyBracket)||(LA34_2>=RightCurlyBracket && LA34_2<=RULE_STRING)) ) {
                    alt34=2;
                }
                else if ( (LA34_2==EqualsSign) ) {
                    alt34=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 2, input);

                    throw nvae;
                }
                }
                break;
            case Static:
                {
                int LA34_3 = input.LA(2);

                if ( (LA34_3==EqualsSign) ) {
                    alt34=1;
                }
                else if ( (LA34_3==EOF||LA34_3==Synchronized||LA34_3==Instanceof||LA34_3==Extension||(LA34_3>=Default && LA34_3<=Finally)||(LA34_3>=Import && LA34_3<=Typeof)||(LA34_3>=Catch && LA34_3<=While)||(LA34_3>=Case && LA34_3<=Else)||LA34_3==Null||(LA34_3>=True && LA34_3<=EqualsSignEqualsSignEqualsSign)||(LA34_3>=For && LA34_3<=PercentSign)||(LA34_3>=LeftParenthesis && LA34_3<=LessThanSign)||LA34_3==GreaterThanSign||(LA34_3>=LeftSquareBracket && LA34_3<=LeftCurlyBracket)||(LA34_3>=RightCurlyBracket && LA34_3<=RULE_STRING)) ) {
                    alt34=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 3, input);

                    throw nvae;
                }
                }
                break;
            case Import:
                {
                int LA34_4 = input.LA(2);

                if ( (LA34_4==EqualsSign) ) {
                    alt34=1;
                }
                else if ( (LA34_4==EOF||LA34_4==Synchronized||LA34_4==Instanceof||LA34_4==Extension||(LA34_4>=Default && LA34_4<=Finally)||(LA34_4>=Import && LA34_4<=Typeof)||(LA34_4>=Catch && LA34_4<=While)||(LA34_4>=Case && LA34_4<=Else)||LA34_4==Null||(LA34_4>=True && LA34_4<=EqualsSignEqualsSignEqualsSign)||(LA34_4>=For && LA34_4<=PercentSign)||(LA34_4>=LeftParenthesis && LA34_4<=LessThanSign)||LA34_4==GreaterThanSign||(LA34_4>=LeftSquareBracket && LA34_4<=LeftCurlyBracket)||(LA34_4>=RightCurlyBracket && LA34_4<=RULE_STRING)) ) {
                    alt34=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 4, input);

                    throw nvae;
                }
                }
                break;
            case Extension:
                {
                int LA34_5 = input.LA(2);

                if ( (LA34_5==EOF||LA34_5==Synchronized||LA34_5==Instanceof||LA34_5==Extension||(LA34_5>=Default && LA34_5<=Finally)||(LA34_5>=Import && LA34_5<=Typeof)||(LA34_5>=Catch && LA34_5<=While)||(LA34_5>=Case && LA34_5<=Else)||LA34_5==Null||(LA34_5>=True && LA34_5<=EqualsSignEqualsSignEqualsSign)||(LA34_5>=For && LA34_5<=PercentSign)||(LA34_5>=LeftParenthesis && LA34_5<=LessThanSign)||LA34_5==GreaterThanSign||(LA34_5>=LeftSquareBracket && LA34_5<=LeftCurlyBracket)||(LA34_5>=RightCurlyBracket && LA34_5<=RULE_STRING)) ) {
                    alt34=2;
                }
                else if ( (LA34_5==EqualsSign) ) {
                    alt34=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 5, input);

                    throw nvae;
                }
                }
                break;
            case Synchronized:
            case Return:
            case Switch:
            case Typeof:
            case False:
            case Super:
            case Throw:
            case While:
            case Null:
            case True:
            case For:
            case New:
            case Try:
            case Do:
            case If:
            case ExclamationMark:
            case NumberSign:
            case LeftParenthesis:
            case PlusSign:
            case HyphenMinus:
            case LessThanSign:
            case LeftSquareBracket:
            case RULE_BEGIN:
            case RULE_HEX:
            case RULE_INT:
            case RULE_DECIMAL:
            case RULE_STRING:
                {
                alt34=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }

            switch (alt34) {
                case 1 :
                    // InternalMyXeniaParser.g:1297:3: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    {
                    // InternalMyXeniaParser.g:1297:3: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    // InternalMyXeniaParser.g:1298:4: () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) )
                    {
                    // InternalMyXeniaParser.g:1298:4: ()
                    // InternalMyXeniaParser.g:1299:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalMyXeniaParser.g:1305:4: ( ( ruleFeatureCallID ) )
                    // InternalMyXeniaParser.g:1306:5: ( ruleFeatureCallID )
                    {
                    // InternalMyXeniaParser.g:1306:5: ( ruleFeatureCallID )
                    // InternalMyXeniaParser.g:1307:6: ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXAssignmentRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_27);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2());
                      			
                    }
                    pushFollow(FOLLOW_28);
                    ruleOpSingleAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalMyXeniaParser.g:1328:4: ( (lv_value_3_0= ruleXAssignment ) )
                    // InternalMyXeniaParser.g:1329:5: (lv_value_3_0= ruleXAssignment )
                    {
                    // InternalMyXeniaParser.g:1329:5: (lv_value_3_0= ruleXAssignment )
                    // InternalMyXeniaParser.g:1330:6: lv_value_3_0= ruleXAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=ruleXAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:1349:3: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    {
                    // InternalMyXeniaParser.g:1349:3: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    // InternalMyXeniaParser.g:1350:4: this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_29);
                    this_XOrExpression_4=ruleXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XOrExpression_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalMyXeniaParser.g:1358:4: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    int alt33=2;
                    alt33 = dfa33.predict(input);
                    switch (alt33) {
                        case 1 :
                            // InternalMyXeniaParser.g:1359:5: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            {
                            // InternalMyXeniaParser.g:1359:5: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) )
                            // InternalMyXeniaParser.g:1360:6: ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) )
                            {
                            // InternalMyXeniaParser.g:1370:6: ( () ( ( ruleOpMultiAssign ) ) )
                            // InternalMyXeniaParser.g:1371:7: () ( ( ruleOpMultiAssign ) )
                            {
                            // InternalMyXeniaParser.g:1371:7: ()
                            // InternalMyXeniaParser.g:1372:8: 
                            {
                            if ( state.backtracking==0 ) {

                              								current = forceCreateModelElementAndSet(
                              									grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
                              									current);
                              							
                            }

                            }

                            // InternalMyXeniaParser.g:1378:7: ( ( ruleOpMultiAssign ) )
                            // InternalMyXeniaParser.g:1379:8: ( ruleOpMultiAssign )
                            {
                            // InternalMyXeniaParser.g:1379:8: ( ruleOpMultiAssign )
                            // InternalMyXeniaParser.g:1380:9: ruleOpMultiAssign
                            {
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getXAssignmentRule());
                              									}
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
                              								
                            }
                            pushFollow(FOLLOW_28);
                            ruleOpMultiAssign();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }


                            }


                            }

                            // InternalMyXeniaParser.g:1396:5: ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            // InternalMyXeniaParser.g:1397:6: (lv_rightOperand_7_0= ruleXAssignment )
                            {
                            // InternalMyXeniaParser.g:1397:6: (lv_rightOperand_7_0= ruleXAssignment )
                            // InternalMyXeniaParser.g:1398:7: lv_rightOperand_7_0= ruleXAssignment
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_rightOperand_7_0=ruleXAssignment();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              							}
                              							set(
                              								current,
                              								"rightOperand",
                              								lv_rightOperand_7_0,
                              								"org.eclipse.xtext.xbase.Xbase.XAssignment");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAssignment"


    // $ANTLR start "entryRuleOpSingleAssign"
    // InternalMyXeniaParser.g:1421:1: entryRuleOpSingleAssign returns [String current=null] : iv_ruleOpSingleAssign= ruleOpSingleAssign EOF ;
    public final String entryRuleOpSingleAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpSingleAssign = null;


        try {
            // InternalMyXeniaParser.g:1421:54: (iv_ruleOpSingleAssign= ruleOpSingleAssign EOF )
            // InternalMyXeniaParser.g:1422:2: iv_ruleOpSingleAssign= ruleOpSingleAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpSingleAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpSingleAssign=ruleOpSingleAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpSingleAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpSingleAssign"


    // $ANTLR start "ruleOpSingleAssign"
    // InternalMyXeniaParser.g:1428:1: ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= EqualsSign ;
    public final AntlrDatatypeRuleToken ruleOpSingleAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyXeniaParser.g:1434:2: (kw= EqualsSign )
            // InternalMyXeniaParser.g:1435:2: kw= EqualsSign
            {
            kw=(Token)match(input,EqualsSign,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpSingleAssign"


    // $ANTLR start "entryRuleOpMultiAssign"
    // InternalMyXeniaParser.g:1443:1: entryRuleOpMultiAssign returns [String current=null] : iv_ruleOpMultiAssign= ruleOpMultiAssign EOF ;
    public final String entryRuleOpMultiAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMultiAssign = null;


        try {
            // InternalMyXeniaParser.g:1443:53: (iv_ruleOpMultiAssign= ruleOpMultiAssign EOF )
            // InternalMyXeniaParser.g:1444:2: iv_ruleOpMultiAssign= ruleOpMultiAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMultiAssign=ruleOpMultiAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMultiAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMultiAssign"


    // $ANTLR start "ruleOpMultiAssign"
    // InternalMyXeniaParser.g:1450:1: ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= PlusSignEqualsSign | kw= HyphenMinusEqualsSign | kw= AsteriskEqualsSign | kw= SolidusEqualsSign | kw= PercentSignEqualsSign | (kw= LessThanSign kw= LessThanSign kw= EqualsSign ) | (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign ) ) ;
    public final AntlrDatatypeRuleToken ruleOpMultiAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyXeniaParser.g:1456:2: ( (kw= PlusSignEqualsSign | kw= HyphenMinusEqualsSign | kw= AsteriskEqualsSign | kw= SolidusEqualsSign | kw= PercentSignEqualsSign | (kw= LessThanSign kw= LessThanSign kw= EqualsSign ) | (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign ) ) )
            // InternalMyXeniaParser.g:1457:2: (kw= PlusSignEqualsSign | kw= HyphenMinusEqualsSign | kw= AsteriskEqualsSign | kw= SolidusEqualsSign | kw= PercentSignEqualsSign | (kw= LessThanSign kw= LessThanSign kw= EqualsSign ) | (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign ) )
            {
            // InternalMyXeniaParser.g:1457:2: (kw= PlusSignEqualsSign | kw= HyphenMinusEqualsSign | kw= AsteriskEqualsSign | kw= SolidusEqualsSign | kw= PercentSignEqualsSign | (kw= LessThanSign kw= LessThanSign kw= EqualsSign ) | (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign ) )
            int alt36=7;
            switch ( input.LA(1) ) {
            case PlusSignEqualsSign:
                {
                alt36=1;
                }
                break;
            case HyphenMinusEqualsSign:
                {
                alt36=2;
                }
                break;
            case AsteriskEqualsSign:
                {
                alt36=3;
                }
                break;
            case SolidusEqualsSign:
                {
                alt36=4;
                }
                break;
            case PercentSignEqualsSign:
                {
                alt36=5;
                }
                break;
            case LessThanSign:
                {
                alt36=6;
                }
                break;
            case GreaterThanSign:
                {
                alt36=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }

            switch (alt36) {
                case 1 :
                    // InternalMyXeniaParser.g:1458:3: kw= PlusSignEqualsSign
                    {
                    kw=(Token)match(input,PlusSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:1464:3: kw= HyphenMinusEqualsSign
                    {
                    kw=(Token)match(input,HyphenMinusEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyXeniaParser.g:1470:3: kw= AsteriskEqualsSign
                    {
                    kw=(Token)match(input,AsteriskEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyXeniaParser.g:1476:3: kw= SolidusEqualsSign
                    {
                    kw=(Token)match(input,SolidusEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMyXeniaParser.g:1482:3: kw= PercentSignEqualsSign
                    {
                    kw=(Token)match(input,PercentSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalMyXeniaParser.g:1488:3: (kw= LessThanSign kw= LessThanSign kw= EqualsSign )
                    {
                    // InternalMyXeniaParser.g:1488:3: (kw= LessThanSign kw= LessThanSign kw= EqualsSign )
                    // InternalMyXeniaParser.g:1489:4: kw= LessThanSign kw= LessThanSign kw= EqualsSign
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_0());
                      			
                    }
                    kw=(Token)match(input,LessThanSign,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_1());
                      			
                    }
                    kw=(Token)match(input,EqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_5_2());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalMyXeniaParser.g:1506:3: (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign )
                    {
                    // InternalMyXeniaParser.g:1506:3: (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign )
                    // InternalMyXeniaParser.g:1507:4: kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_0());
                      			
                    }
                    // InternalMyXeniaParser.g:1512:4: (kw= GreaterThanSign )?
                    int alt35=2;
                    int LA35_0 = input.LA(1);

                    if ( (LA35_0==GreaterThanSign) ) {
                        alt35=1;
                    }
                    switch (alt35) {
                        case 1 :
                            // InternalMyXeniaParser.g:1513:5: kw= GreaterThanSign
                            {
                            kw=(Token)match(input,GreaterThanSign,FOLLOW_32); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_1());
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_6_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMultiAssign"


    // $ANTLR start "entryRuleXOrExpression"
    // InternalMyXeniaParser.g:1529:1: entryRuleXOrExpression returns [EObject current=null] : iv_ruleXOrExpression= ruleXOrExpression EOF ;
    public final EObject entryRuleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOrExpression = null;


        try {
            // InternalMyXeniaParser.g:1529:54: (iv_ruleXOrExpression= ruleXOrExpression EOF )
            // InternalMyXeniaParser.g:1530:2: iv_ruleXOrExpression= ruleXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOrExpression=ruleXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOrExpression"


    // $ANTLR start "ruleXOrExpression"
    // InternalMyXeniaParser.g:1536:1: ruleXOrExpression returns [EObject current=null] : (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) ;
    public final EObject ruleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAndExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:1542:2: ( (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) )
            // InternalMyXeniaParser.g:1543:2: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            {
            // InternalMyXeniaParser.g:1543:2: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            // InternalMyXeniaParser.g:1544:3: this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_33);
            this_XAndExpression_0=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyXeniaParser.g:1552:3: ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( (LA37_0==VerticalLineVerticalLine) ) {
                    int LA37_2 = input.LA(2);

                    if ( (synpred2_InternalMyXeniaParser()) ) {
                        alt37=1;
                    }


                }


                switch (alt37) {
            	case 1 :
            	    // InternalMyXeniaParser.g:1553:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    {
            	    // InternalMyXeniaParser.g:1553:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) )
            	    // InternalMyXeniaParser.g:1554:5: ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) )
            	    {
            	    // InternalMyXeniaParser.g:1564:5: ( () ( ( ruleOpOr ) ) )
            	    // InternalMyXeniaParser.g:1565:6: () ( ( ruleOpOr ) )
            	    {
            	    // InternalMyXeniaParser.g:1565:6: ()
            	    // InternalMyXeniaParser.g:1566:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalMyXeniaParser.g:1572:6: ( ( ruleOpOr ) )
            	    // InternalMyXeniaParser.g:1573:7: ( ruleOpOr )
            	    {
            	    // InternalMyXeniaParser.g:1573:7: ( ruleOpOr )
            	    // InternalMyXeniaParser.g:1574:8: ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXOrExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_28);
            	    ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalMyXeniaParser.g:1590:4: ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    // InternalMyXeniaParser.g:1591:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    {
            	    // InternalMyXeniaParser.g:1591:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    // InternalMyXeniaParser.g:1592:6: lv_rightOperand_3_0= ruleXAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_33);
            	    lv_rightOperand_3_0=ruleXAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XAndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOrExpression"


    // $ANTLR start "entryRuleOpOr"
    // InternalMyXeniaParser.g:1614:1: entryRuleOpOr returns [String current=null] : iv_ruleOpOr= ruleOpOr EOF ;
    public final String entryRuleOpOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOr = null;


        try {
            // InternalMyXeniaParser.g:1614:44: (iv_ruleOpOr= ruleOpOr EOF )
            // InternalMyXeniaParser.g:1615:2: iv_ruleOpOr= ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // InternalMyXeniaParser.g:1621:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= VerticalLineVerticalLine ;
    public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyXeniaParser.g:1627:2: (kw= VerticalLineVerticalLine )
            // InternalMyXeniaParser.g:1628:2: kw= VerticalLineVerticalLine
            {
            kw=(Token)match(input,VerticalLineVerticalLine,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleXAndExpression"
    // InternalMyXeniaParser.g:1636:1: entryRuleXAndExpression returns [EObject current=null] : iv_ruleXAndExpression= ruleXAndExpression EOF ;
    public final EObject entryRuleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAndExpression = null;


        try {
            // InternalMyXeniaParser.g:1636:55: (iv_ruleXAndExpression= ruleXAndExpression EOF )
            // InternalMyXeniaParser.g:1637:2: iv_ruleXAndExpression= ruleXAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAndExpression=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAndExpression"


    // $ANTLR start "ruleXAndExpression"
    // InternalMyXeniaParser.g:1643:1: ruleXAndExpression returns [EObject current=null] : (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) ;
    public final EObject ruleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XEqualityExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:1649:2: ( (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) )
            // InternalMyXeniaParser.g:1650:2: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            {
            // InternalMyXeniaParser.g:1650:2: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            // InternalMyXeniaParser.g:1651:3: this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_34);
            this_XEqualityExpression_0=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XEqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyXeniaParser.g:1659:3: ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==AmpersandAmpersand) ) {
                    int LA38_2 = input.LA(2);

                    if ( (synpred3_InternalMyXeniaParser()) ) {
                        alt38=1;
                    }


                }


                switch (alt38) {
            	case 1 :
            	    // InternalMyXeniaParser.g:1660:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    {
            	    // InternalMyXeniaParser.g:1660:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) )
            	    // InternalMyXeniaParser.g:1661:5: ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) )
            	    {
            	    // InternalMyXeniaParser.g:1671:5: ( () ( ( ruleOpAnd ) ) )
            	    // InternalMyXeniaParser.g:1672:6: () ( ( ruleOpAnd ) )
            	    {
            	    // InternalMyXeniaParser.g:1672:6: ()
            	    // InternalMyXeniaParser.g:1673:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalMyXeniaParser.g:1679:6: ( ( ruleOpAnd ) )
            	    // InternalMyXeniaParser.g:1680:7: ( ruleOpAnd )
            	    {
            	    // InternalMyXeniaParser.g:1680:7: ( ruleOpAnd )
            	    // InternalMyXeniaParser.g:1681:8: ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXAndExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_28);
            	    ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalMyXeniaParser.g:1697:4: ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    // InternalMyXeniaParser.g:1698:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    {
            	    // InternalMyXeniaParser.g:1698:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    // InternalMyXeniaParser.g:1699:6: lv_rightOperand_3_0= ruleXEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_34);
            	    lv_rightOperand_3_0=ruleXEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XEqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAndExpression"


    // $ANTLR start "entryRuleOpAnd"
    // InternalMyXeniaParser.g:1721:1: entryRuleOpAnd returns [String current=null] : iv_ruleOpAnd= ruleOpAnd EOF ;
    public final String entryRuleOpAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAnd = null;


        try {
            // InternalMyXeniaParser.g:1721:45: (iv_ruleOpAnd= ruleOpAnd EOF )
            // InternalMyXeniaParser.g:1722:2: iv_ruleOpAnd= ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // InternalMyXeniaParser.g:1728:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= AmpersandAmpersand ;
    public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyXeniaParser.g:1734:2: (kw= AmpersandAmpersand )
            // InternalMyXeniaParser.g:1735:2: kw= AmpersandAmpersand
            {
            kw=(Token)match(input,AmpersandAmpersand,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleXEqualityExpression"
    // InternalMyXeniaParser.g:1743:1: entryRuleXEqualityExpression returns [EObject current=null] : iv_ruleXEqualityExpression= ruleXEqualityExpression EOF ;
    public final EObject entryRuleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXEqualityExpression = null;


        try {
            // InternalMyXeniaParser.g:1743:60: (iv_ruleXEqualityExpression= ruleXEqualityExpression EOF )
            // InternalMyXeniaParser.g:1744:2: iv_ruleXEqualityExpression= ruleXEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXEqualityExpression=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXEqualityExpression"


    // $ANTLR start "ruleXEqualityExpression"
    // InternalMyXeniaParser.g:1750:1: ruleXEqualityExpression returns [EObject current=null] : (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) ;
    public final EObject ruleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XRelationalExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:1756:2: ( (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) )
            // InternalMyXeniaParser.g:1757:2: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            {
            // InternalMyXeniaParser.g:1757:2: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            // InternalMyXeniaParser.g:1758:3: this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_35);
            this_XRelationalExpression_0=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XRelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyXeniaParser.g:1766:3: ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            loop39:
            do {
                int alt39=2;
                switch ( input.LA(1) ) {
                case EqualsSignEqualsSign:
                    {
                    int LA39_2 = input.LA(2);

                    if ( (synpred4_InternalMyXeniaParser()) ) {
                        alt39=1;
                    }


                    }
                    break;
                case ExclamationMarkEqualsSign:
                    {
                    int LA39_3 = input.LA(2);

                    if ( (synpred4_InternalMyXeniaParser()) ) {
                        alt39=1;
                    }


                    }
                    break;
                case EqualsSignEqualsSignEqualsSign:
                    {
                    int LA39_4 = input.LA(2);

                    if ( (synpred4_InternalMyXeniaParser()) ) {
                        alt39=1;
                    }


                    }
                    break;
                case ExclamationMarkEqualsSignEqualsSign:
                    {
                    int LA39_5 = input.LA(2);

                    if ( (synpred4_InternalMyXeniaParser()) ) {
                        alt39=1;
                    }


                    }
                    break;

                }

                switch (alt39) {
            	case 1 :
            	    // InternalMyXeniaParser.g:1767:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    {
            	    // InternalMyXeniaParser.g:1767:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) )
            	    // InternalMyXeniaParser.g:1768:5: ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) )
            	    {
            	    // InternalMyXeniaParser.g:1778:5: ( () ( ( ruleOpEquality ) ) )
            	    // InternalMyXeniaParser.g:1779:6: () ( ( ruleOpEquality ) )
            	    {
            	    // InternalMyXeniaParser.g:1779:6: ()
            	    // InternalMyXeniaParser.g:1780:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalMyXeniaParser.g:1786:6: ( ( ruleOpEquality ) )
            	    // InternalMyXeniaParser.g:1787:7: ( ruleOpEquality )
            	    {
            	    // InternalMyXeniaParser.g:1787:7: ( ruleOpEquality )
            	    // InternalMyXeniaParser.g:1788:8: ruleOpEquality
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXEqualityExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_28);
            	    ruleOpEquality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalMyXeniaParser.g:1804:4: ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    // InternalMyXeniaParser.g:1805:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    {
            	    // InternalMyXeniaParser.g:1805:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    // InternalMyXeniaParser.g:1806:6: lv_rightOperand_3_0= ruleXRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_rightOperand_3_0=ruleXRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XRelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXEqualityExpression"


    // $ANTLR start "entryRuleOpEquality"
    // InternalMyXeniaParser.g:1828:1: entryRuleOpEquality returns [String current=null] : iv_ruleOpEquality= ruleOpEquality EOF ;
    public final String entryRuleOpEquality() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpEquality = null;


        try {
            // InternalMyXeniaParser.g:1828:50: (iv_ruleOpEquality= ruleOpEquality EOF )
            // InternalMyXeniaParser.g:1829:2: iv_ruleOpEquality= ruleOpEquality EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpEqualityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpEquality=ruleOpEquality();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpEquality.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpEquality"


    // $ANTLR start "ruleOpEquality"
    // InternalMyXeniaParser.g:1835:1: ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSignEqualsSignEqualsSign | kw= ExclamationMarkEqualsSignEqualsSign ) ;
    public final AntlrDatatypeRuleToken ruleOpEquality() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyXeniaParser.g:1841:2: ( (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSignEqualsSignEqualsSign | kw= ExclamationMarkEqualsSignEqualsSign ) )
            // InternalMyXeniaParser.g:1842:2: (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSignEqualsSignEqualsSign | kw= ExclamationMarkEqualsSignEqualsSign )
            {
            // InternalMyXeniaParser.g:1842:2: (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSignEqualsSignEqualsSign | kw= ExclamationMarkEqualsSignEqualsSign )
            int alt40=4;
            switch ( input.LA(1) ) {
            case EqualsSignEqualsSign:
                {
                alt40=1;
                }
                break;
            case ExclamationMarkEqualsSign:
                {
                alt40=2;
                }
                break;
            case EqualsSignEqualsSignEqualsSign:
                {
                alt40=3;
                }
                break;
            case ExclamationMarkEqualsSignEqualsSign:
                {
                alt40=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }

            switch (alt40) {
                case 1 :
                    // InternalMyXeniaParser.g:1843:3: kw= EqualsSignEqualsSign
                    {
                    kw=(Token)match(input,EqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:1849:3: kw= ExclamationMarkEqualsSign
                    {
                    kw=(Token)match(input,ExclamationMarkEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyXeniaParser.g:1855:3: kw= EqualsSignEqualsSignEqualsSign
                    {
                    kw=(Token)match(input,EqualsSignEqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyXeniaParser.g:1861:3: kw= ExclamationMarkEqualsSignEqualsSign
                    {
                    kw=(Token)match(input,ExclamationMarkEqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpEquality"


    // $ANTLR start "entryRuleXRelationalExpression"
    // InternalMyXeniaParser.g:1870:1: entryRuleXRelationalExpression returns [EObject current=null] : iv_ruleXRelationalExpression= ruleXRelationalExpression EOF ;
    public final EObject entryRuleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXRelationalExpression = null;


        try {
            // InternalMyXeniaParser.g:1870:62: (iv_ruleXRelationalExpression= ruleXRelationalExpression EOF )
            // InternalMyXeniaParser.g:1871:2: iv_ruleXRelationalExpression= ruleXRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXRelationalExpression=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXRelationalExpression"


    // $ANTLR start "ruleXRelationalExpression"
    // InternalMyXeniaParser.g:1877:1: ruleXRelationalExpression returns [EObject current=null] : (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) ;
    public final EObject ruleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XOtherOperatorExpression_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_rightOperand_6_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:1883:2: ( (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) )
            // InternalMyXeniaParser.g:1884:2: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            {
            // InternalMyXeniaParser.g:1884:2: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            // InternalMyXeniaParser.g:1885:3: this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_36);
            this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XOtherOperatorExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyXeniaParser.g:1893:3: ( ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            loop41:
            do {
                int alt41=3;
                switch ( input.LA(1) ) {
                case LessThanSign:
                    {
                    int LA41_2 = input.LA(2);

                    if ( (synpred6_InternalMyXeniaParser()) ) {
                        alt41=2;
                    }


                    }
                    break;
                case GreaterThanSign:
                    {
                    int LA41_3 = input.LA(2);

                    if ( (synpred6_InternalMyXeniaParser()) ) {
                        alt41=2;
                    }


                    }
                    break;
                case Instanceof:
                    {
                    int LA41_4 = input.LA(2);

                    if ( (synpred5_InternalMyXeniaParser()) ) {
                        alt41=1;
                    }


                    }
                    break;
                case GreaterThanSignEqualsSign:
                    {
                    int LA41_5 = input.LA(2);

                    if ( (synpred6_InternalMyXeniaParser()) ) {
                        alt41=2;
                    }


                    }
                    break;

                }

                switch (alt41) {
            	case 1 :
            	    // InternalMyXeniaParser.g:1894:4: ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    {
            	    // InternalMyXeniaParser.g:1894:4: ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    // InternalMyXeniaParser.g:1895:5: ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalMyXeniaParser.g:1895:5: ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) )
            	    // InternalMyXeniaParser.g:1896:6: ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof )
            	    {
            	    // InternalMyXeniaParser.g:1902:6: ( () otherlv_2= Instanceof )
            	    // InternalMyXeniaParser.g:1903:7: () otherlv_2= Instanceof
            	    {
            	    // InternalMyXeniaParser.g:1903:7: ()
            	    // InternalMyXeniaParser.g:1904:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    otherlv_2=(Token)match(input,Instanceof,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
            	      						
            	    }

            	    }


            	    }

            	    // InternalMyXeniaParser.g:1916:5: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalMyXeniaParser.g:1917:6: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalMyXeniaParser.g:1917:6: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalMyXeniaParser.g:1918:7: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_36);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"type",
            	      								lv_type_3_0,
            	      								"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMyXeniaParser.g:1937:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    {
            	    // InternalMyXeniaParser.g:1937:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    // InternalMyXeniaParser.g:1938:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    {
            	    // InternalMyXeniaParser.g:1938:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) )
            	    // InternalMyXeniaParser.g:1939:6: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) )
            	    {
            	    // InternalMyXeniaParser.g:1949:6: ( () ( ( ruleOpCompare ) ) )
            	    // InternalMyXeniaParser.g:1950:7: () ( ( ruleOpCompare ) )
            	    {
            	    // InternalMyXeniaParser.g:1950:7: ()
            	    // InternalMyXeniaParser.g:1951:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalMyXeniaParser.g:1957:7: ( ( ruleOpCompare ) )
            	    // InternalMyXeniaParser.g:1958:8: ( ruleOpCompare )
            	    {
            	    // InternalMyXeniaParser.g:1958:8: ( ruleOpCompare )
            	    // InternalMyXeniaParser.g:1959:9: ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getXRelationalExpressionRule());
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_28);
            	    ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalMyXeniaParser.g:1975:5: ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    // InternalMyXeniaParser.g:1976:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    {
            	    // InternalMyXeniaParser.g:1976:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    // InternalMyXeniaParser.g:1977:7: lv_rightOperand_6_0= ruleXOtherOperatorExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_36);
            	    lv_rightOperand_6_0=ruleXOtherOperatorExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"rightOperand",
            	      								lv_rightOperand_6_0,
            	      								"org.eclipse.xtext.xbase.Xbase.XOtherOperatorExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXRelationalExpression"


    // $ANTLR start "entryRuleOpCompare"
    // InternalMyXeniaParser.g:2000:1: entryRuleOpCompare returns [String current=null] : iv_ruleOpCompare= ruleOpCompare EOF ;
    public final String entryRuleOpCompare() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpCompare = null;


        try {
            // InternalMyXeniaParser.g:2000:49: (iv_ruleOpCompare= ruleOpCompare EOF )
            // InternalMyXeniaParser.g:2001:2: iv_ruleOpCompare= ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpCompareRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // InternalMyXeniaParser.g:2007:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= GreaterThanSignEqualsSign | (kw= LessThanSign kw= EqualsSign ) | kw= GreaterThanSign | kw= LessThanSign ) ;
    public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyXeniaParser.g:2013:2: ( (kw= GreaterThanSignEqualsSign | (kw= LessThanSign kw= EqualsSign ) | kw= GreaterThanSign | kw= LessThanSign ) )
            // InternalMyXeniaParser.g:2014:2: (kw= GreaterThanSignEqualsSign | (kw= LessThanSign kw= EqualsSign ) | kw= GreaterThanSign | kw= LessThanSign )
            {
            // InternalMyXeniaParser.g:2014:2: (kw= GreaterThanSignEqualsSign | (kw= LessThanSign kw= EqualsSign ) | kw= GreaterThanSign | kw= LessThanSign )
            int alt42=4;
            switch ( input.LA(1) ) {
            case GreaterThanSignEqualsSign:
                {
                alt42=1;
                }
                break;
            case LessThanSign:
                {
                int LA42_2 = input.LA(2);

                if ( (LA42_2==EOF||LA42_2==Synchronized||LA42_2==Extension||LA42_2==Extends||(LA42_2>=Import && LA42_2<=Typeof)||(LA42_2>=False && LA42_2<=While)||LA42_2==Null||LA42_2==True||(LA42_2>=For && LA42_2<=Try)||(LA42_2>=Do && LA42_2<=If)||(LA42_2>=ExclamationMark && LA42_2<=NumberSign)||LA42_2==LeftParenthesis||LA42_2==PlusSign||LA42_2==HyphenMinus||LA42_2==LessThanSign||LA42_2==LeftSquareBracket||LA42_2==RULE_BEGIN||(LA42_2>=RULE_HEX && LA42_2<=RULE_STRING)) ) {
                    alt42=4;
                }
                else if ( (LA42_2==EqualsSign) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 2, input);

                    throw nvae;
                }
                }
                break;
            case GreaterThanSign:
                {
                alt42=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }

            switch (alt42) {
                case 1 :
                    // InternalMyXeniaParser.g:2015:3: kw= GreaterThanSignEqualsSign
                    {
                    kw=(Token)match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:2021:3: (kw= LessThanSign kw= EqualsSign )
                    {
                    // InternalMyXeniaParser.g:2021:3: (kw= LessThanSign kw= EqualsSign )
                    // InternalMyXeniaParser.g:2022:4: kw= LessThanSign kw= EqualsSign
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0());
                      			
                    }
                    kw=(Token)match(input,EqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyXeniaParser.g:2034:3: kw= GreaterThanSign
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyXeniaParser.g:2040:3: kw= LessThanSign
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleXOtherOperatorExpression"
    // InternalMyXeniaParser.g:2049:1: entryRuleXOtherOperatorExpression returns [EObject current=null] : iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF ;
    public final EObject entryRuleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOtherOperatorExpression = null;


        try {
            // InternalMyXeniaParser.g:2049:65: (iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF )
            // InternalMyXeniaParser.g:2050:2: iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOtherOperatorExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOtherOperatorExpression"


    // $ANTLR start "ruleXOtherOperatorExpression"
    // InternalMyXeniaParser.g:2056:1: ruleXOtherOperatorExpression returns [EObject current=null] : (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) ;
    public final EObject ruleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAdditiveExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:2062:2: ( (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) )
            // InternalMyXeniaParser.g:2063:2: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            {
            // InternalMyXeniaParser.g:2063:2: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            // InternalMyXeniaParser.g:2064:3: this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_38);
            this_XAdditiveExpression_0=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAdditiveExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyXeniaParser.g:2072:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            loop43:
            do {
                int alt43=2;
                alt43 = dfa43.predict(input);
                switch (alt43) {
            	case 1 :
            	    // InternalMyXeniaParser.g:2073:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    {
            	    // InternalMyXeniaParser.g:2073:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) )
            	    // InternalMyXeniaParser.g:2074:5: ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) )
            	    {
            	    // InternalMyXeniaParser.g:2084:5: ( () ( ( ruleOpOther ) ) )
            	    // InternalMyXeniaParser.g:2085:6: () ( ( ruleOpOther ) )
            	    {
            	    // InternalMyXeniaParser.g:2085:6: ()
            	    // InternalMyXeniaParser.g:2086:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalMyXeniaParser.g:2092:6: ( ( ruleOpOther ) )
            	    // InternalMyXeniaParser.g:2093:7: ( ruleOpOther )
            	    {
            	    // InternalMyXeniaParser.g:2093:7: ( ruleOpOther )
            	    // InternalMyXeniaParser.g:2094:8: ruleOpOther
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_28);
            	    ruleOpOther();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalMyXeniaParser.g:2110:4: ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    // InternalMyXeniaParser.g:2111:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    {
            	    // InternalMyXeniaParser.g:2111:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    // InternalMyXeniaParser.g:2112:6: lv_rightOperand_3_0= ruleXAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_rightOperand_3_0=ruleXAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XAdditiveExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOtherOperatorExpression"


    // $ANTLR start "entryRuleOpOther"
    // InternalMyXeniaParser.g:2134:1: entryRuleOpOther returns [String current=null] : iv_ruleOpOther= ruleOpOther EOF ;
    public final String entryRuleOpOther() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOther = null;


        try {
            // InternalMyXeniaParser.g:2134:47: (iv_ruleOpOther= ruleOpOther EOF )
            // InternalMyXeniaParser.g:2135:2: iv_ruleOpOther= ruleOpOther EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOtherRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOther=ruleOpOther();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOther.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOther"


    // $ANTLR start "ruleOpOther"
    // InternalMyXeniaParser.g:2141:1: ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= HyphenMinusGreaterThanSign | kw= FullStopFullStopLessThanSign | (kw= GreaterThanSign kw= FullStopFullStop ) | kw= FullStopFullStop | kw= EqualsSignGreaterThanSign | (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) ) | (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) ) | kw= LessThanSignGreaterThanSign | kw= QuestionMarkColon ) ;
    public final AntlrDatatypeRuleToken ruleOpOther() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyXeniaParser.g:2147:2: ( (kw= HyphenMinusGreaterThanSign | kw= FullStopFullStopLessThanSign | (kw= GreaterThanSign kw= FullStopFullStop ) | kw= FullStopFullStop | kw= EqualsSignGreaterThanSign | (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) ) | (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) ) | kw= LessThanSignGreaterThanSign | kw= QuestionMarkColon ) )
            // InternalMyXeniaParser.g:2148:2: (kw= HyphenMinusGreaterThanSign | kw= FullStopFullStopLessThanSign | (kw= GreaterThanSign kw= FullStopFullStop ) | kw= FullStopFullStop | kw= EqualsSignGreaterThanSign | (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) ) | (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) ) | kw= LessThanSignGreaterThanSign | kw= QuestionMarkColon )
            {
            // InternalMyXeniaParser.g:2148:2: (kw= HyphenMinusGreaterThanSign | kw= FullStopFullStopLessThanSign | (kw= GreaterThanSign kw= FullStopFullStop ) | kw= FullStopFullStop | kw= EqualsSignGreaterThanSign | (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) ) | (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) ) | kw= LessThanSignGreaterThanSign | kw= QuestionMarkColon )
            int alt46=9;
            alt46 = dfa46.predict(input);
            switch (alt46) {
                case 1 :
                    // InternalMyXeniaParser.g:2149:3: kw= HyphenMinusGreaterThanSign
                    {
                    kw=(Token)match(input,HyphenMinusGreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:2155:3: kw= FullStopFullStopLessThanSign
                    {
                    kw=(Token)match(input,FullStopFullStopLessThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyXeniaParser.g:2161:3: (kw= GreaterThanSign kw= FullStopFullStop )
                    {
                    // InternalMyXeniaParser.g:2161:3: (kw= GreaterThanSign kw= FullStopFullStop )
                    // InternalMyXeniaParser.g:2162:4: kw= GreaterThanSign kw= FullStopFullStop
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0());
                      			
                    }
                    kw=(Token)match(input,FullStopFullStop,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMyXeniaParser.g:2174:3: kw= FullStopFullStop
                    {
                    kw=(Token)match(input,FullStopFullStop,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMyXeniaParser.g:2180:3: kw= EqualsSignGreaterThanSign
                    {
                    kw=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalMyXeniaParser.g:2186:3: (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) )
                    {
                    // InternalMyXeniaParser.g:2186:3: (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) )
                    // InternalMyXeniaParser.g:2187:4: kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign )
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0());
                      			
                    }
                    // InternalMyXeniaParser.g:2192:4: ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign )
                    int alt44=2;
                    int LA44_0 = input.LA(1);

                    if ( (LA44_0==GreaterThanSign) ) {
                        int LA44_1 = input.LA(2);

                        if ( (LA44_1==EOF||LA44_1==Synchronized||LA44_1==Extension||LA44_1==Extends||(LA44_1>=Import && LA44_1<=Typeof)||(LA44_1>=False && LA44_1<=While)||LA44_1==Null||LA44_1==True||(LA44_1>=For && LA44_1<=Try)||(LA44_1>=Do && LA44_1<=If)||(LA44_1>=ExclamationMark && LA44_1<=NumberSign)||LA44_1==LeftParenthesis||LA44_1==PlusSign||LA44_1==HyphenMinus||LA44_1==LessThanSign||LA44_1==LeftSquareBracket||LA44_1==RULE_BEGIN||(LA44_1>=RULE_HEX && LA44_1<=RULE_STRING)) ) {
                            alt44=2;
                        }
                        else if ( (LA44_1==GreaterThanSign) && (synpred8_InternalMyXeniaParser())) {
                            alt44=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 44, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 44, 0, input);

                        throw nvae;
                    }
                    switch (alt44) {
                        case 1 :
                            // InternalMyXeniaParser.g:2193:5: ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) )
                            {
                            // InternalMyXeniaParser.g:2193:5: ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) )
                            // InternalMyXeniaParser.g:2194:6: ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign )
                            {
                            // InternalMyXeniaParser.g:2199:6: (kw= GreaterThanSign kw= GreaterThanSign )
                            // InternalMyXeniaParser.g:2200:7: kw= GreaterThanSign kw= GreaterThanSign
                            {
                            kw=(Token)match(input,GreaterThanSign,FOLLOW_40); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0());
                              						
                            }
                            kw=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1());
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMyXeniaParser.g:2213:5: kw= GreaterThanSign
                            {
                            kw=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalMyXeniaParser.g:2221:3: (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) )
                    {
                    // InternalMyXeniaParser.g:2221:3: (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) )
                    // InternalMyXeniaParser.g:2222:4: kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign )
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0());
                      			
                    }
                    // InternalMyXeniaParser.g:2227:4: ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign )
                    int alt45=3;
                    int LA45_0 = input.LA(1);

                    if ( (LA45_0==LessThanSign) ) {
                        int LA45_1 = input.LA(2);

                        if ( (synpred9_InternalMyXeniaParser()) ) {
                            alt45=1;
                        }
                        else if ( (true) ) {
                            alt45=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 45, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA45_0==EqualsSignGreaterThanSign) ) {
                        alt45=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 45, 0, input);

                        throw nvae;
                    }
                    switch (alt45) {
                        case 1 :
                            // InternalMyXeniaParser.g:2228:5: ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) )
                            {
                            // InternalMyXeniaParser.g:2228:5: ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) )
                            // InternalMyXeniaParser.g:2229:6: ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign )
                            {
                            // InternalMyXeniaParser.g:2234:6: (kw= LessThanSign kw= LessThanSign )
                            // InternalMyXeniaParser.g:2235:7: kw= LessThanSign kw= LessThanSign
                            {
                            kw=(Token)match(input,LessThanSign,FOLLOW_30); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0());
                              						
                            }
                            kw=(Token)match(input,LessThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1());
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMyXeniaParser.g:2248:5: kw= LessThanSign
                            {
                            kw=(Token)match(input,LessThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalMyXeniaParser.g:2254:5: kw= EqualsSignGreaterThanSign
                            {
                            kw=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_6_1_2());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalMyXeniaParser.g:2262:3: kw= LessThanSignGreaterThanSign
                    {
                    kw=(Token)match(input,LessThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalMyXeniaParser.g:2268:3: kw= QuestionMarkColon
                    {
                    kw=(Token)match(input,QuestionMarkColon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOther"


    // $ANTLR start "entryRuleXAdditiveExpression"
    // InternalMyXeniaParser.g:2277:1: entryRuleXAdditiveExpression returns [EObject current=null] : iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF ;
    public final EObject entryRuleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAdditiveExpression = null;


        try {
            // InternalMyXeniaParser.g:2277:60: (iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF )
            // InternalMyXeniaParser.g:2278:2: iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAdditiveExpression=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAdditiveExpression"


    // $ANTLR start "ruleXAdditiveExpression"
    // InternalMyXeniaParser.g:2284:1: ruleXAdditiveExpression returns [EObject current=null] : (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XMultiplicativeExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:2290:2: ( (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) )
            // InternalMyXeniaParser.g:2291:2: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            {
            // InternalMyXeniaParser.g:2291:2: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            // InternalMyXeniaParser.g:2292:3: this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_42);
            this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XMultiplicativeExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyXeniaParser.g:2300:3: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==PlusSign) ) {
                    int LA47_2 = input.LA(2);

                    if ( (synpred10_InternalMyXeniaParser()) ) {
                        alt47=1;
                    }


                }
                else if ( (LA47_0==HyphenMinus) ) {
                    int LA47_3 = input.LA(2);

                    if ( (synpred10_InternalMyXeniaParser()) ) {
                        alt47=1;
                    }


                }


                switch (alt47) {
            	case 1 :
            	    // InternalMyXeniaParser.g:2301:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    {
            	    // InternalMyXeniaParser.g:2301:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) )
            	    // InternalMyXeniaParser.g:2302:5: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) )
            	    {
            	    // InternalMyXeniaParser.g:2312:5: ( () ( ( ruleOpAdd ) ) )
            	    // InternalMyXeniaParser.g:2313:6: () ( ( ruleOpAdd ) )
            	    {
            	    // InternalMyXeniaParser.g:2313:6: ()
            	    // InternalMyXeniaParser.g:2314:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalMyXeniaParser.g:2320:6: ( ( ruleOpAdd ) )
            	    // InternalMyXeniaParser.g:2321:7: ( ruleOpAdd )
            	    {
            	    // InternalMyXeniaParser.g:2321:7: ( ruleOpAdd )
            	    // InternalMyXeniaParser.g:2322:8: ruleOpAdd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_28);
            	    ruleOpAdd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalMyXeniaParser.g:2338:4: ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    // InternalMyXeniaParser.g:2339:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    {
            	    // InternalMyXeniaParser.g:2339:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    // InternalMyXeniaParser.g:2340:6: lv_rightOperand_3_0= ruleXMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_42);
            	    lv_rightOperand_3_0=ruleXMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XMultiplicativeExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAdditiveExpression"


    // $ANTLR start "entryRuleOpAdd"
    // InternalMyXeniaParser.g:2362:1: entryRuleOpAdd returns [String current=null] : iv_ruleOpAdd= ruleOpAdd EOF ;
    public final String entryRuleOpAdd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAdd = null;


        try {
            // InternalMyXeniaParser.g:2362:45: (iv_ruleOpAdd= ruleOpAdd EOF )
            // InternalMyXeniaParser.g:2363:2: iv_ruleOpAdd= ruleOpAdd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAddRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAdd=ruleOpAdd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAdd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAdd"


    // $ANTLR start "ruleOpAdd"
    // InternalMyXeniaParser.g:2369:1: ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= PlusSign | kw= HyphenMinus ) ;
    public final AntlrDatatypeRuleToken ruleOpAdd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyXeniaParser.g:2375:2: ( (kw= PlusSign | kw= HyphenMinus ) )
            // InternalMyXeniaParser.g:2376:2: (kw= PlusSign | kw= HyphenMinus )
            {
            // InternalMyXeniaParser.g:2376:2: (kw= PlusSign | kw= HyphenMinus )
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==PlusSign) ) {
                alt48=1;
            }
            else if ( (LA48_0==HyphenMinus) ) {
                alt48=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }
            switch (alt48) {
                case 1 :
                    // InternalMyXeniaParser.g:2377:3: kw= PlusSign
                    {
                    kw=(Token)match(input,PlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:2383:3: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAdd"


    // $ANTLR start "entryRuleXMultiplicativeExpression"
    // InternalMyXeniaParser.g:2392:1: entryRuleXMultiplicativeExpression returns [EObject current=null] : iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF ;
    public final EObject entryRuleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMultiplicativeExpression = null;


        try {
            // InternalMyXeniaParser.g:2392:66: (iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF )
            // InternalMyXeniaParser.g:2393:2: iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMultiplicativeExpression"


    // $ANTLR start "ruleXMultiplicativeExpression"
    // InternalMyXeniaParser.g:2399:1: ruleXMultiplicativeExpression returns [EObject current=null] : (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) ;
    public final EObject ruleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XUnaryOperation_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:2405:2: ( (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) )
            // InternalMyXeniaParser.g:2406:2: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            {
            // InternalMyXeniaParser.g:2406:2: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            // InternalMyXeniaParser.g:2407:3: this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_43);
            this_XUnaryOperation_0=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XUnaryOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyXeniaParser.g:2415:3: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            loop49:
            do {
                int alt49=2;
                switch ( input.LA(1) ) {
                case Asterisk:
                    {
                    int LA49_2 = input.LA(2);

                    if ( (synpred11_InternalMyXeniaParser()) ) {
                        alt49=1;
                    }


                    }
                    break;
                case AsteriskAsterisk:
                    {
                    int LA49_3 = input.LA(2);

                    if ( (synpred11_InternalMyXeniaParser()) ) {
                        alt49=1;
                    }


                    }
                    break;
                case Solidus:
                    {
                    int LA49_4 = input.LA(2);

                    if ( (synpred11_InternalMyXeniaParser()) ) {
                        alt49=1;
                    }


                    }
                    break;
                case PercentSign:
                    {
                    int LA49_5 = input.LA(2);

                    if ( (synpred11_InternalMyXeniaParser()) ) {
                        alt49=1;
                    }


                    }
                    break;

                }

                switch (alt49) {
            	case 1 :
            	    // InternalMyXeniaParser.g:2416:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    {
            	    // InternalMyXeniaParser.g:2416:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) )
            	    // InternalMyXeniaParser.g:2417:5: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) )
            	    {
            	    // InternalMyXeniaParser.g:2427:5: ( () ( ( ruleOpMulti ) ) )
            	    // InternalMyXeniaParser.g:2428:6: () ( ( ruleOpMulti ) )
            	    {
            	    // InternalMyXeniaParser.g:2428:6: ()
            	    // InternalMyXeniaParser.g:2429:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalMyXeniaParser.g:2435:6: ( ( ruleOpMulti ) )
            	    // InternalMyXeniaParser.g:2436:7: ( ruleOpMulti )
            	    {
            	    // InternalMyXeniaParser.g:2436:7: ( ruleOpMulti )
            	    // InternalMyXeniaParser.g:2437:8: ruleOpMulti
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_28);
            	    ruleOpMulti();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalMyXeniaParser.g:2453:4: ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    // InternalMyXeniaParser.g:2454:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    {
            	    // InternalMyXeniaParser.g:2454:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    // InternalMyXeniaParser.g:2455:6: lv_rightOperand_3_0= ruleXUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_43);
            	    lv_rightOperand_3_0=ruleXUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMultiplicativeExpression"


    // $ANTLR start "entryRuleOpMulti"
    // InternalMyXeniaParser.g:2477:1: entryRuleOpMulti returns [String current=null] : iv_ruleOpMulti= ruleOpMulti EOF ;
    public final String entryRuleOpMulti() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMulti = null;


        try {
            // InternalMyXeniaParser.g:2477:47: (iv_ruleOpMulti= ruleOpMulti EOF )
            // InternalMyXeniaParser.g:2478:2: iv_ruleOpMulti= ruleOpMulti EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMulti=ruleOpMulti();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMulti.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMulti"


    // $ANTLR start "ruleOpMulti"
    // InternalMyXeniaParser.g:2484:1: ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Asterisk | kw= AsteriskAsterisk | kw= Solidus | kw= PercentSign ) ;
    public final AntlrDatatypeRuleToken ruleOpMulti() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyXeniaParser.g:2490:2: ( (kw= Asterisk | kw= AsteriskAsterisk | kw= Solidus | kw= PercentSign ) )
            // InternalMyXeniaParser.g:2491:2: (kw= Asterisk | kw= AsteriskAsterisk | kw= Solidus | kw= PercentSign )
            {
            // InternalMyXeniaParser.g:2491:2: (kw= Asterisk | kw= AsteriskAsterisk | kw= Solidus | kw= PercentSign )
            int alt50=4;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt50=1;
                }
                break;
            case AsteriskAsterisk:
                {
                alt50=2;
                }
                break;
            case Solidus:
                {
                alt50=3;
                }
                break;
            case PercentSign:
                {
                alt50=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }

            switch (alt50) {
                case 1 :
                    // InternalMyXeniaParser.g:2492:3: kw= Asterisk
                    {
                    kw=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:2498:3: kw= AsteriskAsterisk
                    {
                    kw=(Token)match(input,AsteriskAsterisk,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyXeniaParser.g:2504:3: kw= Solidus
                    {
                    kw=(Token)match(input,Solidus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyXeniaParser.g:2510:3: kw= PercentSign
                    {
                    kw=(Token)match(input,PercentSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMulti"


    // $ANTLR start "entryRuleXUnaryOperation"
    // InternalMyXeniaParser.g:2519:1: entryRuleXUnaryOperation returns [EObject current=null] : iv_ruleXUnaryOperation= ruleXUnaryOperation EOF ;
    public final EObject entryRuleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXUnaryOperation = null;


        try {
            // InternalMyXeniaParser.g:2519:56: (iv_ruleXUnaryOperation= ruleXUnaryOperation EOF )
            // InternalMyXeniaParser.g:2520:2: iv_ruleXUnaryOperation= ruleXUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXUnaryOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXUnaryOperation=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXUnaryOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXUnaryOperation"


    // $ANTLR start "ruleXUnaryOperation"
    // InternalMyXeniaParser.g:2526:1: ruleXUnaryOperation returns [EObject current=null] : ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) ;
    public final EObject ruleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject lv_operand_2_0 = null;

        EObject this_XCastedExpression_3 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:2532:2: ( ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) )
            // InternalMyXeniaParser.g:2533:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            {
            // InternalMyXeniaParser.g:2533:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==ExclamationMark||LA51_0==PlusSign||LA51_0==HyphenMinus) ) {
                alt51=1;
            }
            else if ( (LA51_0==Synchronized||LA51_0==Extension||LA51_0==Extends||(LA51_0>=Import && LA51_0<=Typeof)||(LA51_0>=False && LA51_0<=While)||LA51_0==Null||LA51_0==True||(LA51_0>=For && LA51_0<=Try)||(LA51_0>=Do && LA51_0<=If)||LA51_0==NumberSign||LA51_0==LeftParenthesis||LA51_0==LessThanSign||LA51_0==LeftSquareBracket||LA51_0==RULE_BEGIN||(LA51_0>=RULE_HEX && LA51_0<=RULE_STRING)) ) {
                alt51=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }
            switch (alt51) {
                case 1 :
                    // InternalMyXeniaParser.g:2534:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    {
                    // InternalMyXeniaParser.g:2534:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    // InternalMyXeniaParser.g:2535:4: () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    {
                    // InternalMyXeniaParser.g:2535:4: ()
                    // InternalMyXeniaParser.g:2536:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalMyXeniaParser.g:2542:4: ( ( ruleOpUnary ) )
                    // InternalMyXeniaParser.g:2543:5: ( ruleOpUnary )
                    {
                    // InternalMyXeniaParser.g:2543:5: ( ruleOpUnary )
                    // InternalMyXeniaParser.g:2544:6: ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXUnaryOperationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_28);
                    ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:2558:4: ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    // InternalMyXeniaParser.g:2559:5: (lv_operand_2_0= ruleXUnaryOperation )
                    {
                    // InternalMyXeniaParser.g:2559:5: (lv_operand_2_0= ruleXUnaryOperation )
                    // InternalMyXeniaParser.g:2560:6: lv_operand_2_0= ruleXUnaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_2_0=ruleXUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operand",
                      							lv_operand_2_0,
                      							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:2579:3: this_XCastedExpression_3= ruleXCastedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCastedExpression_3=ruleXCastedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCastedExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXUnaryOperation"


    // $ANTLR start "entryRuleOpUnary"
    // InternalMyXeniaParser.g:2591:1: entryRuleOpUnary returns [String current=null] : iv_ruleOpUnary= ruleOpUnary EOF ;
    public final String entryRuleOpUnary() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpUnary = null;


        try {
            // InternalMyXeniaParser.g:2591:47: (iv_ruleOpUnary= ruleOpUnary EOF )
            // InternalMyXeniaParser.g:2592:2: iv_ruleOpUnary= ruleOpUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpUnaryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpUnary=ruleOpUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpUnary.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpUnary"


    // $ANTLR start "ruleOpUnary"
    // InternalMyXeniaParser.g:2598:1: ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= ExclamationMark | kw= HyphenMinus | kw= PlusSign ) ;
    public final AntlrDatatypeRuleToken ruleOpUnary() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyXeniaParser.g:2604:2: ( (kw= ExclamationMark | kw= HyphenMinus | kw= PlusSign ) )
            // InternalMyXeniaParser.g:2605:2: (kw= ExclamationMark | kw= HyphenMinus | kw= PlusSign )
            {
            // InternalMyXeniaParser.g:2605:2: (kw= ExclamationMark | kw= HyphenMinus | kw= PlusSign )
            int alt52=3;
            switch ( input.LA(1) ) {
            case ExclamationMark:
                {
                alt52=1;
                }
                break;
            case HyphenMinus:
                {
                alt52=2;
                }
                break;
            case PlusSign:
                {
                alt52=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }

            switch (alt52) {
                case 1 :
                    // InternalMyXeniaParser.g:2606:3: kw= ExclamationMark
                    {
                    kw=(Token)match(input,ExclamationMark,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:2612:3: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyXeniaParser.g:2618:3: kw= PlusSign
                    {
                    kw=(Token)match(input,PlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpUnary"


    // $ANTLR start "entryRuleXCastedExpression"
    // InternalMyXeniaParser.g:2627:1: entryRuleXCastedExpression returns [EObject current=null] : iv_ruleXCastedExpression= ruleXCastedExpression EOF ;
    public final EObject entryRuleXCastedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCastedExpression = null;


        try {
            // InternalMyXeniaParser.g:2627:58: (iv_ruleXCastedExpression= ruleXCastedExpression EOF )
            // InternalMyXeniaParser.g:2628:2: iv_ruleXCastedExpression= ruleXCastedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCastedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCastedExpression=ruleXCastedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCastedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCastedExpression"


    // $ANTLR start "ruleXCastedExpression"
    // InternalMyXeniaParser.g:2634:1: ruleXCastedExpression returns [EObject current=null] : (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) ;
    public final EObject ruleXCastedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XPostfixOperation_0 = null;

        EObject lv_type_3_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:2640:2: ( (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) )
            // InternalMyXeniaParser.g:2641:2: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            {
            // InternalMyXeniaParser.g:2641:2: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            // InternalMyXeniaParser.g:2642:3: this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_44);
            this_XPostfixOperation_0=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XPostfixOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyXeniaParser.g:2650:3: ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==As) ) {
                    int LA53_2 = input.LA(2);

                    if ( (synpred12_InternalMyXeniaParser()) ) {
                        alt53=1;
                    }


                }


                switch (alt53) {
            	case 1 :
            	    // InternalMyXeniaParser.g:2651:4: ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalMyXeniaParser.g:2651:4: ( ( ( () As ) )=> ( () otherlv_2= As ) )
            	    // InternalMyXeniaParser.g:2652:5: ( ( () As ) )=> ( () otherlv_2= As )
            	    {
            	    // InternalMyXeniaParser.g:2658:5: ( () otherlv_2= As )
            	    // InternalMyXeniaParser.g:2659:6: () otherlv_2= As
            	    {
            	    // InternalMyXeniaParser.g:2659:6: ()
            	    // InternalMyXeniaParser.g:2660:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    otherlv_2=(Token)match(input,As,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
            	      					
            	    }

            	    }


            	    }

            	    // InternalMyXeniaParser.g:2672:4: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalMyXeniaParser.g:2673:5: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalMyXeniaParser.g:2673:5: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalMyXeniaParser.g:2674:6: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"type",
            	      							lv_type_3_0,
            	      							"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCastedExpression"


    // $ANTLR start "entryRuleXPostfixOperation"
    // InternalMyXeniaParser.g:2696:1: entryRuleXPostfixOperation returns [EObject current=null] : iv_ruleXPostfixOperation= ruleXPostfixOperation EOF ;
    public final EObject entryRuleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPostfixOperation = null;


        try {
            // InternalMyXeniaParser.g:2696:58: (iv_ruleXPostfixOperation= ruleXPostfixOperation EOF )
            // InternalMyXeniaParser.g:2697:2: iv_ruleXPostfixOperation= ruleXPostfixOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPostfixOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPostfixOperation=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPostfixOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPostfixOperation"


    // $ANTLR start "ruleXPostfixOperation"
    // InternalMyXeniaParser.g:2703:1: ruleXPostfixOperation returns [EObject current=null] : (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) ;
    public final EObject ruleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject this_XMemberFeatureCall_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:2709:2: ( (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) )
            // InternalMyXeniaParser.g:2710:2: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            {
            // InternalMyXeniaParser.g:2710:2: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            // InternalMyXeniaParser.g:2711:3: this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXPostfixOperationAccess().getXMemberFeatureCallParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_45);
            this_XMemberFeatureCall_0=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XMemberFeatureCall_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyXeniaParser.g:2719:3: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==PlusSignPlusSign) ) {
                int LA54_1 = input.LA(2);

                if ( (synpred13_InternalMyXeniaParser()) ) {
                    alt54=1;
                }
            }
            else if ( (LA54_0==HyphenMinusHyphenMinus) ) {
                int LA54_2 = input.LA(2);

                if ( (synpred13_InternalMyXeniaParser()) ) {
                    alt54=1;
                }
            }
            switch (alt54) {
                case 1 :
                    // InternalMyXeniaParser.g:2720:4: ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) )
                    {
                    // InternalMyXeniaParser.g:2730:4: ( () ( ( ruleOpPostfix ) ) )
                    // InternalMyXeniaParser.g:2731:5: () ( ( ruleOpPostfix ) )
                    {
                    // InternalMyXeniaParser.g:2731:5: ()
                    // InternalMyXeniaParser.g:2732:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndSet(
                      							grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalMyXeniaParser.g:2738:5: ( ( ruleOpPostfix ) )
                    // InternalMyXeniaParser.g:2739:6: ( ruleOpPostfix )
                    {
                    // InternalMyXeniaParser.g:2739:6: ( ruleOpPostfix )
                    // InternalMyXeniaParser.g:2740:7: ruleOpPostfix
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXPostfixOperationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpPostfix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPostfixOperation"


    // $ANTLR start "entryRuleOpPostfix"
    // InternalMyXeniaParser.g:2760:1: entryRuleOpPostfix returns [String current=null] : iv_ruleOpPostfix= ruleOpPostfix EOF ;
    public final String entryRuleOpPostfix() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpPostfix = null;


        try {
            // InternalMyXeniaParser.g:2760:49: (iv_ruleOpPostfix= ruleOpPostfix EOF )
            // InternalMyXeniaParser.g:2761:2: iv_ruleOpPostfix= ruleOpPostfix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpPostfixRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpPostfix=ruleOpPostfix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpPostfix.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpPostfix"


    // $ANTLR start "ruleOpPostfix"
    // InternalMyXeniaParser.g:2767:1: ruleOpPostfix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= PlusSignPlusSign | kw= HyphenMinusHyphenMinus ) ;
    public final AntlrDatatypeRuleToken ruleOpPostfix() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyXeniaParser.g:2773:2: ( (kw= PlusSignPlusSign | kw= HyphenMinusHyphenMinus ) )
            // InternalMyXeniaParser.g:2774:2: (kw= PlusSignPlusSign | kw= HyphenMinusHyphenMinus )
            {
            // InternalMyXeniaParser.g:2774:2: (kw= PlusSignPlusSign | kw= HyphenMinusHyphenMinus )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==PlusSignPlusSign) ) {
                alt55=1;
            }
            else if ( (LA55_0==HyphenMinusHyphenMinus) ) {
                alt55=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    // InternalMyXeniaParser.g:2775:3: kw= PlusSignPlusSign
                    {
                    kw=(Token)match(input,PlusSignPlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:2781:3: kw= HyphenMinusHyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpPostfix"


    // $ANTLR start "entryRuleXMemberFeatureCall"
    // InternalMyXeniaParser.g:2790:1: entryRuleXMemberFeatureCall returns [EObject current=null] : iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF ;
    public final EObject entryRuleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMemberFeatureCall = null;


        try {
            // InternalMyXeniaParser.g:2790:59: (iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF )
            // InternalMyXeniaParser.g:2791:2: iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMemberFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMemberFeatureCall"


    // $ANTLR start "ruleXMemberFeatureCall"
    // InternalMyXeniaParser.g:2797:1: ruleXMemberFeatureCall returns [EObject current=null] : (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) ;
    public final EObject ruleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitStatic_3_0=null;
        Token otherlv_8=null;
        Token lv_nullSafe_9_0=null;
        Token lv_explicitStatic_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_explicitOperationCall_17_0=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject this_XPrimaryExpression_0 = null;

        EObject lv_value_6_0 = null;

        EObject lv_typeArguments_12_0 = null;

        EObject lv_typeArguments_14_0 = null;

        EObject lv_memberCallArguments_18_0 = null;

        EObject lv_memberCallArguments_19_0 = null;

        EObject lv_memberCallArguments_21_0 = null;

        EObject lv_memberCallArguments_23_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:2803:2: ( (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) )
            // InternalMyXeniaParser.g:2804:2: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            {
            // InternalMyXeniaParser.g:2804:2: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            // InternalMyXeniaParser.g:2805:3: this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_46);
            this_XPrimaryExpression_0=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XPrimaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyXeniaParser.g:2813:3: ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            loop64:
            do {
                int alt64=3;
                switch ( input.LA(1) ) {
                case FullStop:
                    {
                    int LA64_2 = input.LA(2);

                    if ( (synpred14_InternalMyXeniaParser()) ) {
                        alt64=1;
                    }
                    else if ( (synpred15_InternalMyXeniaParser()) ) {
                        alt64=2;
                    }


                    }
                    break;
                case ColonColon:
                    {
                    int LA64_3 = input.LA(2);

                    if ( (synpred14_InternalMyXeniaParser()) ) {
                        alt64=1;
                    }
                    else if ( (synpred15_InternalMyXeniaParser()) ) {
                        alt64=2;
                    }


                    }
                    break;
                case QuestionMarkFullStop:
                    {
                    int LA64_4 = input.LA(2);

                    if ( (synpred15_InternalMyXeniaParser()) ) {
                        alt64=2;
                    }


                    }
                    break;

                }

                switch (alt64) {
            	case 1 :
            	    // InternalMyXeniaParser.g:2814:4: ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    {
            	    // InternalMyXeniaParser.g:2814:4: ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    // InternalMyXeniaParser.g:2815:5: ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) )
            	    {
            	    // InternalMyXeniaParser.g:2815:5: ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
            	    // InternalMyXeniaParser.g:2816:6: ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    {
            	    // InternalMyXeniaParser.g:2836:6: ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    // InternalMyXeniaParser.g:2837:7: () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
            	    {
            	    // InternalMyXeniaParser.g:2837:7: ()
            	    // InternalMyXeniaParser.g:2838:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalMyXeniaParser.g:2844:7: (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) )
            	    int alt56=2;
            	    int LA56_0 = input.LA(1);

            	    if ( (LA56_0==FullStop) ) {
            	        alt56=1;
            	    }
            	    else if ( (LA56_0==ColonColon) ) {
            	        alt56=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 56, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt56) {
            	        case 1 :
            	            // InternalMyXeniaParser.g:2845:8: otherlv_2= FullStop
            	            {
            	            otherlv_2=(Token)match(input,FullStop,FOLLOW_47); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0());
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMyXeniaParser.g:2850:8: ( (lv_explicitStatic_3_0= ColonColon ) )
            	            {
            	            // InternalMyXeniaParser.g:2850:8: ( (lv_explicitStatic_3_0= ColonColon ) )
            	            // InternalMyXeniaParser.g:2851:9: (lv_explicitStatic_3_0= ColonColon )
            	            {
            	            // InternalMyXeniaParser.g:2851:9: (lv_explicitStatic_3_0= ColonColon )
            	            // InternalMyXeniaParser.g:2852:10: lv_explicitStatic_3_0= ColonColon
            	            {
            	            lv_explicitStatic_3_0=(Token)match(input,ColonColon,FOLLOW_47); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_explicitStatic_3_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "explicitStatic", lv_explicitStatic_3_0 != null, "::");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalMyXeniaParser.g:2865:7: ( ( ruleFeatureCallID ) )
            	    // InternalMyXeniaParser.g:2866:8: ( ruleFeatureCallID )
            	    {
            	    // InternalMyXeniaParser.g:2866:8: ( ruleFeatureCallID )
            	    // InternalMyXeniaParser.g:2867:9: ruleFeatureCallID
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_27);
            	    ruleFeatureCallID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3());
            	      						
            	    }
            	    pushFollow(FOLLOW_28);
            	    ruleOpSingleAssign();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalMyXeniaParser.g:2890:5: ( (lv_value_6_0= ruleXAssignment ) )
            	    // InternalMyXeniaParser.g:2891:6: (lv_value_6_0= ruleXAssignment )
            	    {
            	    // InternalMyXeniaParser.g:2891:6: (lv_value_6_0= ruleXAssignment )
            	    // InternalMyXeniaParser.g:2892:7: lv_value_6_0= ruleXAssignment
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_46);
            	    lv_value_6_0=ruleXAssignment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	      							}
            	      							set(
            	      								current,
            	      								"value",
            	      								lv_value_6_0,
            	      								"org.eclipse.xtext.xbase.Xbase.XAssignment");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMyXeniaParser.g:2911:4: ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    {
            	    // InternalMyXeniaParser.g:2911:4: ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    // InternalMyXeniaParser.g:2912:5: ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    {
            	    // InternalMyXeniaParser.g:2912:5: ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) )
            	    // InternalMyXeniaParser.g:2913:6: ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) )
            	    {
            	    // InternalMyXeniaParser.g:2933:6: ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) )
            	    // InternalMyXeniaParser.g:2934:7: () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) )
            	    {
            	    // InternalMyXeniaParser.g:2934:7: ()
            	    // InternalMyXeniaParser.g:2935:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalMyXeniaParser.g:2941:7: (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) )
            	    int alt57=3;
            	    switch ( input.LA(1) ) {
            	    case FullStop:
            	        {
            	        alt57=1;
            	        }
            	        break;
            	    case QuestionMarkFullStop:
            	        {
            	        alt57=2;
            	        }
            	        break;
            	    case ColonColon:
            	        {
            	        alt57=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 57, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt57) {
            	        case 1 :
            	            // InternalMyXeniaParser.g:2942:8: otherlv_8= FullStop
            	            {
            	            otherlv_8=(Token)match(input,FullStop,FOLLOW_48); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(otherlv_8, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMyXeniaParser.g:2947:8: ( (lv_nullSafe_9_0= QuestionMarkFullStop ) )
            	            {
            	            // InternalMyXeniaParser.g:2947:8: ( (lv_nullSafe_9_0= QuestionMarkFullStop ) )
            	            // InternalMyXeniaParser.g:2948:9: (lv_nullSafe_9_0= QuestionMarkFullStop )
            	            {
            	            // InternalMyXeniaParser.g:2948:9: (lv_nullSafe_9_0= QuestionMarkFullStop )
            	            // InternalMyXeniaParser.g:2949:10: lv_nullSafe_9_0= QuestionMarkFullStop
            	            {
            	            lv_nullSafe_9_0=(Token)match(input,QuestionMarkFullStop,FOLLOW_48); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_nullSafe_9_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "nullSafe", lv_nullSafe_9_0 != null, "?.");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalMyXeniaParser.g:2962:8: ( (lv_explicitStatic_10_0= ColonColon ) )
            	            {
            	            // InternalMyXeniaParser.g:2962:8: ( (lv_explicitStatic_10_0= ColonColon ) )
            	            // InternalMyXeniaParser.g:2963:9: (lv_explicitStatic_10_0= ColonColon )
            	            {
            	            // InternalMyXeniaParser.g:2963:9: (lv_explicitStatic_10_0= ColonColon )
            	            // InternalMyXeniaParser.g:2964:10: lv_explicitStatic_10_0= ColonColon
            	            {
            	            lv_explicitStatic_10_0=(Token)match(input,ColonColon,FOLLOW_48); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_explicitStatic_10_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "explicitStatic", lv_explicitStatic_10_0 != null, "::");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalMyXeniaParser.g:2979:5: (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )?
            	    int alt59=2;
            	    int LA59_0 = input.LA(1);

            	    if ( (LA59_0==LessThanSign) ) {
            	        alt59=1;
            	    }
            	    switch (alt59) {
            	        case 1 :
            	            // InternalMyXeniaParser.g:2980:6: otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign
            	            {
            	            otherlv_11=(Token)match(input,LessThanSign,FOLLOW_49); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_11, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0());
            	              					
            	            }
            	            // InternalMyXeniaParser.g:2984:6: ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) )
            	            // InternalMyXeniaParser.g:2985:7: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            {
            	            // InternalMyXeniaParser.g:2985:7: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            // InternalMyXeniaParser.g:2986:8: lv_typeArguments_12_0= ruleJvmArgumentTypeReference
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_50);
            	            lv_typeArguments_12_0=ruleJvmArgumentTypeReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              								}
            	              								add(
            	              									current,
            	              									"typeArguments",
            	              									lv_typeArguments_12_0,
            	              									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalMyXeniaParser.g:3003:6: (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )*
            	            loop58:
            	            do {
            	                int alt58=2;
            	                int LA58_0 = input.LA(1);

            	                if ( (LA58_0==Comma) ) {
            	                    alt58=1;
            	                }


            	                switch (alt58) {
            	            	case 1 :
            	            	    // InternalMyXeniaParser.g:3004:7: otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    {
            	            	    otherlv_13=(Token)match(input,Comma,FOLLOW_49); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      							newLeafNode(otherlv_13, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0());
            	            	      						
            	            	    }
            	            	    // InternalMyXeniaParser.g:3008:7: ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    // InternalMyXeniaParser.g:3009:8: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    {
            	            	    // InternalMyXeniaParser.g:3009:8: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    // InternalMyXeniaParser.g:3010:9: lv_typeArguments_14_0= ruleJvmArgumentTypeReference
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0());
            	            	      								
            	            	    }
            	            	    pushFollow(FOLLOW_50);
            	            	    lv_typeArguments_14_0=ruleJvmArgumentTypeReference();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      									if (current==null) {
            	            	      										current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	            	      									}
            	            	      									add(
            	            	      										current,
            	            	      										"typeArguments",
            	            	      										lv_typeArguments_14_0,
            	            	      										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	            	      									afterParserOrEnumRuleCall();
            	            	      								
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop58;
            	                }
            	            } while (true);

            	            otherlv_15=(Token)match(input,GreaterThanSign,FOLLOW_48); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_15, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3());
            	              					
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMyXeniaParser.g:3033:5: ( ( ruleIdOrSuper ) )
            	    // InternalMyXeniaParser.g:3034:6: ( ruleIdOrSuper )
            	    {
            	    // InternalMyXeniaParser.g:3034:6: ( ruleIdOrSuper )
            	    // InternalMyXeniaParser.g:3035:7: ruleIdOrSuper
            	    {
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      							}
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_51);
            	    ruleIdOrSuper();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalMyXeniaParser.g:3049:5: ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )?
            	    int alt62=2;
            	    alt62 = dfa62.predict(input);
            	    switch (alt62) {
            	        case 1 :
            	            // InternalMyXeniaParser.g:3050:6: ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis
            	            {
            	            // InternalMyXeniaParser.g:3050:6: ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) )
            	            // InternalMyXeniaParser.g:3051:7: ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis )
            	            {
            	            // InternalMyXeniaParser.g:3055:7: (lv_explicitOperationCall_17_0= LeftParenthesis )
            	            // InternalMyXeniaParser.g:3056:8: lv_explicitOperationCall_17_0= LeftParenthesis
            	            {
            	            lv_explicitOperationCall_17_0=(Token)match(input,LeftParenthesis,FOLLOW_52); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_explicitOperationCall_17_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              								}
            	              								setWithLastConsumed(current, "explicitOperationCall", lv_explicitOperationCall_17_0 != null, "(");
            	              							
            	            }

            	            }


            	            }

            	            // InternalMyXeniaParser.g:3068:6: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?
            	            int alt61=3;
            	            alt61 = dfa61.predict(input);
            	            switch (alt61) {
            	                case 1 :
            	                    // InternalMyXeniaParser.g:3069:7: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    {
            	                    // InternalMyXeniaParser.g:3069:7: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    // InternalMyXeniaParser.g:3070:8: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    {
            	                    // InternalMyXeniaParser.g:3095:8: (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    // InternalMyXeniaParser.g:3096:9: lv_memberCallArguments_18_0= ruleXShortClosure
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0());
            	                      								
            	                    }
            	                    pushFollow(FOLLOW_53);
            	                    lv_memberCallArguments_18_0=ruleXShortClosure();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      									if (current==null) {
            	                      										current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      									}
            	                      									add(
            	                      										current,
            	                      										"memberCallArguments",
            	                      										lv_memberCallArguments_18_0,
            	                      										"org.eclipse.xtext.xbase.Xbase.XShortClosure");
            	                      									afterParserOrEnumRuleCall();
            	                      								
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMyXeniaParser.g:3114:7: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    {
            	                    // InternalMyXeniaParser.g:3114:7: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    // InternalMyXeniaParser.g:3115:8: ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    {
            	                    // InternalMyXeniaParser.g:3115:8: ( (lv_memberCallArguments_19_0= ruleXExpression ) )
            	                    // InternalMyXeniaParser.g:3116:9: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    {
            	                    // InternalMyXeniaParser.g:3116:9: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    // InternalMyXeniaParser.g:3117:10: lv_memberCallArguments_19_0= ruleXExpression
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      										newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0());
            	                      									
            	                    }
            	                    pushFollow(FOLLOW_24);
            	                    lv_memberCallArguments_19_0=ruleXExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      										if (current==null) {
            	                      											current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      										}
            	                      										add(
            	                      											current,
            	                      											"memberCallArguments",
            	                      											lv_memberCallArguments_19_0,
            	                      											"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                      										afterParserOrEnumRuleCall();
            	                      									
            	                    }

            	                    }


            	                    }

            	                    // InternalMyXeniaParser.g:3134:8: (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    loop60:
            	                    do {
            	                        int alt60=2;
            	                        int LA60_0 = input.LA(1);

            	                        if ( (LA60_0==Comma) ) {
            	                            alt60=1;
            	                        }


            	                        switch (alt60) {
            	                    	case 1 :
            	                    	    // InternalMyXeniaParser.g:3135:9: otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    {
            	                    	    otherlv_20=(Token)match(input,Comma,FOLLOW_28); if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      									newLeafNode(otherlv_20, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0());
            	                    	      								
            	                    	    }
            	                    	    // InternalMyXeniaParser.g:3139:9: ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    // InternalMyXeniaParser.g:3140:10: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    {
            	                    	    // InternalMyXeniaParser.g:3140:10: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    // InternalMyXeniaParser.g:3141:11: lv_memberCallArguments_21_0= ruleXExpression
            	                    	    {
            	                    	    if ( state.backtracking==0 ) {

            	                    	      											newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0());
            	                    	      										
            	                    	    }
            	                    	    pushFollow(FOLLOW_24);
            	                    	    lv_memberCallArguments_21_0=ruleXExpression();

            	                    	    state._fsp--;
            	                    	    if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      											if (current==null) {
            	                    	      												current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                    	      											}
            	                    	      											add(
            	                    	      												current,
            	                    	      												"memberCallArguments",
            	                    	      												lv_memberCallArguments_21_0,
            	                    	      												"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                    	      											afterParserOrEnumRuleCall();
            	                    	      										
            	                    	    }

            	                    	    }


            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop60;
            	                        }
            	                    } while (true);


            	                    }


            	                    }
            	                    break;

            	            }

            	            otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_54); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_22, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2());
            	              					
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMyXeniaParser.g:3166:5: ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    int alt63=2;
            	    alt63 = dfa63.predict(input);
            	    switch (alt63) {
            	        case 1 :
            	            // InternalMyXeniaParser.g:3167:6: ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure )
            	            {
            	            // InternalMyXeniaParser.g:3173:6: (lv_memberCallArguments_23_0= ruleXClosure )
            	            // InternalMyXeniaParser.g:3174:7: lv_memberCallArguments_23_0= ruleXClosure
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_46);
            	            lv_memberCallArguments_23_0=ruleXClosure();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              							}
            	              							add(
            	              								current,
            	              								"memberCallArguments",
            	              								lv_memberCallArguments_23_0,
            	              								"org.eclipse.xtext.xbase.Xbase.XClosure");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMemberFeatureCall"


    // $ANTLR start "entryRuleXPrimaryExpression"
    // InternalMyXeniaParser.g:3197:1: entryRuleXPrimaryExpression returns [EObject current=null] : iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF ;
    public final EObject entryRuleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPrimaryExpression = null;


        try {
            // InternalMyXeniaParser.g:3197:59: (iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF )
            // InternalMyXeniaParser.g:3198:2: iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPrimaryExpression=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPrimaryExpression"


    // $ANTLR start "ruleXPrimaryExpression"
    // InternalMyXeniaParser.g:3204:1: ruleXPrimaryExpression returns [EObject current=null] : (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) ;
    public final EObject ruleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XConstructorCall_0 = null;

        EObject this_XBlockExpression_1 = null;

        EObject this_XSwitchExpression_2 = null;

        EObject this_XSynchronizedExpression_3 = null;

        EObject this_XFeatureCall_4 = null;

        EObject this_XLiteral_5 = null;

        EObject this_XIfExpression_6 = null;

        EObject this_XForLoopExpression_7 = null;

        EObject this_XBasicForLoopExpression_8 = null;

        EObject this_XWhileExpression_9 = null;

        EObject this_XDoWhileExpression_10 = null;

        EObject this_XThrowExpression_11 = null;

        EObject this_XReturnExpression_12 = null;

        EObject this_XTryCatchFinallyExpression_13 = null;

        EObject this_XParenthesizedExpression_14 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:3210:2: ( (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) )
            // InternalMyXeniaParser.g:3211:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            {
            // InternalMyXeniaParser.g:3211:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            int alt65=15;
            alt65 = dfa65.predict(input);
            switch (alt65) {
                case 1 :
                    // InternalMyXeniaParser.g:3212:3: this_XConstructorCall_0= ruleXConstructorCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XConstructorCall_0=ruleXConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XConstructorCall_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:3221:3: this_XBlockExpression_1= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBlockExpression_1=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBlockExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyXeniaParser.g:3230:3: this_XSwitchExpression_2= ruleXSwitchExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XSwitchExpression_2=ruleXSwitchExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XSwitchExpression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyXeniaParser.g:3239:3: ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    {
                    // InternalMyXeniaParser.g:3239:3: ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    // InternalMyXeniaParser.g:3240:4: ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSynchronizedExpressionParserRuleCall_3());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XSynchronizedExpression_3=ruleXSynchronizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XSynchronizedExpression_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalMyXeniaParser.g:3257:3: this_XFeatureCall_4= ruleXFeatureCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XFeatureCall_4=ruleXFeatureCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XFeatureCall_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalMyXeniaParser.g:3266:3: this_XLiteral_5= ruleXLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XLiteral_5=ruleXLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XLiteral_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalMyXeniaParser.g:3275:3: this_XIfExpression_6= ruleXIfExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XIfExpression_6=ruleXIfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XIfExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalMyXeniaParser.g:3284:3: ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    {
                    // InternalMyXeniaParser.g:3284:3: ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    // InternalMyXeniaParser.g:3285:4: ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_7());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XForLoopExpression_7=ruleXForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XForLoopExpression_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalMyXeniaParser.g:3308:3: this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBasicForLoopExpressionParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBasicForLoopExpression_8=ruleXBasicForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBasicForLoopExpression_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalMyXeniaParser.g:3317:3: this_XWhileExpression_9= ruleXWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XWhileExpression_9=ruleXWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XWhileExpression_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalMyXeniaParser.g:3326:3: this_XDoWhileExpression_10= ruleXDoWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_10());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XDoWhileExpression_10=ruleXDoWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XDoWhileExpression_10;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalMyXeniaParser.g:3335:3: this_XThrowExpression_11= ruleXThrowExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_11());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XThrowExpression_11=ruleXThrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XThrowExpression_11;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalMyXeniaParser.g:3344:3: this_XReturnExpression_12= ruleXReturnExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_12());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XReturnExpression_12=ruleXReturnExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XReturnExpression_12;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalMyXeniaParser.g:3353:3: this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_13());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XTryCatchFinallyExpression_13=ruleXTryCatchFinallyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XTryCatchFinallyExpression_13;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 15 :
                    // InternalMyXeniaParser.g:3362:3: this_XParenthesizedExpression_14= ruleXParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_14());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XParenthesizedExpression_14=ruleXParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XParenthesizedExpression_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPrimaryExpression"


    // $ANTLR start "entryRuleXLiteral"
    // InternalMyXeniaParser.g:3374:1: entryRuleXLiteral returns [EObject current=null] : iv_ruleXLiteral= ruleXLiteral EOF ;
    public final EObject entryRuleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXLiteral = null;


        try {
            // InternalMyXeniaParser.g:3374:49: (iv_ruleXLiteral= ruleXLiteral EOF )
            // InternalMyXeniaParser.g:3375:2: iv_ruleXLiteral= ruleXLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXLiteral=ruleXLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXLiteral"


    // $ANTLR start "ruleXLiteral"
    // InternalMyXeniaParser.g:3381:1: ruleXLiteral returns [EObject current=null] : (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) ;
    public final EObject ruleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XCollectionLiteral_0 = null;

        EObject this_XClosure_1 = null;

        EObject this_XBooleanLiteral_2 = null;

        EObject this_XNumberLiteral_3 = null;

        EObject this_XNullLiteral_4 = null;

        EObject this_XStringLiteral_5 = null;

        EObject this_XTypeLiteral_6 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:3387:2: ( (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) )
            // InternalMyXeniaParser.g:3388:2: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            {
            // InternalMyXeniaParser.g:3388:2: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            int alt66=7;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==NumberSign) ) {
                alt66=1;
            }
            else if ( (LA66_0==LeftSquareBracket) && (synpred21_InternalMyXeniaParser())) {
                alt66=2;
            }
            else if ( (LA66_0==False||LA66_0==True) ) {
                alt66=3;
            }
            else if ( ((LA66_0>=RULE_HEX && LA66_0<=RULE_DECIMAL)) ) {
                alt66=4;
            }
            else if ( (LA66_0==Null) ) {
                alt66=5;
            }
            else if ( (LA66_0==RULE_STRING) ) {
                alt66=6;
            }
            else if ( (LA66_0==Typeof) ) {
                alt66=7;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;
            }
            switch (alt66) {
                case 1 :
                    // InternalMyXeniaParser.g:3389:3: this_XCollectionLiteral_0= ruleXCollectionLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCollectionLiteral_0=ruleXCollectionLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCollectionLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:3398:3: ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure )
                    {
                    // InternalMyXeniaParser.g:3398:3: ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure )
                    // InternalMyXeniaParser.g:3399:4: ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XClosure_1=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XClosure_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyXeniaParser.g:3415:3: this_XBooleanLiteral_2= ruleXBooleanLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBooleanLiteral_2=ruleXBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBooleanLiteral_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyXeniaParser.g:3424:3: this_XNumberLiteral_3= ruleXNumberLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNumberLiteral_3=ruleXNumberLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNumberLiteral_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMyXeniaParser.g:3433:3: this_XNullLiteral_4= ruleXNullLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNullLiteral_4=ruleXNullLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNullLiteral_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalMyXeniaParser.g:3442:3: this_XStringLiteral_5= ruleXStringLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XStringLiteral_5=ruleXStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XStringLiteral_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalMyXeniaParser.g:3451:3: this_XTypeLiteral_6= ruleXTypeLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XTypeLiteral_6=ruleXTypeLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XTypeLiteral_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXLiteral"


    // $ANTLR start "entryRuleXCollectionLiteral"
    // InternalMyXeniaParser.g:3463:1: entryRuleXCollectionLiteral returns [EObject current=null] : iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF ;
    public final EObject entryRuleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCollectionLiteral = null;


        try {
            // InternalMyXeniaParser.g:3463:59: (iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF )
            // InternalMyXeniaParser.g:3464:2: iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCollectionLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCollectionLiteral=ruleXCollectionLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCollectionLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCollectionLiteral"


    // $ANTLR start "ruleXCollectionLiteral"
    // InternalMyXeniaParser.g:3470:1: ruleXCollectionLiteral returns [EObject current=null] : (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) ;
    public final EObject ruleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XSetLiteral_0 = null;

        EObject this_XListLiteral_1 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:3476:2: ( (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) )
            // InternalMyXeniaParser.g:3477:2: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            {
            // InternalMyXeniaParser.g:3477:2: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==NumberSign) ) {
                int LA67_1 = input.LA(2);

                if ( (LA67_1==LeftSquareBracket) ) {
                    alt67=2;
                }
                else if ( (LA67_1==LeftCurlyBracket) ) {
                    alt67=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }
            switch (alt67) {
                case 1 :
                    // InternalMyXeniaParser.g:3478:3: this_XSetLiteral_0= ruleXSetLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XSetLiteral_0=ruleXSetLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XSetLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:3487:3: this_XListLiteral_1= ruleXListLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XListLiteral_1=ruleXListLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XListLiteral_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCollectionLiteral"


    // $ANTLR start "entryRuleXSetLiteral"
    // InternalMyXeniaParser.g:3499:1: entryRuleXSetLiteral returns [EObject current=null] : iv_ruleXSetLiteral= ruleXSetLiteral EOF ;
    public final EObject entryRuleXSetLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSetLiteral = null;


        try {
            // InternalMyXeniaParser.g:3499:52: (iv_ruleXSetLiteral= ruleXSetLiteral EOF )
            // InternalMyXeniaParser.g:3500:2: iv_ruleXSetLiteral= ruleXSetLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSetLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSetLiteral=ruleXSetLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSetLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSetLiteral"


    // $ANTLR start "ruleXSetLiteral"
    // InternalMyXeniaParser.g:3506:1: ruleXSetLiteral returns [EObject current=null] : ( () otherlv_1= NumberSign otherlv_2= LeftCurlyBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightCurlyBracket ) ;
    public final EObject ruleXSetLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:3512:2: ( ( () otherlv_1= NumberSign otherlv_2= LeftCurlyBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightCurlyBracket ) )
            // InternalMyXeniaParser.g:3513:2: ( () otherlv_1= NumberSign otherlv_2= LeftCurlyBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightCurlyBracket )
            {
            // InternalMyXeniaParser.g:3513:2: ( () otherlv_1= NumberSign otherlv_2= LeftCurlyBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightCurlyBracket )
            // InternalMyXeniaParser.g:3514:3: () otherlv_1= NumberSign otherlv_2= LeftCurlyBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightCurlyBracket
            {
            // InternalMyXeniaParser.g:3514:3: ()
            // InternalMyXeniaParser.g:3515:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,NumberSign,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalMyXeniaParser.g:3529:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==Synchronized||LA69_0==Extension||LA69_0==Extends||(LA69_0>=Import && LA69_0<=Typeof)||(LA69_0>=False && LA69_0<=While)||LA69_0==Null||LA69_0==True||(LA69_0>=For && LA69_0<=Try)||(LA69_0>=Do && LA69_0<=If)||(LA69_0>=ExclamationMark && LA69_0<=NumberSign)||LA69_0==LeftParenthesis||LA69_0==PlusSign||LA69_0==HyphenMinus||LA69_0==LessThanSign||LA69_0==LeftSquareBracket||LA69_0==RULE_BEGIN||(LA69_0>=RULE_HEX && LA69_0<=RULE_STRING)) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalMyXeniaParser.g:3530:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalMyXeniaParser.g:3530:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalMyXeniaParser.g:3531:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalMyXeniaParser.g:3531:5: (lv_elements_3_0= ruleXExpression )
                    // InternalMyXeniaParser.g:3532:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_57);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:3549:4: (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop68:
                    do {
                        int alt68=2;
                        int LA68_0 = input.LA(1);

                        if ( (LA68_0==Comma) ) {
                            alt68=1;
                        }


                        switch (alt68) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:3550:5: otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_28); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalMyXeniaParser.g:3554:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalMyXeniaParser.g:3555:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalMyXeniaParser.g:3555:6: (lv_elements_5_0= ruleXExpression )
                    	    // InternalMyXeniaParser.g:3556:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_57);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop68;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSetLiteral"


    // $ANTLR start "entryRuleXListLiteral"
    // InternalMyXeniaParser.g:3583:1: entryRuleXListLiteral returns [EObject current=null] : iv_ruleXListLiteral= ruleXListLiteral EOF ;
    public final EObject entryRuleXListLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXListLiteral = null;


        try {
            // InternalMyXeniaParser.g:3583:53: (iv_ruleXListLiteral= ruleXListLiteral EOF )
            // InternalMyXeniaParser.g:3584:2: iv_ruleXListLiteral= ruleXListLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXListLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXListLiteral=ruleXListLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXListLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXListLiteral"


    // $ANTLR start "ruleXListLiteral"
    // InternalMyXeniaParser.g:3590:1: ruleXListLiteral returns [EObject current=null] : ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightSquareBracket ) ;
    public final EObject ruleXListLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:3596:2: ( ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightSquareBracket ) )
            // InternalMyXeniaParser.g:3597:2: ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightSquareBracket )
            {
            // InternalMyXeniaParser.g:3597:2: ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightSquareBracket )
            // InternalMyXeniaParser.g:3598:3: () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightSquareBracket
            {
            // InternalMyXeniaParser.g:3598:3: ()
            // InternalMyXeniaParser.g:3599:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXListLiteralAccess().getXListLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,NumberSign,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,LeftSquareBracket,FOLLOW_59); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalMyXeniaParser.g:3613:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==Synchronized||LA71_0==Extension||LA71_0==Extends||(LA71_0>=Import && LA71_0<=Typeof)||(LA71_0>=False && LA71_0<=While)||LA71_0==Null||LA71_0==True||(LA71_0>=For && LA71_0<=Try)||(LA71_0>=Do && LA71_0<=If)||(LA71_0>=ExclamationMark && LA71_0<=NumberSign)||LA71_0==LeftParenthesis||LA71_0==PlusSign||LA71_0==HyphenMinus||LA71_0==LessThanSign||LA71_0==LeftSquareBracket||LA71_0==RULE_BEGIN||(LA71_0>=RULE_HEX && LA71_0<=RULE_STRING)) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalMyXeniaParser.g:3614:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalMyXeniaParser.g:3614:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalMyXeniaParser.g:3615:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalMyXeniaParser.g:3615:5: (lv_elements_3_0= ruleXExpression )
                    // InternalMyXeniaParser.g:3616:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_60);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:3633:4: (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop70:
                    do {
                        int alt70=2;
                        int LA70_0 = input.LA(1);

                        if ( (LA70_0==Comma) ) {
                            alt70=1;
                        }


                        switch (alt70) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:3634:5: otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_28); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalMyXeniaParser.g:3638:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalMyXeniaParser.g:3639:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalMyXeniaParser.g:3639:6: (lv_elements_5_0= ruleXExpression )
                    	    // InternalMyXeniaParser.g:3640:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_60);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop70;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXListLiteral"


    // $ANTLR start "entryRuleXClosure"
    // InternalMyXeniaParser.g:3667:1: entryRuleXClosure returns [EObject current=null] : iv_ruleXClosure= ruleXClosure EOF ;
    public final EObject entryRuleXClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXClosure = null;


        try {
            // InternalMyXeniaParser.g:3667:49: (iv_ruleXClosure= ruleXClosure EOF )
            // InternalMyXeniaParser.g:3668:2: iv_ruleXClosure= ruleXClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXClosure=ruleXClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXClosure"


    // $ANTLR start "ruleXClosure"
    // InternalMyXeniaParser.g:3674:1: ruleXClosure returns [EObject current=null] : ( ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= RightSquareBracket ) ;
    public final EObject ruleXClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_explicitSyntax_5_0=null;
        Token otherlv_7=null;
        EObject lv_declaredFormalParameters_2_0 = null;

        EObject lv_declaredFormalParameters_4_0 = null;

        EObject lv_expression_6_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:3680:2: ( ( ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= RightSquareBracket ) )
            // InternalMyXeniaParser.g:3681:2: ( ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= RightSquareBracket )
            {
            // InternalMyXeniaParser.g:3681:2: ( ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= RightSquareBracket )
            // InternalMyXeniaParser.g:3682:3: ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= RightSquareBracket
            {
            // InternalMyXeniaParser.g:3682:3: ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) )
            // InternalMyXeniaParser.g:3683:4: ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket )
            {
            // InternalMyXeniaParser.g:3689:4: ( () otherlv_1= LeftSquareBracket )
            // InternalMyXeniaParser.g:3690:5: () otherlv_1= LeftSquareBracket
            {
            // InternalMyXeniaParser.g:3690:5: ()
            // InternalMyXeniaParser.g:3691:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXClosureAccess().getXClosureAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1());
              				
            }

            }


            }

            // InternalMyXeniaParser.g:3703:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )?
            int alt74=2;
            alt74 = dfa74.predict(input);
            switch (alt74) {
                case 1 :
                    // InternalMyXeniaParser.g:3704:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) )
                    {
                    // InternalMyXeniaParser.g:3727:4: ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) )
                    // InternalMyXeniaParser.g:3728:5: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) )
                    {
                    // InternalMyXeniaParser.g:3728:5: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )?
                    int alt73=2;
                    int LA73_0 = input.LA(1);

                    if ( (LA73_0==EqualsSignGreaterThanSign||LA73_0==LeftParenthesis||LA73_0==RULE_ID) ) {
                        alt73=1;
                    }
                    switch (alt73) {
                        case 1 :
                            // InternalMyXeniaParser.g:3729:6: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            {
                            // InternalMyXeniaParser.g:3729:6: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) )
                            // InternalMyXeniaParser.g:3730:7: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            {
                            // InternalMyXeniaParser.g:3730:7: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            // InternalMyXeniaParser.g:3731:8: lv_declaredFormalParameters_2_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_62);
                            lv_declaredFormalParameters_2_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXClosureRule());
                              								}
                              								add(
                              									current,
                              									"declaredFormalParameters",
                              									lv_declaredFormalParameters_2_0,
                              									"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalMyXeniaParser.g:3748:6: (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            loop72:
                            do {
                                int alt72=2;
                                int LA72_0 = input.LA(1);

                                if ( (LA72_0==Comma) ) {
                                    alt72=1;
                                }


                                switch (alt72) {
                            	case 1 :
                            	    // InternalMyXeniaParser.g:3749:7: otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    {
                            	    otherlv_3=(Token)match(input,Comma,FOLLOW_37); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0());
                            	      						
                            	    }
                            	    // InternalMyXeniaParser.g:3753:7: ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    // InternalMyXeniaParser.g:3754:8: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    {
                            	    // InternalMyXeniaParser.g:3754:8: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    // InternalMyXeniaParser.g:3755:9: lv_declaredFormalParameters_4_0= ruleJvmFormalParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_62);
                            	    lv_declaredFormalParameters_4_0=ruleJvmFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXClosureRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"declaredFormalParameters",
                            	      										lv_declaredFormalParameters_4_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop72;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalMyXeniaParser.g:3774:5: ( (lv_explicitSyntax_5_0= VerticalLine ) )
                    // InternalMyXeniaParser.g:3775:6: (lv_explicitSyntax_5_0= VerticalLine )
                    {
                    // InternalMyXeniaParser.g:3775:6: (lv_explicitSyntax_5_0= VerticalLine )
                    // InternalMyXeniaParser.g:3776:7: lv_explicitSyntax_5_0= VerticalLine
                    {
                    lv_explicitSyntax_5_0=(Token)match(input,VerticalLine,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_explicitSyntax_5_0, grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXClosureRule());
                      							}
                      							setWithLastConsumed(current, "explicitSyntax", lv_explicitSyntax_5_0 != null, "|");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalMyXeniaParser.g:3790:3: ( (lv_expression_6_0= ruleXExpressionInClosure ) )
            // InternalMyXeniaParser.g:3791:4: (lv_expression_6_0= ruleXExpressionInClosure )
            {
            // InternalMyXeniaParser.g:3791:4: (lv_expression_6_0= ruleXExpressionInClosure )
            // InternalMyXeniaParser.g:3792:5: lv_expression_6_0= ruleXExpressionInClosure
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_63);
            lv_expression_6_0=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXClosureRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_6_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpressionInClosure");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_7=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXClosure"


    // $ANTLR start "entryRuleXExpressionInClosure"
    // InternalMyXeniaParser.g:3817:1: entryRuleXExpressionInClosure returns [EObject current=null] : iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF ;
    public final EObject entryRuleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionInClosure = null;


        try {
            // InternalMyXeniaParser.g:3817:61: (iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF )
            // InternalMyXeniaParser.g:3818:2: iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionInClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionInClosure=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionInClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionInClosure"


    // $ANTLR start "ruleXExpressionInClosure"
    // InternalMyXeniaParser.g:3824:1: ruleXExpressionInClosure returns [EObject current=null] : ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )* ) ;
    public final EObject ruleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_expressions_1_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:3830:2: ( ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )* ) )
            // InternalMyXeniaParser.g:3831:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )* )
            {
            // InternalMyXeniaParser.g:3831:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )* )
            // InternalMyXeniaParser.g:3832:3: () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )*
            {
            // InternalMyXeniaParser.g:3832:3: ()
            // InternalMyXeniaParser.g:3833:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalMyXeniaParser.g:3839:3: ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==Synchronized||LA76_0==Extension||LA76_0==Extends||(LA76_0>=Import && LA76_0<=Typeof)||(LA76_0>=False && LA76_0<=While)||LA76_0==Null||LA76_0==True||(LA76_0>=For && LA76_0<=Var)||(LA76_0>=Do && LA76_0<=If)||(LA76_0>=ExclamationMark && LA76_0<=NumberSign)||LA76_0==LeftParenthesis||LA76_0==PlusSign||LA76_0==HyphenMinus||LA76_0==LessThanSign||LA76_0==LeftSquareBracket||LA76_0==RULE_BEGIN||(LA76_0>=RULE_HEX && LA76_0<=RULE_STRING)) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // InternalMyXeniaParser.g:3840:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )?
            	    {
            	    // InternalMyXeniaParser.g:3840:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalMyXeniaParser.g:3841:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalMyXeniaParser.g:3841:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    // InternalMyXeniaParser.g:3842:6: lv_expressions_1_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_64);
            	    lv_expressions_1_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expressions",
            	      							lv_expressions_1_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalMyXeniaParser.g:3859:4: (otherlv_2= Semicolon )?
            	    int alt75=2;
            	    int LA75_0 = input.LA(1);

            	    if ( (LA75_0==Semicolon) ) {
            	        alt75=1;
            	    }
            	    switch (alt75) {
            	        case 1 :
            	            // InternalMyXeniaParser.g:3860:5: otherlv_2= Semicolon
            	            {
            	            otherlv_2=(Token)match(input,Semicolon,FOLLOW_65); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionInClosure"


    // $ANTLR start "entryRuleXShortClosure"
    // InternalMyXeniaParser.g:3870:1: entryRuleXShortClosure returns [EObject current=null] : iv_ruleXShortClosure= ruleXShortClosure EOF ;
    public final EObject entryRuleXShortClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXShortClosure = null;


        try {
            // InternalMyXeniaParser.g:3870:54: (iv_ruleXShortClosure= ruleXShortClosure EOF )
            // InternalMyXeniaParser.g:3871:2: iv_ruleXShortClosure= ruleXShortClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXShortClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXShortClosure=ruleXShortClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXShortClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXShortClosure"


    // $ANTLR start "ruleXShortClosure"
    // InternalMyXeniaParser.g:3877:1: ruleXShortClosure returns [EObject current=null] : ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXShortClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitSyntax_4_0=null;
        EObject lv_declaredFormalParameters_1_0 = null;

        EObject lv_declaredFormalParameters_3_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:3883:2: ( ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // InternalMyXeniaParser.g:3884:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // InternalMyXeniaParser.g:3884:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            // InternalMyXeniaParser.g:3885:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) )
            {
            // InternalMyXeniaParser.g:3885:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) )
            // InternalMyXeniaParser.g:3886:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) )
            {
            // InternalMyXeniaParser.g:3911:4: ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) )
            // InternalMyXeniaParser.g:3912:5: () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) )
            {
            // InternalMyXeniaParser.g:3912:5: ()
            // InternalMyXeniaParser.g:3913:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0(),
              							current);
              					
            }

            }

            // InternalMyXeniaParser.g:3919:5: ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==EqualsSignGreaterThanSign||LA78_0==LeftParenthesis||LA78_0==RULE_ID) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalMyXeniaParser.g:3920:6: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    {
                    // InternalMyXeniaParser.g:3920:6: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) )
                    // InternalMyXeniaParser.g:3921:7: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    {
                    // InternalMyXeniaParser.g:3921:7: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    // InternalMyXeniaParser.g:3922:8: lv_declaredFormalParameters_1_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0());
                      							
                    }
                    pushFollow(FOLLOW_62);
                    lv_declaredFormalParameters_1_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                      								}
                      								add(
                      									current,
                      									"declaredFormalParameters",
                      									lv_declaredFormalParameters_1_0,
                      									"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:3939:6: (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    loop77:
                    do {
                        int alt77=2;
                        int LA77_0 = input.LA(1);

                        if ( (LA77_0==Comma) ) {
                            alt77=1;
                        }


                        switch (alt77) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:3940:7: otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    {
                    	    otherlv_2=(Token)match(input,Comma,FOLLOW_37); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_2, grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0());
                    	      						
                    	    }
                    	    // InternalMyXeniaParser.g:3944:7: ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    // InternalMyXeniaParser.g:3945:8: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    {
                    	    // InternalMyXeniaParser.g:3945:8: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    // InternalMyXeniaParser.g:3946:9: lv_declaredFormalParameters_3_0= ruleJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0());
                    	      								
                    	    }
                    	    pushFollow(FOLLOW_62);
                    	    lv_declaredFormalParameters_3_0=ruleJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									if (current==null) {
                    	      										current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                    	      									}
                    	      									add(
                    	      										current,
                    	      										"declaredFormalParameters",
                    	      										lv_declaredFormalParameters_3_0,
                    	      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                    	      									afterParserOrEnumRuleCall();
                    	      								
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop77;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalMyXeniaParser.g:3965:5: ( (lv_explicitSyntax_4_0= VerticalLine ) )
            // InternalMyXeniaParser.g:3966:6: (lv_explicitSyntax_4_0= VerticalLine )
            {
            // InternalMyXeniaParser.g:3966:6: (lv_explicitSyntax_4_0= VerticalLine )
            // InternalMyXeniaParser.g:3967:7: lv_explicitSyntax_4_0= VerticalLine
            {
            lv_explicitSyntax_4_0=(Token)match(input,VerticalLine,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							newLeafNode(lv_explicitSyntax_4_0, grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0());
              						
            }
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElement(grammarAccess.getXShortClosureRule());
              							}
              							setWithLastConsumed(current, "explicitSyntax", lv_explicitSyntax_4_0 != null, "|");
              						
            }

            }


            }


            }


            }

            // InternalMyXeniaParser.g:3981:3: ( (lv_expression_5_0= ruleXExpression ) )
            // InternalMyXeniaParser.g:3982:4: (lv_expression_5_0= ruleXExpression )
            {
            // InternalMyXeniaParser.g:3982:4: (lv_expression_5_0= ruleXExpression )
            // InternalMyXeniaParser.g:3983:5: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXShortClosureRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXShortClosure"


    // $ANTLR start "entryRuleXParenthesizedExpression"
    // InternalMyXeniaParser.g:4004:1: entryRuleXParenthesizedExpression returns [EObject current=null] : iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF ;
    public final EObject entryRuleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXParenthesizedExpression = null;


        try {
            // InternalMyXeniaParser.g:4004:65: (iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF )
            // InternalMyXeniaParser.g:4005:2: iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXParenthesizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXParenthesizedExpression"


    // $ANTLR start "ruleXParenthesizedExpression"
    // InternalMyXeniaParser.g:4011:1: ruleXParenthesizedExpression returns [EObject current=null] : (otherlv_0= LeftParenthesis this_XExpression_1= ruleXExpression otherlv_2= RightParenthesis ) ;
    public final EObject ruleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:4017:2: ( (otherlv_0= LeftParenthesis this_XExpression_1= ruleXExpression otherlv_2= RightParenthesis ) )
            // InternalMyXeniaParser.g:4018:2: (otherlv_0= LeftParenthesis this_XExpression_1= ruleXExpression otherlv_2= RightParenthesis )
            {
            // InternalMyXeniaParser.g:4018:2: (otherlv_0= LeftParenthesis this_XExpression_1= ruleXExpression otherlv_2= RightParenthesis )
            // InternalMyXeniaParser.g:4019:3: otherlv_0= LeftParenthesis this_XExpression_1= ruleXExpression otherlv_2= RightParenthesis
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_53);
            this_XExpression_1=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XExpression_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXParenthesizedExpression"


    // $ANTLR start "entryRuleXIfExpression"
    // InternalMyXeniaParser.g:4039:1: entryRuleXIfExpression returns [EObject current=null] : iv_ruleXIfExpression= ruleXIfExpression EOF ;
    public final EObject entryRuleXIfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXIfExpression = null;


        try {
            // InternalMyXeniaParser.g:4039:54: (iv_ruleXIfExpression= ruleXIfExpression EOF )
            // InternalMyXeniaParser.g:4040:2: iv_ruleXIfExpression= ruleXIfExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXIfExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXIfExpression=ruleXIfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXIfExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXIfExpression"


    // $ANTLR start "ruleXIfExpression"
    // InternalMyXeniaParser.g:4046:1: ruleXIfExpression returns [EObject current=null] : ( () otherlv_1= If otherlv_2= LeftParenthesis ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_then_5_0= ruleXExpression ) ) ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXIfExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_if_3_0 = null;

        EObject lv_then_5_0 = null;

        EObject lv_else_7_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:4052:2: ( ( () otherlv_1= If otherlv_2= LeftParenthesis ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_then_5_0= ruleXExpression ) ) ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )? ) )
            // InternalMyXeniaParser.g:4053:2: ( () otherlv_1= If otherlv_2= LeftParenthesis ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_then_5_0= ruleXExpression ) ) ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            {
            // InternalMyXeniaParser.g:4053:2: ( () otherlv_1= If otherlv_2= LeftParenthesis ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_then_5_0= ruleXExpression ) ) ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            // InternalMyXeniaParser.g:4054:3: () otherlv_1= If otherlv_2= LeftParenthesis ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_then_5_0= ruleXExpression ) ) ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )?
            {
            // InternalMyXeniaParser.g:4054:3: ()
            // InternalMyXeniaParser.g:4055:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,If,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalMyXeniaParser.g:4069:3: ( (lv_if_3_0= ruleXExpression ) )
            // InternalMyXeniaParser.g:4070:4: (lv_if_3_0= ruleXExpression )
            {
            // InternalMyXeniaParser.g:4070:4: (lv_if_3_0= ruleXExpression )
            // InternalMyXeniaParser.g:4071:5: lv_if_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_53);
            lv_if_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              					}
              					set(
              						current,
              						"if",
              						lv_if_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalMyXeniaParser.g:4092:3: ( (lv_then_5_0= ruleXExpression ) )
            // InternalMyXeniaParser.g:4093:4: (lv_then_5_0= ruleXExpression )
            {
            // InternalMyXeniaParser.g:4093:4: (lv_then_5_0= ruleXExpression )
            // InternalMyXeniaParser.g:4094:5: lv_then_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_66);
            lv_then_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              					}
              					set(
              						current,
              						"then",
              						lv_then_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyXeniaParser.g:4111:3: ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==Else) ) {
                int LA79_1 = input.LA(2);

                if ( (synpred25_InternalMyXeniaParser()) ) {
                    alt79=1;
                }
            }
            switch (alt79) {
                case 1 :
                    // InternalMyXeniaParser.g:4112:4: ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) )
                    {
                    // InternalMyXeniaParser.g:4112:4: ( ( Else )=>otherlv_6= Else )
                    // InternalMyXeniaParser.g:4113:5: ( Else )=>otherlv_6= Else
                    {
                    otherlv_6=(Token)match(input,Else,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
                      				
                    }

                    }

                    // InternalMyXeniaParser.g:4119:4: ( (lv_else_7_0= ruleXExpression ) )
                    // InternalMyXeniaParser.g:4120:5: (lv_else_7_0= ruleXExpression )
                    {
                    // InternalMyXeniaParser.g:4120:5: (lv_else_7_0= ruleXExpression )
                    // InternalMyXeniaParser.g:4121:6: lv_else_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_else_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
                      						}
                      						set(
                      							current,
                      							"else",
                      							lv_else_7_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXIfExpression"


    // $ANTLR start "entryRuleXSwitchExpression"
    // InternalMyXeniaParser.g:4143:1: entryRuleXSwitchExpression returns [EObject current=null] : iv_ruleXSwitchExpression= ruleXSwitchExpression EOF ;
    public final EObject entryRuleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSwitchExpression = null;


        try {
            // InternalMyXeniaParser.g:4143:58: (iv_ruleXSwitchExpression= ruleXSwitchExpression EOF )
            // InternalMyXeniaParser.g:4144:2: iv_ruleXSwitchExpression= ruleXSwitchExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSwitchExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSwitchExpression=ruleXSwitchExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSwitchExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSwitchExpression"


    // $ANTLR start "ruleXSwitchExpression"
    // InternalMyXeniaParser.g:4150:1: ruleXSwitchExpression returns [EObject current=null] : ( () otherlv_1= Switch ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= LeftCurlyBracket ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= RightCurlyBracket ) ;
    public final EObject ruleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_switch_5_0 = null;

        EObject lv_declaredParam_7_0 = null;

        EObject lv_switch_9_0 = null;

        EObject lv_cases_11_0 = null;

        EObject lv_default_14_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:4156:2: ( ( () otherlv_1= Switch ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= LeftCurlyBracket ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= RightCurlyBracket ) )
            // InternalMyXeniaParser.g:4157:2: ( () otherlv_1= Switch ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= LeftCurlyBracket ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= RightCurlyBracket )
            {
            // InternalMyXeniaParser.g:4157:2: ( () otherlv_1= Switch ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= LeftCurlyBracket ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= RightCurlyBracket )
            // InternalMyXeniaParser.g:4158:3: () otherlv_1= Switch ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= LeftCurlyBracket ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= RightCurlyBracket
            {
            // InternalMyXeniaParser.g:4158:3: ()
            // InternalMyXeniaParser.g:4159:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Switch,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
              		
            }
            // InternalMyXeniaParser.g:4169:3: ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )
            int alt81=2;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    // InternalMyXeniaParser.g:4170:4: ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis )
                    {
                    // InternalMyXeniaParser.g:4170:4: ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis )
                    // InternalMyXeniaParser.g:4171:5: ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis
                    {
                    // InternalMyXeniaParser.g:4171:5: ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) )
                    // InternalMyXeniaParser.g:4172:6: ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon )
                    {
                    // InternalMyXeniaParser.g:4182:6: (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon )
                    // InternalMyXeniaParser.g:4183:7: otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon
                    {
                    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_2, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_0_0_0_0());
                      						
                    }
                    // InternalMyXeniaParser.g:4187:7: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
                    // InternalMyXeniaParser.g:4188:8: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    {
                    // InternalMyXeniaParser.g:4188:8: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    // InternalMyXeniaParser.g:4189:9: lv_declaredParam_3_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      									newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0());
                      								
                    }
                    pushFollow(FOLLOW_68);
                    lv_declaredParam_3_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      									if (current==null) {
                      										current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      									}
                      									set(
                      										current,
                      										"declaredParam",
                      										lv_declaredParam_3_0,
                      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                      									afterParserOrEnumRuleCall();
                      								
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,Colon,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_4, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_2());
                      						
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:4212:5: ( (lv_switch_5_0= ruleXExpression ) )
                    // InternalMyXeniaParser.g:4213:6: (lv_switch_5_0= ruleXExpression )
                    {
                    // InternalMyXeniaParser.g:4213:6: (lv_switch_5_0= ruleXExpression )
                    // InternalMyXeniaParser.g:4214:7: lv_switch_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_53);
                    lv_switch_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      							}
                      							set(
                      								current,
                      								"switch",
                      								lv_switch_5_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:4237:4: ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    {
                    // InternalMyXeniaParser.g:4237:4: ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    // InternalMyXeniaParser.g:4238:5: ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) )
                    {
                    // InternalMyXeniaParser.g:4238:5: ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )?
                    int alt80=2;
                    alt80 = dfa80.predict(input);
                    switch (alt80) {
                        case 1 :
                            // InternalMyXeniaParser.g:4239:6: ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon )
                            {
                            // InternalMyXeniaParser.g:4248:6: ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon )
                            // InternalMyXeniaParser.g:4249:7: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon
                            {
                            // InternalMyXeniaParser.g:4249:7: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) )
                            // InternalMyXeniaParser.g:4250:8: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            {
                            // InternalMyXeniaParser.g:4250:8: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            // InternalMyXeniaParser.g:4251:9: lv_declaredParam_7_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0());
                              								
                            }
                            pushFollow(FOLLOW_68);
                            lv_declaredParam_7_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                              									}
                              									set(
                              										current,
                              										"declaredParam",
                              										lv_declaredParam_7_0,
                              										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            otherlv_8=(Token)match(input,Colon,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_8, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_1());
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalMyXeniaParser.g:4274:5: ( (lv_switch_9_0= ruleXExpression ) )
                    // InternalMyXeniaParser.g:4275:6: (lv_switch_9_0= ruleXExpression )
                    {
                    // InternalMyXeniaParser.g:4275:6: (lv_switch_9_0= ruleXExpression )
                    // InternalMyXeniaParser.g:4276:7: lv_switch_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_55);
                    lv_switch_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      							}
                      							set(
                      								current,
                      								"switch",
                      								lv_switch_9_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,LeftCurlyBracket,FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalMyXeniaParser.g:4299:3: ( (lv_cases_11_0= ruleXCasePart ) )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==Case||LA82_0==EqualsSignGreaterThanSign||LA82_0==LeftParenthesis||LA82_0==Comma||LA82_0==Colon||LA82_0==RULE_ID) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // InternalMyXeniaParser.g:4300:4: (lv_cases_11_0= ruleXCasePart )
            	    {
            	    // InternalMyXeniaParser.g:4300:4: (lv_cases_11_0= ruleXCasePart )
            	    // InternalMyXeniaParser.g:4301:5: lv_cases_11_0= ruleXCasePart
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_69);
            	    lv_cases_11_0=ruleXCasePart();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"cases",
            	      						lv_cases_11_0,
            	      						"org.eclipse.xtext.xbase.Xbase.XCasePart");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

            // InternalMyXeniaParser.g:4318:3: (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==Default) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalMyXeniaParser.g:4319:4: otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) )
                    {
                    otherlv_12=(Token)match(input,Default,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0());
                      			
                    }
                    otherlv_13=(Token)match(input,Colon,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1());
                      			
                    }
                    // InternalMyXeniaParser.g:4327:4: ( (lv_default_14_0= ruleXExpression ) )
                    // InternalMyXeniaParser.g:4328:5: (lv_default_14_0= ruleXExpression )
                    {
                    // InternalMyXeniaParser.g:4328:5: (lv_default_14_0= ruleXExpression )
                    // InternalMyXeniaParser.g:4329:6: lv_default_14_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_70);
                    lv_default_14_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      						}
                      						set(
                      							current,
                      							"default",
                      							lv_default_14_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSwitchExpression"


    // $ANTLR start "entryRuleXCasePart"
    // InternalMyXeniaParser.g:4355:1: entryRuleXCasePart returns [EObject current=null] : iv_ruleXCasePart= ruleXCasePart EOF ;
    public final EObject entryRuleXCasePart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCasePart = null;


        try {
            // InternalMyXeniaParser.g:4355:50: (iv_ruleXCasePart= ruleXCasePart EOF )
            // InternalMyXeniaParser.g:4356:2: iv_ruleXCasePart= ruleXCasePart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCasePartRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCasePart=ruleXCasePart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCasePart; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCasePart"


    // $ANTLR start "ruleXCasePart"
    // InternalMyXeniaParser.g:4362:1: ruleXCasePart returns [EObject current=null] : ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) ) ) ;
    public final EObject ruleXCasePart() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_fallThrough_6_0=null;
        EObject lv_typeGuard_1_0 = null;

        EObject lv_case_3_0 = null;

        EObject lv_then_5_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:4368:2: ( ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) ) ) )
            // InternalMyXeniaParser.g:4369:2: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) ) )
            {
            // InternalMyXeniaParser.g:4369:2: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) ) )
            // InternalMyXeniaParser.g:4370:3: () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) )
            {
            // InternalMyXeniaParser.g:4370:3: ()
            // InternalMyXeniaParser.g:4371:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXCasePartAccess().getXCasePartAction_0(),
              					current);
              			
            }

            }

            // InternalMyXeniaParser.g:4377:3: ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==EqualsSignGreaterThanSign||LA84_0==LeftParenthesis||LA84_0==RULE_ID) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalMyXeniaParser.g:4378:4: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    {
                    // InternalMyXeniaParser.g:4378:4: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    // InternalMyXeniaParser.g:4379:5: lv_typeGuard_1_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_71);
                    lv_typeGuard_1_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      					}
                      					set(
                      						current,
                      						"typeGuard",
                      						lv_typeGuard_1_0,
                      						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalMyXeniaParser.g:4396:3: (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==Case) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalMyXeniaParser.g:4397:4: otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) )
                    {
                    otherlv_2=(Token)match(input,Case,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getXCasePartAccess().getCaseKeyword_2_0());
                      			
                    }
                    // InternalMyXeniaParser.g:4401:4: ( (lv_case_3_0= ruleXExpression ) )
                    // InternalMyXeniaParser.g:4402:5: (lv_case_3_0= ruleXExpression )
                    {
                    // InternalMyXeniaParser.g:4402:5: (lv_case_3_0= ruleXExpression )
                    // InternalMyXeniaParser.g:4403:6: lv_case_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_72);
                    lv_case_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      						}
                      						set(
                      							current,
                      							"case",
                      							lv_case_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyXeniaParser.g:4421:3: ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) )
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==Colon) ) {
                alt86=1;
            }
            else if ( (LA86_0==Comma) ) {
                alt86=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 86, 0, input);

                throw nvae;
            }
            switch (alt86) {
                case 1 :
                    // InternalMyXeniaParser.g:4422:4: (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) )
                    {
                    // InternalMyXeniaParser.g:4422:4: (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) )
                    // InternalMyXeniaParser.g:4423:5: otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) )
                    {
                    otherlv_4=(Token)match(input,Colon,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getXCasePartAccess().getColonKeyword_3_0_0());
                      				
                    }
                    // InternalMyXeniaParser.g:4427:5: ( (lv_then_5_0= ruleXExpression ) )
                    // InternalMyXeniaParser.g:4428:6: (lv_then_5_0= ruleXExpression )
                    {
                    // InternalMyXeniaParser.g:4428:6: (lv_then_5_0= ruleXExpression )
                    // InternalMyXeniaParser.g:4429:7: lv_then_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_then_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      							}
                      							set(
                      								current,
                      								"then",
                      								lv_then_5_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:4448:4: ( (lv_fallThrough_6_0= Comma ) )
                    {
                    // InternalMyXeniaParser.g:4448:4: ( (lv_fallThrough_6_0= Comma ) )
                    // InternalMyXeniaParser.g:4449:5: (lv_fallThrough_6_0= Comma )
                    {
                    // InternalMyXeniaParser.g:4449:5: (lv_fallThrough_6_0= Comma )
                    // InternalMyXeniaParser.g:4450:6: lv_fallThrough_6_0= Comma
                    {
                    lv_fallThrough_6_0=(Token)match(input,Comma,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_fallThrough_6_0, grammarAccess.getXCasePartAccess().getFallThroughCommaKeyword_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXCasePartRule());
                      						}
                      						setWithLastConsumed(current, "fallThrough", lv_fallThrough_6_0 != null, ",");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCasePart"


    // $ANTLR start "entryRuleXForLoopExpression"
    // InternalMyXeniaParser.g:4467:1: entryRuleXForLoopExpression returns [EObject current=null] : iv_ruleXForLoopExpression= ruleXForLoopExpression EOF ;
    public final EObject entryRuleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXForLoopExpression = null;


        try {
            // InternalMyXeniaParser.g:4467:59: (iv_ruleXForLoopExpression= ruleXForLoopExpression EOF )
            // InternalMyXeniaParser.g:4468:2: iv_ruleXForLoopExpression= ruleXForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXForLoopExpression=ruleXForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXForLoopExpression"


    // $ANTLR start "ruleXForLoopExpression"
    // InternalMyXeniaParser.g:4474:1: ruleXForLoopExpression returns [EObject current=null] : ( ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ( (lv_eachExpression_7_0= ruleXExpression ) ) ) ;
    public final EObject ruleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_forExpression_5_0 = null;

        EObject lv_eachExpression_7_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:4480:2: ( ( ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ( (lv_eachExpression_7_0= ruleXExpression ) ) ) )
            // InternalMyXeniaParser.g:4481:2: ( ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            {
            // InternalMyXeniaParser.g:4481:2: ( ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            // InternalMyXeniaParser.g:4482:3: ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ( (lv_eachExpression_7_0= ruleXExpression ) )
            {
            // InternalMyXeniaParser.g:4482:3: ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) )
            // InternalMyXeniaParser.g:4483:4: ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon )
            {
            // InternalMyXeniaParser.g:4496:4: ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon )
            // InternalMyXeniaParser.g:4497:5: () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon
            {
            // InternalMyXeniaParser.g:4497:5: ()
            // InternalMyXeniaParser.g:4498:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,For,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_0_0_1());
              				
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2());
              				
            }
            // InternalMyXeniaParser.g:4512:5: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
            // InternalMyXeniaParser.g:4513:6: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            {
            // InternalMyXeniaParser.g:4513:6: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            // InternalMyXeniaParser.g:4514:7: lv_declaredParam_3_0= ruleJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_0_0_3_0());
              						
            }
            pushFollow(FOLLOW_68);
            lv_declaredParam_3_0=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              							}
              							set(
              								current,
              								"declaredParam",
              								lv_declaredParam_3_0,
              								"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
              							afterParserOrEnumRuleCall();
              						
            }

            }


            }

            otherlv_4=(Token)match(input,Colon,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_0_0_4());
              				
            }

            }


            }

            // InternalMyXeniaParser.g:4537:3: ( (lv_forExpression_5_0= ruleXExpression ) )
            // InternalMyXeniaParser.g:4538:4: (lv_forExpression_5_0= ruleXExpression )
            {
            // InternalMyXeniaParser.g:4538:4: (lv_forExpression_5_0= ruleXExpression )
            // InternalMyXeniaParser.g:4539:5: lv_forExpression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_53);
            lv_forExpression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              					}
              					set(
              						current,
              						"forExpression",
              						lv_forExpression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalMyXeniaParser.g:4560:3: ( (lv_eachExpression_7_0= ruleXExpression ) )
            // InternalMyXeniaParser.g:4561:4: (lv_eachExpression_7_0= ruleXExpression )
            {
            // InternalMyXeniaParser.g:4561:4: (lv_eachExpression_7_0= ruleXExpression )
            // InternalMyXeniaParser.g:4562:5: lv_eachExpression_7_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_7_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              					}
              					set(
              						current,
              						"eachExpression",
              						lv_eachExpression_7_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXForLoopExpression"


    // $ANTLR start "entryRuleXBasicForLoopExpression"
    // InternalMyXeniaParser.g:4583:1: entryRuleXBasicForLoopExpression returns [EObject current=null] : iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF ;
    public final EObject entryRuleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBasicForLoopExpression = null;


        try {
            // InternalMyXeniaParser.g:4583:64: (iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF )
            // InternalMyXeniaParser.g:4584:2: iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBasicForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBasicForLoopExpression=ruleXBasicForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBasicForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBasicForLoopExpression"


    // $ANTLR start "ruleXBasicForLoopExpression"
    // InternalMyXeniaParser.g:4590:1: ruleXBasicForLoopExpression returns [EObject current=null] : ( () otherlv_1= For otherlv_2= LeftParenthesis ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= Semicolon ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= Semicolon ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= RightParenthesis ( (lv_eachExpression_13_0= ruleXExpression ) ) ) ;
    public final EObject ruleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_initExpressions_3_0 = null;

        EObject lv_initExpressions_5_0 = null;

        EObject lv_expression_7_0 = null;

        EObject lv_updateExpressions_9_0 = null;

        EObject lv_updateExpressions_11_0 = null;

        EObject lv_eachExpression_13_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:4596:2: ( ( () otherlv_1= For otherlv_2= LeftParenthesis ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= Semicolon ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= Semicolon ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= RightParenthesis ( (lv_eachExpression_13_0= ruleXExpression ) ) ) )
            // InternalMyXeniaParser.g:4597:2: ( () otherlv_1= For otherlv_2= LeftParenthesis ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= Semicolon ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= Semicolon ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= RightParenthesis ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            {
            // InternalMyXeniaParser.g:4597:2: ( () otherlv_1= For otherlv_2= LeftParenthesis ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= Semicolon ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= Semicolon ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= RightParenthesis ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            // InternalMyXeniaParser.g:4598:3: () otherlv_1= For otherlv_2= LeftParenthesis ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= Semicolon ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= Semicolon ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= RightParenthesis ( (lv_eachExpression_13_0= ruleXExpression ) )
            {
            // InternalMyXeniaParser.g:4598:3: ()
            // InternalMyXeniaParser.g:4599:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBasicForLoopExpressionAccess().getXBasicForLoopExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,For,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXBasicForLoopExpressionAccess().getForKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_73); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalMyXeniaParser.g:4613:3: ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==Synchronized||LA88_0==Extension||LA88_0==Extends||(LA88_0>=Import && LA88_0<=Typeof)||(LA88_0>=False && LA88_0<=While)||LA88_0==Null||LA88_0==True||(LA88_0>=For && LA88_0<=Var)||(LA88_0>=Do && LA88_0<=If)||(LA88_0>=ExclamationMark && LA88_0<=NumberSign)||LA88_0==LeftParenthesis||LA88_0==PlusSign||LA88_0==HyphenMinus||LA88_0==LessThanSign||LA88_0==LeftSquareBracket||LA88_0==RULE_BEGIN||(LA88_0>=RULE_HEX && LA88_0<=RULE_STRING)) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalMyXeniaParser.g:4614:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    {
                    // InternalMyXeniaParser.g:4614:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) )
                    // InternalMyXeniaParser.g:4615:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    {
                    // InternalMyXeniaParser.g:4615:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    // InternalMyXeniaParser.g:4616:6: lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_74);
                    lv_initExpressions_3_0=ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      						}
                      						add(
                      							current,
                      							"initExpressions",
                      							lv_initExpressions_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:4633:4: (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    loop87:
                    do {
                        int alt87=2;
                        int LA87_0 = input.LA(1);

                        if ( (LA87_0==Comma) ) {
                            alt87=1;
                        }


                        switch (alt87) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:4634:5: otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_28); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalMyXeniaParser.g:4638:5: ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    // InternalMyXeniaParser.g:4639:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    {
                    	    // InternalMyXeniaParser.g:4639:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    // InternalMyXeniaParser.g:4640:7: lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_74);
                    	    lv_initExpressions_5_0=ruleXExpressionOrVarDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"initExpressions",
                    	      								lv_initExpressions_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop87;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,Semicolon,FOLLOW_73); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_4());
              		
            }
            // InternalMyXeniaParser.g:4663:3: ( (lv_expression_7_0= ruleXExpression ) )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==Synchronized||LA89_0==Extension||LA89_0==Extends||(LA89_0>=Import && LA89_0<=Typeof)||(LA89_0>=False && LA89_0<=While)||LA89_0==Null||LA89_0==True||(LA89_0>=For && LA89_0<=Try)||(LA89_0>=Do && LA89_0<=If)||(LA89_0>=ExclamationMark && LA89_0<=NumberSign)||LA89_0==LeftParenthesis||LA89_0==PlusSign||LA89_0==HyphenMinus||LA89_0==LessThanSign||LA89_0==LeftSquareBracket||LA89_0==RULE_BEGIN||(LA89_0>=RULE_HEX && LA89_0<=RULE_STRING)) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalMyXeniaParser.g:4664:4: (lv_expression_7_0= ruleXExpression )
                    {
                    // InternalMyXeniaParser.g:4664:4: (lv_expression_7_0= ruleXExpression )
                    // InternalMyXeniaParser.g:4665:5: lv_expression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionXExpressionParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_75);
                    lv_expression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_7_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,Semicolon,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_6());
              		
            }
            // InternalMyXeniaParser.g:4686:3: ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==Synchronized||LA91_0==Extension||LA91_0==Extends||(LA91_0>=Import && LA91_0<=Typeof)||(LA91_0>=False && LA91_0<=While)||LA91_0==Null||LA91_0==True||(LA91_0>=For && LA91_0<=Try)||(LA91_0>=Do && LA91_0<=If)||(LA91_0>=ExclamationMark && LA91_0<=NumberSign)||LA91_0==LeftParenthesis||LA91_0==PlusSign||LA91_0==HyphenMinus||LA91_0==LessThanSign||LA91_0==LeftSquareBracket||LA91_0==RULE_BEGIN||(LA91_0>=RULE_HEX && LA91_0<=RULE_STRING)) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalMyXeniaParser.g:4687:4: ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    {
                    // InternalMyXeniaParser.g:4687:4: ( (lv_updateExpressions_9_0= ruleXExpression ) )
                    // InternalMyXeniaParser.g:4688:5: (lv_updateExpressions_9_0= ruleXExpression )
                    {
                    // InternalMyXeniaParser.g:4688:5: (lv_updateExpressions_9_0= ruleXExpression )
                    // InternalMyXeniaParser.g:4689:6: lv_updateExpressions_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_24);
                    lv_updateExpressions_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      						}
                      						add(
                      							current,
                      							"updateExpressions",
                      							lv_updateExpressions_9_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:4706:4: (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    loop90:
                    do {
                        int alt90=2;
                        int LA90_0 = input.LA(1);

                        if ( (LA90_0==Comma) ) {
                            alt90=1;
                        }


                        switch (alt90) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:4707:5: otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    {
                    	    otherlv_10=(Token)match(input,Comma,FOLLOW_28); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_7_1_0());
                    	      				
                    	    }
                    	    // InternalMyXeniaParser.g:4711:5: ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    // InternalMyXeniaParser.g:4712:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    {
                    	    // InternalMyXeniaParser.g:4712:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    // InternalMyXeniaParser.g:4713:7: lv_updateExpressions_11_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_updateExpressions_11_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"updateExpressions",
                    	      								lv_updateExpressions_11_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop90;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_12=(Token)match(input,RightParenthesis,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getXBasicForLoopExpressionAccess().getRightParenthesisKeyword_8());
              		
            }
            // InternalMyXeniaParser.g:4736:3: ( (lv_eachExpression_13_0= ruleXExpression ) )
            // InternalMyXeniaParser.g:4737:4: (lv_eachExpression_13_0= ruleXExpression )
            {
            // InternalMyXeniaParser.g:4737:4: (lv_eachExpression_13_0= ruleXExpression )
            // InternalMyXeniaParser.g:4738:5: lv_eachExpression_13_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_9_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_13_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
              					}
              					set(
              						current,
              						"eachExpression",
              						lv_eachExpression_13_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBasicForLoopExpression"


    // $ANTLR start "entryRuleXWhileExpression"
    // InternalMyXeniaParser.g:4759:1: entryRuleXWhileExpression returns [EObject current=null] : iv_ruleXWhileExpression= ruleXWhileExpression EOF ;
    public final EObject entryRuleXWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXWhileExpression = null;


        try {
            // InternalMyXeniaParser.g:4759:57: (iv_ruleXWhileExpression= ruleXWhileExpression EOF )
            // InternalMyXeniaParser.g:4760:2: iv_ruleXWhileExpression= ruleXWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXWhileExpression=ruleXWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXWhileExpression"


    // $ANTLR start "ruleXWhileExpression"
    // InternalMyXeniaParser.g:4766:1: ruleXWhileExpression returns [EObject current=null] : ( () otherlv_1= While otherlv_2= LeftParenthesis ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_body_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_predicate_3_0 = null;

        EObject lv_body_5_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:4772:2: ( ( () otherlv_1= While otherlv_2= LeftParenthesis ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_body_5_0= ruleXExpression ) ) ) )
            // InternalMyXeniaParser.g:4773:2: ( () otherlv_1= While otherlv_2= LeftParenthesis ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_body_5_0= ruleXExpression ) ) )
            {
            // InternalMyXeniaParser.g:4773:2: ( () otherlv_1= While otherlv_2= LeftParenthesis ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_body_5_0= ruleXExpression ) ) )
            // InternalMyXeniaParser.g:4774:3: () otherlv_1= While otherlv_2= LeftParenthesis ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_body_5_0= ruleXExpression ) )
            {
            // InternalMyXeniaParser.g:4774:3: ()
            // InternalMyXeniaParser.g:4775:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,While,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalMyXeniaParser.g:4789:3: ( (lv_predicate_3_0= ruleXExpression ) )
            // InternalMyXeniaParser.g:4790:4: (lv_predicate_3_0= ruleXExpression )
            {
            // InternalMyXeniaParser.g:4790:4: (lv_predicate_3_0= ruleXExpression )
            // InternalMyXeniaParser.g:4791:5: lv_predicate_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_53);
            lv_predicate_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalMyXeniaParser.g:4812:3: ( (lv_body_5_0= ruleXExpression ) )
            // InternalMyXeniaParser.g:4813:4: (lv_body_5_0= ruleXExpression )
            {
            // InternalMyXeniaParser.g:4813:4: (lv_body_5_0= ruleXExpression )
            // InternalMyXeniaParser.g:4814:5: lv_body_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXWhileExpression"


    // $ANTLR start "entryRuleXDoWhileExpression"
    // InternalMyXeniaParser.g:4835:1: entryRuleXDoWhileExpression returns [EObject current=null] : iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF ;
    public final EObject entryRuleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXDoWhileExpression = null;


        try {
            // InternalMyXeniaParser.g:4835:59: (iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF )
            // InternalMyXeniaParser.g:4836:2: iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXDoWhileExpression=ruleXDoWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXDoWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXDoWhileExpression"


    // $ANTLR start "ruleXDoWhileExpression"
    // InternalMyXeniaParser.g:4842:1: ruleXDoWhileExpression returns [EObject current=null] : ( () otherlv_1= Do ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= While otherlv_4= LeftParenthesis ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) ;
    public final EObject ruleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_body_2_0 = null;

        EObject lv_predicate_5_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:4848:2: ( ( () otherlv_1= Do ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= While otherlv_4= LeftParenthesis ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) )
            // InternalMyXeniaParser.g:4849:2: ( () otherlv_1= Do ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= While otherlv_4= LeftParenthesis ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis )
            {
            // InternalMyXeniaParser.g:4849:2: ( () otherlv_1= Do ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= While otherlv_4= LeftParenthesis ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis )
            // InternalMyXeniaParser.g:4850:3: () otherlv_1= Do ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= While otherlv_4= LeftParenthesis ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis
            {
            // InternalMyXeniaParser.g:4850:3: ()
            // InternalMyXeniaParser.g:4851:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Do,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
              		
            }
            // InternalMyXeniaParser.g:4861:3: ( (lv_body_2_0= ruleXExpression ) )
            // InternalMyXeniaParser.g:4862:4: (lv_body_2_0= ruleXExpression )
            {
            // InternalMyXeniaParser.g:4862:4: (lv_body_2_0= ruleXExpression )
            // InternalMyXeniaParser.g:4863:5: lv_body_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_77);
            lv_body_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,While,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
              		
            }
            otherlv_4=(Token)match(input,LeftParenthesis,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
              		
            }
            // InternalMyXeniaParser.g:4888:3: ( (lv_predicate_5_0= ruleXExpression ) )
            // InternalMyXeniaParser.g:4889:4: (lv_predicate_5_0= ruleXExpression )
            {
            // InternalMyXeniaParser.g:4889:4: (lv_predicate_5_0= ruleXExpression )
            // InternalMyXeniaParser.g:4890:5: lv_predicate_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_53);
            lv_predicate_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXDoWhileExpression"


    // $ANTLR start "entryRuleXExpressionOrVarDeclaration"
    // InternalMyXeniaParser.g:4915:1: entryRuleXExpressionOrVarDeclaration returns [EObject current=null] : iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF ;
    public final EObject entryRuleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionOrVarDeclaration = null;


        try {
            // InternalMyXeniaParser.g:4915:68: (iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF )
            // InternalMyXeniaParser.g:4916:2: iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionOrVarDeclaration=ruleXExpressionOrVarDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionOrVarDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionOrVarDeclaration"


    // $ANTLR start "ruleXExpressionOrVarDeclaration"
    // InternalMyXeniaParser.g:4922:1: ruleXExpressionOrVarDeclaration returns [EObject current=null] : (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_XVariableDeclaration_0 = null;

        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:4928:2: ( (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) )
            // InternalMyXeniaParser.g:4929:2: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            {
            // InternalMyXeniaParser.g:4929:2: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( ((LA92_0>=Val && LA92_0<=Var)) ) {
                alt92=1;
            }
            else if ( (LA92_0==Synchronized||LA92_0==Extension||LA92_0==Extends||(LA92_0>=Import && LA92_0<=Typeof)||(LA92_0>=False && LA92_0<=While)||LA92_0==Null||LA92_0==True||(LA92_0>=For && LA92_0<=Try)||(LA92_0>=Do && LA92_0<=If)||(LA92_0>=ExclamationMark && LA92_0<=NumberSign)||LA92_0==LeftParenthesis||LA92_0==PlusSign||LA92_0==HyphenMinus||LA92_0==LessThanSign||LA92_0==LeftSquareBracket||LA92_0==RULE_BEGIN||(LA92_0>=RULE_HEX && LA92_0<=RULE_STRING)) ) {
                alt92=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 92, 0, input);

                throw nvae;
            }
            switch (alt92) {
                case 1 :
                    // InternalMyXeniaParser.g:4930:3: this_XVariableDeclaration_0= ruleXVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXVariableDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XVariableDeclaration_0=ruleXVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XVariableDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:4939:3: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionOrVarDeclaration"


    // $ANTLR start "entryRuleXVariableDeclaration"
    // InternalMyXeniaParser.g:4951:1: entryRuleXVariableDeclaration returns [EObject current=null] : iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF ;
    public final EObject entryRuleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXVariableDeclaration = null;


        try {
            // InternalMyXeniaParser.g:4951:61: (iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF )
            // InternalMyXeniaParser.g:4952:2: iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXVariableDeclaration=ruleXVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXVariableDeclaration"


    // $ANTLR start "ruleXVariableDeclaration"
    // InternalMyXeniaParser.g:4958:1: ruleXVariableDeclaration returns [EObject current=null] : ( () ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_writeable_1_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        EObject lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_right_7_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:4964:2: ( ( () ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )? ) )
            // InternalMyXeniaParser.g:4965:2: ( () ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )? )
            {
            // InternalMyXeniaParser.g:4965:2: ( () ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )? )
            // InternalMyXeniaParser.g:4966:3: () ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )?
            {
            // InternalMyXeniaParser.g:4966:3: ()
            // InternalMyXeniaParser.g:4967:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalMyXeniaParser.g:4973:3: ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val )
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==Var) ) {
                alt93=1;
            }
            else if ( (LA93_0==Val) ) {
                alt93=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 93, 0, input);

                throw nvae;
            }
            switch (alt93) {
                case 1 :
                    // InternalMyXeniaParser.g:4974:4: ( (lv_writeable_1_0= Var ) )
                    {
                    // InternalMyXeniaParser.g:4974:4: ( (lv_writeable_1_0= Var ) )
                    // InternalMyXeniaParser.g:4975:5: (lv_writeable_1_0= Var )
                    {
                    // InternalMyXeniaParser.g:4975:5: (lv_writeable_1_0= Var )
                    // InternalMyXeniaParser.g:4976:6: lv_writeable_1_0= Var
                    {
                    lv_writeable_1_0=(Token)match(input,Var,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_writeable_1_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						setWithLastConsumed(current, "writeable", lv_writeable_1_0 != null, "var");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:4989:4: otherlv_2= Val
                    {
                    otherlv_2=(Token)match(input,Val,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalMyXeniaParser.g:4994:3: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) )
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==RULE_ID) ) {
                int LA94_1 = input.LA(2);

                if ( (synpred29_InternalMyXeniaParser()) ) {
                    alt94=1;
                }
                else if ( (true) ) {
                    alt94=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA94_0==LeftParenthesis) && (synpred29_InternalMyXeniaParser())) {
                alt94=1;
            }
            else if ( (LA94_0==EqualsSignGreaterThanSign) && (synpred29_InternalMyXeniaParser())) {
                alt94=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 94, 0, input);

                throw nvae;
            }
            switch (alt94) {
                case 1 :
                    // InternalMyXeniaParser.g:4995:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    {
                    // InternalMyXeniaParser.g:4995:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    // InternalMyXeniaParser.g:4996:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    {
                    // InternalMyXeniaParser.g:5009:5: ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    // InternalMyXeniaParser.g:5010:6: ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) )
                    {
                    // InternalMyXeniaParser.g:5010:6: ( (lv_type_3_0= ruleJvmTypeReference ) )
                    // InternalMyXeniaParser.g:5011:7: (lv_type_3_0= ruleJvmTypeReference )
                    {
                    // InternalMyXeniaParser.g:5011:7: (lv_type_3_0= ruleJvmTypeReference )
                    // InternalMyXeniaParser.g:5012:8: lv_type_3_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0());
                      							
                    }
                    pushFollow(FOLLOW_78);
                    lv_type_3_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      								}
                      								set(
                      									current,
                      									"type",
                      									lv_type_3_0,
                      									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:5029:6: ( (lv_name_4_0= ruleValidID ) )
                    // InternalMyXeniaParser.g:5030:7: (lv_name_4_0= ruleValidID )
                    {
                    // InternalMyXeniaParser.g:5030:7: (lv_name_4_0= ruleValidID )
                    // InternalMyXeniaParser.g:5031:8: lv_name_4_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0());
                      							
                    }
                    pushFollow(FOLLOW_79);
                    lv_name_4_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      								}
                      								set(
                      									current,
                      									"name",
                      									lv_name_4_0,
                      									"org.eclipse.xtext.xbase.Xtype.ValidID");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:5051:4: ( (lv_name_5_0= ruleValidID ) )
                    {
                    // InternalMyXeniaParser.g:5051:4: ( (lv_name_5_0= ruleValidID ) )
                    // InternalMyXeniaParser.g:5052:5: (lv_name_5_0= ruleValidID )
                    {
                    // InternalMyXeniaParser.g:5052:5: (lv_name_5_0= ruleValidID )
                    // InternalMyXeniaParser.g:5053:6: lv_name_5_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_79);
                    lv_name_5_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_5_0,
                      							"org.eclipse.xtext.xbase.Xtype.ValidID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyXeniaParser.g:5071:3: (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==EqualsSign) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalMyXeniaParser.g:5072:4: otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,EqualsSign,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0());
                      			
                    }
                    // InternalMyXeniaParser.g:5076:4: ( (lv_right_7_0= ruleXExpression ) )
                    // InternalMyXeniaParser.g:5077:5: (lv_right_7_0= ruleXExpression )
                    {
                    // InternalMyXeniaParser.g:5077:5: (lv_right_7_0= ruleXExpression )
                    // InternalMyXeniaParser.g:5078:6: lv_right_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_right_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"right",
                      							lv_right_7_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXVariableDeclaration"


    // $ANTLR start "entryRuleJvmFormalParameter"
    // InternalMyXeniaParser.g:5100:1: entryRuleJvmFormalParameter returns [EObject current=null] : iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF ;
    public final EObject entryRuleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmFormalParameter = null;


        try {
            // InternalMyXeniaParser.g:5100:59: (iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF )
            // InternalMyXeniaParser.g:5101:2: iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmFormalParameter=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmFormalParameter"


    // $ANTLR start "ruleJvmFormalParameter"
    // InternalMyXeniaParser.g:5107:1: ruleJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:5113:2: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalMyXeniaParser.g:5114:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalMyXeniaParser.g:5114:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            // InternalMyXeniaParser.g:5115:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalMyXeniaParser.g:5115:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==RULE_ID) ) {
                int LA96_1 = input.LA(2);

                if ( (LA96_1==FullStop||LA96_1==LessThanSign||LA96_1==LeftSquareBracket||LA96_1==RULE_ID) ) {
                    alt96=1;
                }
            }
            else if ( (LA96_0==EqualsSignGreaterThanSign||LA96_0==LeftParenthesis) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalMyXeniaParser.g:5116:4: (lv_parameterType_0_0= ruleJvmTypeReference )
                    {
                    // InternalMyXeniaParser.g:5116:4: (lv_parameterType_0_0= ruleJvmTypeReference )
                    // InternalMyXeniaParser.g:5117:5: lv_parameterType_0_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_78);
                    lv_parameterType_0_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
                      					}
                      					set(
                      						current,
                      						"parameterType",
                      						lv_parameterType_0_0,
                      						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalMyXeniaParser.g:5134:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalMyXeniaParser.g:5135:4: (lv_name_1_0= ruleValidID )
            {
            // InternalMyXeniaParser.g:5135:4: (lv_name_1_0= ruleValidID )
            // InternalMyXeniaParser.g:5136:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmFormalParameter"


    // $ANTLR start "entryRuleFullJvmFormalParameter"
    // InternalMyXeniaParser.g:5157:1: entryRuleFullJvmFormalParameter returns [EObject current=null] : iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF ;
    public final EObject entryRuleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFullJvmFormalParameter = null;


        try {
            // InternalMyXeniaParser.g:5157:63: (iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF )
            // InternalMyXeniaParser.g:5158:2: iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFullJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFullJvmFormalParameter"


    // $ANTLR start "ruleFullJvmFormalParameter"
    // InternalMyXeniaParser.g:5164:1: ruleFullJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:5170:2: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalMyXeniaParser.g:5171:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalMyXeniaParser.g:5171:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            // InternalMyXeniaParser.g:5172:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalMyXeniaParser.g:5172:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )
            // InternalMyXeniaParser.g:5173:4: (lv_parameterType_0_0= ruleJvmTypeReference )
            {
            // InternalMyXeniaParser.g:5173:4: (lv_parameterType_0_0= ruleJvmTypeReference )
            // InternalMyXeniaParser.g:5174:5: lv_parameterType_0_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_78);
            lv_parameterType_0_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"parameterType",
              						lv_parameterType_0_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyXeniaParser.g:5191:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalMyXeniaParser.g:5192:4: (lv_name_1_0= ruleValidID )
            {
            // InternalMyXeniaParser.g:5192:4: (lv_name_1_0= ruleValidID )
            // InternalMyXeniaParser.g:5193:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFullJvmFormalParameter"


    // $ANTLR start "entryRuleXFeatureCall"
    // InternalMyXeniaParser.g:5214:1: entryRuleXFeatureCall returns [EObject current=null] : iv_ruleXFeatureCall= ruleXFeatureCall EOF ;
    public final EObject entryRuleXFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFeatureCall = null;


        try {
            // InternalMyXeniaParser.g:5214:53: (iv_ruleXFeatureCall= ruleXFeatureCall EOF )
            // InternalMyXeniaParser.g:5215:2: iv_ruleXFeatureCall= ruleXFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFeatureCall=ruleXFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFeatureCall"


    // $ANTLR start "ruleXFeatureCall"
    // InternalMyXeniaParser.g:5221:1: ruleXFeatureCall returns [EObject current=null] : ( () (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) ;
    public final EObject ruleXFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_explicitOperationCall_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_typeArguments_2_0 = null;

        EObject lv_typeArguments_4_0 = null;

        EObject lv_featureCallArguments_8_0 = null;

        EObject lv_featureCallArguments_9_0 = null;

        EObject lv_featureCallArguments_11_0 = null;

        EObject lv_featureCallArguments_13_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:5227:2: ( ( () (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) )
            // InternalMyXeniaParser.g:5228:2: ( () (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            {
            // InternalMyXeniaParser.g:5228:2: ( () (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            // InternalMyXeniaParser.g:5229:3: () (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            {
            // InternalMyXeniaParser.g:5229:3: ()
            // InternalMyXeniaParser.g:5230:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
              					current);
              			
            }

            }

            // InternalMyXeniaParser.g:5236:3: (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==LessThanSign) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalMyXeniaParser.g:5237:4: otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign
                    {
                    otherlv_1=(Token)match(input,LessThanSign,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0());
                      			
                    }
                    // InternalMyXeniaParser.g:5241:4: ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalMyXeniaParser.g:5242:5: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalMyXeniaParser.g:5242:5: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalMyXeniaParser.g:5243:6: lv_typeArguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_50);
                    lv_typeArguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      						}
                      						add(
                      							current,
                      							"typeArguments",
                      							lv_typeArguments_2_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:5260:4: (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop97:
                    do {
                        int alt97=2;
                        int LA97_0 = input.LA(1);

                        if ( (LA97_0==Comma) ) {
                            alt97=1;
                        }


                        switch (alt97) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:5261:5: otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_49); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalMyXeniaParser.g:5265:5: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalMyXeniaParser.g:5266:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalMyXeniaParser.g:5266:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalMyXeniaParser.g:5267:7: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_50);
                    	    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"typeArguments",
                    	      								lv_typeArguments_4_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop97;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,GreaterThanSign,FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3());
                      			
                    }

                    }
                    break;

            }

            // InternalMyXeniaParser.g:5290:3: ( ( ruleIdOrSuper ) )
            // InternalMyXeniaParser.g:5291:4: ( ruleIdOrSuper )
            {
            // InternalMyXeniaParser.g:5291:4: ( ruleIdOrSuper )
            // InternalMyXeniaParser.g:5292:5: ruleIdOrSuper
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXFeatureCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_80);
            ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyXeniaParser.g:5306:3: ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )?
            int alt101=2;
            alt101 = dfa101.predict(input);
            switch (alt101) {
                case 1 :
                    // InternalMyXeniaParser.g:5307:4: ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis
                    {
                    // InternalMyXeniaParser.g:5307:4: ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) )
                    // InternalMyXeniaParser.g:5308:5: ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis )
                    {
                    // InternalMyXeniaParser.g:5312:5: (lv_explicitOperationCall_7_0= LeftParenthesis )
                    // InternalMyXeniaParser.g:5313:6: lv_explicitOperationCall_7_0= LeftParenthesis
                    {
                    lv_explicitOperationCall_7_0=(Token)match(input,LeftParenthesis,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitOperationCall_7_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXFeatureCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitOperationCall", lv_explicitOperationCall_7_0 != null, "(");
                      					
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:5325:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?
                    int alt100=3;
                    alt100 = dfa100.predict(input);
                    switch (alt100) {
                        case 1 :
                            // InternalMyXeniaParser.g:5326:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            {
                            // InternalMyXeniaParser.g:5326:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            // InternalMyXeniaParser.g:5327:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure )
                            {
                            // InternalMyXeniaParser.g:5352:6: (lv_featureCallArguments_8_0= ruleXShortClosure )
                            // InternalMyXeniaParser.g:5353:7: lv_featureCallArguments_8_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_53);
                            lv_featureCallArguments_8_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              							}
                              							add(
                              								current,
                              								"featureCallArguments",
                              								lv_featureCallArguments_8_0,
                              								"org.eclipse.xtext.xbase.Xbase.XShortClosure");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMyXeniaParser.g:5371:5: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            {
                            // InternalMyXeniaParser.g:5371:5: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            // InternalMyXeniaParser.g:5372:6: ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            {
                            // InternalMyXeniaParser.g:5372:6: ( (lv_featureCallArguments_9_0= ruleXExpression ) )
                            // InternalMyXeniaParser.g:5373:7: (lv_featureCallArguments_9_0= ruleXExpression )
                            {
                            // InternalMyXeniaParser.g:5373:7: (lv_featureCallArguments_9_0= ruleXExpression )
                            // InternalMyXeniaParser.g:5374:8: lv_featureCallArguments_9_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_24);
                            lv_featureCallArguments_9_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              								}
                              								add(
                              									current,
                              									"featureCallArguments",
                              									lv_featureCallArguments_9_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalMyXeniaParser.g:5391:6: (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            loop99:
                            do {
                                int alt99=2;
                                int LA99_0 = input.LA(1);

                                if ( (LA99_0==Comma) ) {
                                    alt99=1;
                                }


                                switch (alt99) {
                            	case 1 :
                            	    // InternalMyXeniaParser.g:5392:7: otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,Comma,FOLLOW_28); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0());
                            	      						
                            	    }
                            	    // InternalMyXeniaParser.g:5396:7: ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    // InternalMyXeniaParser.g:5397:8: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    {
                            	    // InternalMyXeniaParser.g:5397:8: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    // InternalMyXeniaParser.g:5398:9: lv_featureCallArguments_11_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_24);
                            	    lv_featureCallArguments_11_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"featureCallArguments",
                            	      										lv_featureCallArguments_11_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop99;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,RightParenthesis,FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2());
                      			
                    }

                    }
                    break;

            }

            // InternalMyXeniaParser.g:5423:3: ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            int alt102=2;
            alt102 = dfa102.predict(input);
            switch (alt102) {
                case 1 :
                    // InternalMyXeniaParser.g:5424:4: ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure )
                    {
                    // InternalMyXeniaParser.g:5430:4: (lv_featureCallArguments_13_0= ruleXClosure )
                    // InternalMyXeniaParser.g:5431:5: lv_featureCallArguments_13_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_featureCallArguments_13_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      					}
                      					add(
                      						current,
                      						"featureCallArguments",
                      						lv_featureCallArguments_13_0,
                      						"org.eclipse.xtext.xbase.Xbase.XClosure");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFeatureCall"


    // $ANTLR start "entryRuleFeatureCallID"
    // InternalMyXeniaParser.g:5452:1: entryRuleFeatureCallID returns [String current=null] : iv_ruleFeatureCallID= ruleFeatureCallID EOF ;
    public final String entryRuleFeatureCallID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFeatureCallID = null;


        try {
            // InternalMyXeniaParser.g:5452:53: (iv_ruleFeatureCallID= ruleFeatureCallID EOF )
            // InternalMyXeniaParser.g:5453:2: iv_ruleFeatureCallID= ruleFeatureCallID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureCallIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureCallID=ruleFeatureCallID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureCallID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureCallID"


    // $ANTLR start "ruleFeatureCallID"
    // InternalMyXeniaParser.g:5459:1: ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID | kw= Extends | kw= Static | kw= Import | kw= Extension ) ;
    public final AntlrDatatypeRuleToken ruleFeatureCallID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:5465:2: ( (this_ValidID_0= ruleValidID | kw= Extends | kw= Static | kw= Import | kw= Extension ) )
            // InternalMyXeniaParser.g:5466:2: (this_ValidID_0= ruleValidID | kw= Extends | kw= Static | kw= Import | kw= Extension )
            {
            // InternalMyXeniaParser.g:5466:2: (this_ValidID_0= ruleValidID | kw= Extends | kw= Static | kw= Import | kw= Extension )
            int alt103=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt103=1;
                }
                break;
            case Extends:
                {
                alt103=2;
                }
                break;
            case Static:
                {
                alt103=3;
                }
                break;
            case Import:
                {
                alt103=4;
                }
                break;
            case Extension:
                {
                alt103=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 103, 0, input);

                throw nvae;
            }

            switch (alt103) {
                case 1 :
                    // InternalMyXeniaParser.g:5467:3: this_ValidID_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ValidID_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ValidID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:5478:3: kw= Extends
                    {
                    kw=(Token)match(input,Extends,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyXeniaParser.g:5484:3: kw= Static
                    {
                    kw=(Token)match(input,Static,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyXeniaParser.g:5490:3: kw= Import
                    {
                    kw=(Token)match(input,Import,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getImportKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMyXeniaParser.g:5496:3: kw= Extension
                    {
                    kw=(Token)match(input,Extension,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureCallID"


    // $ANTLR start "entryRuleIdOrSuper"
    // InternalMyXeniaParser.g:5505:1: entryRuleIdOrSuper returns [String current=null] : iv_ruleIdOrSuper= ruleIdOrSuper EOF ;
    public final String entryRuleIdOrSuper() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdOrSuper = null;


        try {
            // InternalMyXeniaParser.g:5505:49: (iv_ruleIdOrSuper= ruleIdOrSuper EOF )
            // InternalMyXeniaParser.g:5506:2: iv_ruleIdOrSuper= ruleIdOrSuper EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdOrSuperRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdOrSuper=ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdOrSuper.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdOrSuper"


    // $ANTLR start "ruleIdOrSuper"
    // InternalMyXeniaParser.g:5512:1: ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_FeatureCallID_0= ruleFeatureCallID | kw= Super ) ;
    public final AntlrDatatypeRuleToken ruleIdOrSuper() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_FeatureCallID_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:5518:2: ( (this_FeatureCallID_0= ruleFeatureCallID | kw= Super ) )
            // InternalMyXeniaParser.g:5519:2: (this_FeatureCallID_0= ruleFeatureCallID | kw= Super )
            {
            // InternalMyXeniaParser.g:5519:2: (this_FeatureCallID_0= ruleFeatureCallID | kw= Super )
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==Extension||LA104_0==Extends||LA104_0==Import||LA104_0==Static||LA104_0==RULE_ID) ) {
                alt104=1;
            }
            else if ( (LA104_0==Super) ) {
                alt104=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 104, 0, input);

                throw nvae;
            }
            switch (alt104) {
                case 1 :
                    // InternalMyXeniaParser.g:5520:3: this_FeatureCallID_0= ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureCallID_0=ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_FeatureCallID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:5531:3: kw= Super
                    {
                    kw=(Token)match(input,Super,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdOrSuper"


    // $ANTLR start "entryRuleXConstructorCall"
    // InternalMyXeniaParser.g:5540:1: entryRuleXConstructorCall returns [EObject current=null] : iv_ruleXConstructorCall= ruleXConstructorCall EOF ;
    public final EObject entryRuleXConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXConstructorCall = null;


        try {
            // InternalMyXeniaParser.g:5540:57: (iv_ruleXConstructorCall= ruleXConstructorCall EOF )
            // InternalMyXeniaParser.g:5541:2: iv_ruleXConstructorCall= ruleXConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXConstructorCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXConstructorCall=ruleXConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXConstructorCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXConstructorCall"


    // $ANTLR start "ruleXConstructorCall"
    // InternalMyXeniaParser.g:5547:1: ruleXConstructorCall returns [EObject current=null] : ( () otherlv_1= New ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )? ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) ;
    public final EObject ruleXConstructorCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_explicitConstructorCall_8_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_typeArguments_4_0 = null;

        EObject lv_typeArguments_6_0 = null;

        EObject lv_arguments_9_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;

        EObject lv_arguments_14_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:5553:2: ( ( () otherlv_1= New ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )? ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) )
            // InternalMyXeniaParser.g:5554:2: ( () otherlv_1= New ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )? ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            {
            // InternalMyXeniaParser.g:5554:2: ( () otherlv_1= New ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )? ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            // InternalMyXeniaParser.g:5555:3: () otherlv_1= New ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )? ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            {
            // InternalMyXeniaParser.g:5555:3: ()
            // InternalMyXeniaParser.g:5556:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,New,FOLLOW_78); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
              		
            }
            // InternalMyXeniaParser.g:5566:3: ( ( ruleQualifiedName ) )
            // InternalMyXeniaParser.g:5567:4: ( ruleQualifiedName )
            {
            // InternalMyXeniaParser.g:5567:4: ( ruleQualifiedName )
            // InternalMyXeniaParser.g:5568:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXConstructorCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_82);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyXeniaParser.g:5582:3: ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )?
            int alt106=2;
            alt106 = dfa106.predict(input);
            switch (alt106) {
                case 1 :
                    // InternalMyXeniaParser.g:5583:4: ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign
                    {
                    // InternalMyXeniaParser.g:5583:4: ( ( LessThanSign )=>otherlv_3= LessThanSign )
                    // InternalMyXeniaParser.g:5584:5: ( LessThanSign )=>otherlv_3= LessThanSign
                    {
                    otherlv_3=(Token)match(input,LessThanSign,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0());
                      				
                    }

                    }

                    // InternalMyXeniaParser.g:5590:4: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    // InternalMyXeniaParser.g:5591:5: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalMyXeniaParser.g:5591:5: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    // InternalMyXeniaParser.g:5592:6: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_50);
                    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      						}
                      						add(
                      							current,
                      							"typeArguments",
                      							lv_typeArguments_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:5609:4: (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )*
                    loop105:
                    do {
                        int alt105=2;
                        int LA105_0 = input.LA(1);

                        if ( (LA105_0==Comma) ) {
                            alt105=1;
                        }


                        switch (alt105) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:5610:5: otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_5=(Token)match(input,Comma,FOLLOW_49); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalMyXeniaParser.g:5614:5: ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalMyXeniaParser.g:5615:6: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalMyXeniaParser.g:5615:6: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    // InternalMyXeniaParser.g:5616:7: lv_typeArguments_6_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_50);
                    	    lv_typeArguments_6_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"typeArguments",
                    	      								lv_typeArguments_6_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop105;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,GreaterThanSign,FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3());
                      			
                    }

                    }
                    break;

            }

            // InternalMyXeniaParser.g:5639:3: ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )?
            int alt109=2;
            alt109 = dfa109.predict(input);
            switch (alt109) {
                case 1 :
                    // InternalMyXeniaParser.g:5640:4: ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis
                    {
                    // InternalMyXeniaParser.g:5640:4: ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) )
                    // InternalMyXeniaParser.g:5641:5: ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis )
                    {
                    // InternalMyXeniaParser.g:5645:5: (lv_explicitConstructorCall_8_0= LeftParenthesis )
                    // InternalMyXeniaParser.g:5646:6: lv_explicitConstructorCall_8_0= LeftParenthesis
                    {
                    lv_explicitConstructorCall_8_0=(Token)match(input,LeftParenthesis,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitConstructorCall_8_0, grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXConstructorCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitConstructorCall", lv_explicitConstructorCall_8_0 != null, "(");
                      					
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:5658:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?
                    int alt108=3;
                    alt108 = dfa108.predict(input);
                    switch (alt108) {
                        case 1 :
                            // InternalMyXeniaParser.g:5659:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            {
                            // InternalMyXeniaParser.g:5659:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            // InternalMyXeniaParser.g:5660:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure )
                            {
                            // InternalMyXeniaParser.g:5685:6: (lv_arguments_9_0= ruleXShortClosure )
                            // InternalMyXeniaParser.g:5686:7: lv_arguments_9_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_53);
                            lv_arguments_9_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              							}
                              							add(
                              								current,
                              								"arguments",
                              								lv_arguments_9_0,
                              								"org.eclipse.xtext.xbase.Xbase.XShortClosure");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMyXeniaParser.g:5704:5: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            {
                            // InternalMyXeniaParser.g:5704:5: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            // InternalMyXeniaParser.g:5705:6: ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            {
                            // InternalMyXeniaParser.g:5705:6: ( (lv_arguments_10_0= ruleXExpression ) )
                            // InternalMyXeniaParser.g:5706:7: (lv_arguments_10_0= ruleXExpression )
                            {
                            // InternalMyXeniaParser.g:5706:7: (lv_arguments_10_0= ruleXExpression )
                            // InternalMyXeniaParser.g:5707:8: lv_arguments_10_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_24);
                            lv_arguments_10_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              								}
                              								add(
                              									current,
                              									"arguments",
                              									lv_arguments_10_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalMyXeniaParser.g:5724:6: (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            loop107:
                            do {
                                int alt107=2;
                                int LA107_0 = input.LA(1);

                                if ( (LA107_0==Comma) ) {
                                    alt107=1;
                                }


                                switch (alt107) {
                            	case 1 :
                            	    // InternalMyXeniaParser.g:5725:7: otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) )
                            	    {
                            	    otherlv_11=(Token)match(input,Comma,FOLLOW_28); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_11, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0());
                            	      						
                            	    }
                            	    // InternalMyXeniaParser.g:5729:7: ( (lv_arguments_12_0= ruleXExpression ) )
                            	    // InternalMyXeniaParser.g:5730:8: (lv_arguments_12_0= ruleXExpression )
                            	    {
                            	    // InternalMyXeniaParser.g:5730:8: (lv_arguments_12_0= ruleXExpression )
                            	    // InternalMyXeniaParser.g:5731:9: lv_arguments_12_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_24);
                            	    lv_arguments_12_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arguments",
                            	      										lv_arguments_12_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop107;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,RightParenthesis,FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
                      			
                    }

                    }
                    break;

            }

            // InternalMyXeniaParser.g:5756:3: ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            int alt110=2;
            alt110 = dfa110.predict(input);
            switch (alt110) {
                case 1 :
                    // InternalMyXeniaParser.g:5757:4: ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure )
                    {
                    // InternalMyXeniaParser.g:5763:4: (lv_arguments_14_0= ruleXClosure )
                    // InternalMyXeniaParser.g:5764:5: lv_arguments_14_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arguments_14_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      					}
                      					add(
                      						current,
                      						"arguments",
                      						lv_arguments_14_0,
                      						"org.eclipse.xtext.xbase.Xbase.XClosure");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXConstructorCall"


    // $ANTLR start "entryRuleXBooleanLiteral"
    // InternalMyXeniaParser.g:5785:1: entryRuleXBooleanLiteral returns [EObject current=null] : iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF ;
    public final EObject entryRuleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBooleanLiteral = null;


        try {
            // InternalMyXeniaParser.g:5785:56: (iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF )
            // InternalMyXeniaParser.g:5786:2: iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBooleanLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBooleanLiteral=ruleXBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBooleanLiteral"


    // $ANTLR start "ruleXBooleanLiteral"
    // InternalMyXeniaParser.g:5792:1: ruleXBooleanLiteral returns [EObject current=null] : ( () (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) ) ) ;
    public final EObject ruleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isTrue_2_0=null;


        	enterRule();

        try {
            // InternalMyXeniaParser.g:5798:2: ( ( () (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) ) ) )
            // InternalMyXeniaParser.g:5799:2: ( () (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) ) )
            {
            // InternalMyXeniaParser.g:5799:2: ( () (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) ) )
            // InternalMyXeniaParser.g:5800:3: () (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) )
            {
            // InternalMyXeniaParser.g:5800:3: ()
            // InternalMyXeniaParser.g:5801:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalMyXeniaParser.g:5807:3: (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) )
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==False) ) {
                alt111=1;
            }
            else if ( (LA111_0==True) ) {
                alt111=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 111, 0, input);

                throw nvae;
            }
            switch (alt111) {
                case 1 :
                    // InternalMyXeniaParser.g:5808:4: otherlv_1= False
                    {
                    otherlv_1=(Token)match(input,False,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:5813:4: ( (lv_isTrue_2_0= True ) )
                    {
                    // InternalMyXeniaParser.g:5813:4: ( (lv_isTrue_2_0= True ) )
                    // InternalMyXeniaParser.g:5814:5: (lv_isTrue_2_0= True )
                    {
                    // InternalMyXeniaParser.g:5814:5: (lv_isTrue_2_0= True )
                    // InternalMyXeniaParser.g:5815:6: lv_isTrue_2_0= True
                    {
                    lv_isTrue_2_0=(Token)match(input,True,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXBooleanLiteralRule());
                      						}
                      						setWithLastConsumed(current, "isTrue", lv_isTrue_2_0 != null, "true");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBooleanLiteral"


    // $ANTLR start "entryRuleXNullLiteral"
    // InternalMyXeniaParser.g:5832:1: entryRuleXNullLiteral returns [EObject current=null] : iv_ruleXNullLiteral= ruleXNullLiteral EOF ;
    public final EObject entryRuleXNullLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNullLiteral = null;


        try {
            // InternalMyXeniaParser.g:5832:53: (iv_ruleXNullLiteral= ruleXNullLiteral EOF )
            // InternalMyXeniaParser.g:5833:2: iv_ruleXNullLiteral= ruleXNullLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNullLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNullLiteral=ruleXNullLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNullLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNullLiteral"


    // $ANTLR start "ruleXNullLiteral"
    // InternalMyXeniaParser.g:5839:1: ruleXNullLiteral returns [EObject current=null] : ( () otherlv_1= Null ) ;
    public final EObject ruleXNullLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalMyXeniaParser.g:5845:2: ( ( () otherlv_1= Null ) )
            // InternalMyXeniaParser.g:5846:2: ( () otherlv_1= Null )
            {
            // InternalMyXeniaParser.g:5846:2: ( () otherlv_1= Null )
            // InternalMyXeniaParser.g:5847:3: () otherlv_1= Null
            {
            // InternalMyXeniaParser.g:5847:3: ()
            // InternalMyXeniaParser.g:5848:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Null,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNullLiteral"


    // $ANTLR start "entryRuleXNumberLiteral"
    // InternalMyXeniaParser.g:5862:1: entryRuleXNumberLiteral returns [EObject current=null] : iv_ruleXNumberLiteral= ruleXNumberLiteral EOF ;
    public final EObject entryRuleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNumberLiteral = null;


        try {
            // InternalMyXeniaParser.g:5862:55: (iv_ruleXNumberLiteral= ruleXNumberLiteral EOF )
            // InternalMyXeniaParser.g:5863:2: iv_ruleXNumberLiteral= ruleXNumberLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNumberLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNumberLiteral=ruleXNumberLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNumberLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNumberLiteral"


    // $ANTLR start "ruleXNumberLiteral"
    // InternalMyXeniaParser.g:5869:1: ruleXNumberLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= ruleNumber ) ) ) ;
    public final EObject ruleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:5875:2: ( ( () ( (lv_value_1_0= ruleNumber ) ) ) )
            // InternalMyXeniaParser.g:5876:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            {
            // InternalMyXeniaParser.g:5876:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            // InternalMyXeniaParser.g:5877:3: () ( (lv_value_1_0= ruleNumber ) )
            {
            // InternalMyXeniaParser.g:5877:3: ()
            // InternalMyXeniaParser.g:5878:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalMyXeniaParser.g:5884:3: ( (lv_value_1_0= ruleNumber ) )
            // InternalMyXeniaParser.g:5885:4: (lv_value_1_0= ruleNumber )
            {
            // InternalMyXeniaParser.g:5885:4: (lv_value_1_0= ruleNumber )
            // InternalMyXeniaParser.g:5886:5: lv_value_1_0= ruleNumber
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_1_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.xtext.xbase.Xbase.Number");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNumberLiteral"


    // $ANTLR start "entryRuleXStringLiteral"
    // InternalMyXeniaParser.g:5907:1: entryRuleXStringLiteral returns [EObject current=null] : iv_ruleXStringLiteral= ruleXStringLiteral EOF ;
    public final EObject entryRuleXStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXStringLiteral = null;


        try {
            // InternalMyXeniaParser.g:5907:55: (iv_ruleXStringLiteral= ruleXStringLiteral EOF )
            // InternalMyXeniaParser.g:5908:2: iv_ruleXStringLiteral= ruleXStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXStringLiteral=ruleXStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXStringLiteral"


    // $ANTLR start "ruleXStringLiteral"
    // InternalMyXeniaParser.g:5914:1: ruleXStringLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleXStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;


        	enterRule();

        try {
            // InternalMyXeniaParser.g:5920:2: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) )
            // InternalMyXeniaParser.g:5921:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            {
            // InternalMyXeniaParser.g:5921:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            // InternalMyXeniaParser.g:5922:3: () ( (lv_value_1_0= RULE_STRING ) )
            {
            // InternalMyXeniaParser.g:5922:3: ()
            // InternalMyXeniaParser.g:5923:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalMyXeniaParser.g:5929:3: ( (lv_value_1_0= RULE_STRING ) )
            // InternalMyXeniaParser.g:5930:4: (lv_value_1_0= RULE_STRING )
            {
            // InternalMyXeniaParser.g:5930:4: (lv_value_1_0= RULE_STRING )
            // InternalMyXeniaParser.g:5931:5: lv_value_1_0= RULE_STRING
            {
            lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXStringLiteralRule());
              					}
              					setWithLastConsumed(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXStringLiteral"


    // $ANTLR start "entryRuleXTypeLiteral"
    // InternalMyXeniaParser.g:5951:1: entryRuleXTypeLiteral returns [EObject current=null] : iv_ruleXTypeLiteral= ruleXTypeLiteral EOF ;
    public final EObject entryRuleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTypeLiteral = null;


        try {
            // InternalMyXeniaParser.g:5951:53: (iv_ruleXTypeLiteral= ruleXTypeLiteral EOF )
            // InternalMyXeniaParser.g:5952:2: iv_ruleXTypeLiteral= ruleXTypeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTypeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTypeLiteral=ruleXTypeLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTypeLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTypeLiteral"


    // $ANTLR start "ruleXTypeLiteral"
    // InternalMyXeniaParser.g:5958:1: ruleXTypeLiteral returns [EObject current=null] : ( () otherlv_1= Typeof otherlv_2= LeftParenthesis ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= RightParenthesis ) ;
    public final EObject ruleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_arrayDimensions_4_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:5964:2: ( ( () otherlv_1= Typeof otherlv_2= LeftParenthesis ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= RightParenthesis ) )
            // InternalMyXeniaParser.g:5965:2: ( () otherlv_1= Typeof otherlv_2= LeftParenthesis ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= RightParenthesis )
            {
            // InternalMyXeniaParser.g:5965:2: ( () otherlv_1= Typeof otherlv_2= LeftParenthesis ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= RightParenthesis )
            // InternalMyXeniaParser.g:5966:3: () otherlv_1= Typeof otherlv_2= LeftParenthesis ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= RightParenthesis
            {
            // InternalMyXeniaParser.g:5966:3: ()
            // InternalMyXeniaParser.g:5967:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Typeof,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_78); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalMyXeniaParser.g:5981:3: ( ( ruleQualifiedName ) )
            // InternalMyXeniaParser.g:5982:4: ( ruleQualifiedName )
            {
            // InternalMyXeniaParser.g:5982:4: ( ruleQualifiedName )
            // InternalMyXeniaParser.g:5983:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXTypeLiteralRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0());
              				
            }
            pushFollow(FOLLOW_83);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyXeniaParser.g:5997:3: ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )*
            loop112:
            do {
                int alt112=2;
                int LA112_0 = input.LA(1);

                if ( (LA112_0==LeftSquareBracket) ) {
                    alt112=1;
                }


                switch (alt112) {
            	case 1 :
            	    // InternalMyXeniaParser.g:5998:4: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    {
            	    // InternalMyXeniaParser.g:5998:4: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    // InternalMyXeniaParser.g:5999:5: lv_arrayDimensions_4_0= ruleArrayBrackets
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_83);
            	    lv_arrayDimensions_4_0=ruleArrayBrackets();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXTypeLiteralRule());
            	      					}
            	      					add(
            	      						current,
            	      						"arrayDimensions",
            	      						lv_arrayDimensions_4_0,
            	      						"org.eclipse.xtext.xbase.Xtype.ArrayBrackets");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop112;
                }
            } while (true);

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTypeLiteral"


    // $ANTLR start "entryRuleXThrowExpression"
    // InternalMyXeniaParser.g:6024:1: entryRuleXThrowExpression returns [EObject current=null] : iv_ruleXThrowExpression= ruleXThrowExpression EOF ;
    public final EObject entryRuleXThrowExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXThrowExpression = null;


        try {
            // InternalMyXeniaParser.g:6024:57: (iv_ruleXThrowExpression= ruleXThrowExpression EOF )
            // InternalMyXeniaParser.g:6025:2: iv_ruleXThrowExpression= ruleXThrowExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXThrowExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXThrowExpression=ruleXThrowExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXThrowExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXThrowExpression"


    // $ANTLR start "ruleXThrowExpression"
    // InternalMyXeniaParser.g:6031:1: ruleXThrowExpression returns [EObject current=null] : ( () otherlv_1= Throw ( (lv_expression_2_0= ruleXExpression ) ) ) ;
    public final EObject ruleXThrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:6037:2: ( ( () otherlv_1= Throw ( (lv_expression_2_0= ruleXExpression ) ) ) )
            // InternalMyXeniaParser.g:6038:2: ( () otherlv_1= Throw ( (lv_expression_2_0= ruleXExpression ) ) )
            {
            // InternalMyXeniaParser.g:6038:2: ( () otherlv_1= Throw ( (lv_expression_2_0= ruleXExpression ) ) )
            // InternalMyXeniaParser.g:6039:3: () otherlv_1= Throw ( (lv_expression_2_0= ruleXExpression ) )
            {
            // InternalMyXeniaParser.g:6039:3: ()
            // InternalMyXeniaParser.g:6040:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Throw,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
              		
            }
            // InternalMyXeniaParser.g:6050:3: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalMyXeniaParser.g:6051:4: (lv_expression_2_0= ruleXExpression )
            {
            // InternalMyXeniaParser.g:6051:4: (lv_expression_2_0= ruleXExpression )
            // InternalMyXeniaParser.g:6052:5: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXThrowExpression"


    // $ANTLR start "entryRuleXReturnExpression"
    // InternalMyXeniaParser.g:6073:1: entryRuleXReturnExpression returns [EObject current=null] : iv_ruleXReturnExpression= ruleXReturnExpression EOF ;
    public final EObject entryRuleXReturnExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXReturnExpression = null;


        try {
            // InternalMyXeniaParser.g:6073:58: (iv_ruleXReturnExpression= ruleXReturnExpression EOF )
            // InternalMyXeniaParser.g:6074:2: iv_ruleXReturnExpression= ruleXReturnExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXReturnExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXReturnExpression=ruleXReturnExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXReturnExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXReturnExpression"


    // $ANTLR start "ruleXReturnExpression"
    // InternalMyXeniaParser.g:6080:1: ruleXReturnExpression returns [EObject current=null] : ( () otherlv_1= Return ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) ;
    public final EObject ruleXReturnExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:6086:2: ( ( () otherlv_1= Return ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) )
            // InternalMyXeniaParser.g:6087:2: ( () otherlv_1= Return ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            {
            // InternalMyXeniaParser.g:6087:2: ( () otherlv_1= Return ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            // InternalMyXeniaParser.g:6088:3: () otherlv_1= Return ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            {
            // InternalMyXeniaParser.g:6088:3: ()
            // InternalMyXeniaParser.g:6089:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Return,FOLLOW_65); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
              		
            }
            // InternalMyXeniaParser.g:6099:3: ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            int alt113=2;
            alt113 = dfa113.predict(input);
            switch (alt113) {
                case 1 :
                    // InternalMyXeniaParser.g:6100:4: ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression )
                    {
                    // InternalMyXeniaParser.g:6101:4: (lv_expression_2_0= ruleXExpression )
                    // InternalMyXeniaParser.g:6102:5: lv_expression_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_2_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXReturnExpression"


    // $ANTLR start "entryRuleXTryCatchFinallyExpression"
    // InternalMyXeniaParser.g:6123:1: entryRuleXTryCatchFinallyExpression returns [EObject current=null] : iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF ;
    public final EObject entryRuleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTryCatchFinallyExpression = null;


        try {
            // InternalMyXeniaParser.g:6123:67: (iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF )
            // InternalMyXeniaParser.g:6124:2: iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTryCatchFinallyExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTryCatchFinallyExpression"


    // $ANTLR start "ruleXTryCatchFinallyExpression"
    // InternalMyXeniaParser.g:6130:1: ruleXTryCatchFinallyExpression returns [EObject current=null] : ( () otherlv_1= Try ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) ;
    public final EObject ruleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_expression_2_0 = null;

        EObject lv_catchClauses_3_0 = null;

        EObject lv_finallyExpression_5_0 = null;

        EObject lv_finallyExpression_7_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:6136:2: ( ( () otherlv_1= Try ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) )
            // InternalMyXeniaParser.g:6137:2: ( () otherlv_1= Try ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            {
            // InternalMyXeniaParser.g:6137:2: ( () otherlv_1= Try ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            // InternalMyXeniaParser.g:6138:3: () otherlv_1= Try ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            {
            // InternalMyXeniaParser.g:6138:3: ()
            // InternalMyXeniaParser.g:6139:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Try,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
              		
            }
            // InternalMyXeniaParser.g:6149:3: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalMyXeniaParser.g:6150:4: (lv_expression_2_0= ruleXExpression )
            {
            // InternalMyXeniaParser.g:6150:4: (lv_expression_2_0= ruleXExpression )
            // InternalMyXeniaParser.g:6151:5: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_84);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyXeniaParser.g:6168:3: ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==Catch) ) {
                alt116=1;
            }
            else if ( (LA116_0==Finally) ) {
                alt116=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 116, 0, input);

                throw nvae;
            }
            switch (alt116) {
                case 1 :
                    // InternalMyXeniaParser.g:6169:4: ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    {
                    // InternalMyXeniaParser.g:6169:4: ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    // InternalMyXeniaParser.g:6170:5: ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    {
                    // InternalMyXeniaParser.g:6170:5: ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+
                    int cnt114=0;
                    loop114:
                    do {
                        int alt114=2;
                        int LA114_0 = input.LA(1);

                        if ( (LA114_0==Catch) ) {
                            int LA114_2 = input.LA(2);

                            if ( (synpred38_InternalMyXeniaParser()) ) {
                                alt114=1;
                            }


                        }


                        switch (alt114) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:6171:6: ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause )
                    	    {
                    	    // InternalMyXeniaParser.g:6172:6: (lv_catchClauses_3_0= ruleXCatchClause )
                    	    // InternalMyXeniaParser.g:6173:7: lv_catchClauses_3_0= ruleXCatchClause
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_85);
                    	    lv_catchClauses_3_0=ruleXCatchClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"catchClauses",
                    	      								lv_catchClauses_3_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XCatchClause");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt114 >= 1 ) break loop114;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(114, input);
                                throw eee;
                        }
                        cnt114++;
                    } while (true);

                    // InternalMyXeniaParser.g:6190:5: ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    int alt115=2;
                    int LA115_0 = input.LA(1);

                    if ( (LA115_0==Finally) ) {
                        int LA115_1 = input.LA(2);

                        if ( (synpred39_InternalMyXeniaParser()) ) {
                            alt115=1;
                        }
                    }
                    switch (alt115) {
                        case 1 :
                            // InternalMyXeniaParser.g:6191:6: ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            {
                            // InternalMyXeniaParser.g:6191:6: ( ( Finally )=>otherlv_4= Finally )
                            // InternalMyXeniaParser.g:6192:7: ( Finally )=>otherlv_4= Finally
                            {
                            otherlv_4=(Token)match(input,Finally,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
                              						
                            }

                            }

                            // InternalMyXeniaParser.g:6198:6: ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            // InternalMyXeniaParser.g:6199:7: (lv_finallyExpression_5_0= ruleXExpression )
                            {
                            // InternalMyXeniaParser.g:6199:7: (lv_finallyExpression_5_0= ruleXExpression )
                            // InternalMyXeniaParser.g:6200:8: lv_finallyExpression_5_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_finallyExpression_5_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                              								}
                              								set(
                              									current,
                              									"finallyExpression",
                              									lv_finallyExpression_5_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:6220:4: (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    {
                    // InternalMyXeniaParser.g:6220:4: (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    // InternalMyXeniaParser.g:6221:5: otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,Finally,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
                      				
                    }
                    // InternalMyXeniaParser.g:6225:5: ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    // InternalMyXeniaParser.g:6226:6: (lv_finallyExpression_7_0= ruleXExpression )
                    {
                    // InternalMyXeniaParser.g:6226:6: (lv_finallyExpression_7_0= ruleXExpression )
                    // InternalMyXeniaParser.g:6227:7: lv_finallyExpression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_finallyExpression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                      							}
                      							set(
                      								current,
                      								"finallyExpression",
                      								lv_finallyExpression_7_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTryCatchFinallyExpression"


    // $ANTLR start "entryRuleXSynchronizedExpression"
    // InternalMyXeniaParser.g:6250:1: entryRuleXSynchronizedExpression returns [EObject current=null] : iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF ;
    public final EObject entryRuleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSynchronizedExpression = null;


        try {
            // InternalMyXeniaParser.g:6250:64: (iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF )
            // InternalMyXeniaParser.g:6251:2: iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSynchronizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSynchronizedExpression=ruleXSynchronizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSynchronizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSynchronizedExpression"


    // $ANTLR start "ruleXSynchronizedExpression"
    // InternalMyXeniaParser.g:6257:1: ruleXSynchronizedExpression returns [EObject current=null] : ( ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_param_3_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:6263:2: ( ( ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // InternalMyXeniaParser.g:6264:2: ( ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // InternalMyXeniaParser.g:6264:2: ( ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_expression_5_0= ruleXExpression ) ) )
            // InternalMyXeniaParser.g:6265:3: ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_expression_5_0= ruleXExpression ) )
            {
            // InternalMyXeniaParser.g:6265:3: ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) )
            // InternalMyXeniaParser.g:6266:4: ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis )
            {
            // InternalMyXeniaParser.g:6273:4: ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis )
            // InternalMyXeniaParser.g:6274:5: () otherlv_1= Synchronized otherlv_2= LeftParenthesis
            {
            // InternalMyXeniaParser.g:6274:5: ()
            // InternalMyXeniaParser.g:6275:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXSynchronizedExpressionAccess().getXSynchronizedExpressionAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,Synchronized,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1());
              				
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getXSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2());
              				
            }

            }


            }

            // InternalMyXeniaParser.g:6291:3: ( (lv_param_3_0= ruleXExpression ) )
            // InternalMyXeniaParser.g:6292:4: (lv_param_3_0= ruleXExpression )
            {
            // InternalMyXeniaParser.g:6292:4: (lv_param_3_0= ruleXExpression )
            // InternalMyXeniaParser.g:6293:5: lv_param_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getParamXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_53);
            lv_param_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              					}
              					set(
              						current,
              						"param",
              						lv_param_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXSynchronizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalMyXeniaParser.g:6314:3: ( (lv_expression_5_0= ruleXExpression ) )
            // InternalMyXeniaParser.g:6315:4: (lv_expression_5_0= ruleXExpression )
            {
            // InternalMyXeniaParser.g:6315:4: (lv_expression_5_0= ruleXExpression )
            // InternalMyXeniaParser.g:6316:5: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getExpressionXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSynchronizedExpression"


    // $ANTLR start "entryRuleXCatchClause"
    // InternalMyXeniaParser.g:6337:1: entryRuleXCatchClause returns [EObject current=null] : iv_ruleXCatchClause= ruleXCatchClause EOF ;
    public final EObject entryRuleXCatchClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCatchClause = null;


        try {
            // InternalMyXeniaParser.g:6337:53: (iv_ruleXCatchClause= ruleXCatchClause EOF )
            // InternalMyXeniaParser.g:6338:2: iv_ruleXCatchClause= ruleXCatchClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCatchClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCatchClause=ruleXCatchClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCatchClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCatchClause"


    // $ANTLR start "ruleXCatchClause"
    // InternalMyXeniaParser.g:6344:1: ruleXCatchClause returns [EObject current=null] : ( ( ( Catch )=>otherlv_0= Catch ) otherlv_1= LeftParenthesis ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= RightParenthesis ( (lv_expression_4_0= ruleXExpression ) ) ) ;
    public final EObject ruleXCatchClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_declaredParam_2_0 = null;

        EObject lv_expression_4_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:6350:2: ( ( ( ( Catch )=>otherlv_0= Catch ) otherlv_1= LeftParenthesis ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= RightParenthesis ( (lv_expression_4_0= ruleXExpression ) ) ) )
            // InternalMyXeniaParser.g:6351:2: ( ( ( Catch )=>otherlv_0= Catch ) otherlv_1= LeftParenthesis ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= RightParenthesis ( (lv_expression_4_0= ruleXExpression ) ) )
            {
            // InternalMyXeniaParser.g:6351:2: ( ( ( Catch )=>otherlv_0= Catch ) otherlv_1= LeftParenthesis ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= RightParenthesis ( (lv_expression_4_0= ruleXExpression ) ) )
            // InternalMyXeniaParser.g:6352:3: ( ( Catch )=>otherlv_0= Catch ) otherlv_1= LeftParenthesis ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= RightParenthesis ( (lv_expression_4_0= ruleXExpression ) )
            {
            // InternalMyXeniaParser.g:6352:3: ( ( Catch )=>otherlv_0= Catch )
            // InternalMyXeniaParser.g:6353:4: ( Catch )=>otherlv_0= Catch
            {
            otherlv_0=(Token)match(input,Catch,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
              			
            }

            }

            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalMyXeniaParser.g:6363:3: ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) )
            // InternalMyXeniaParser.g:6364:4: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            {
            // InternalMyXeniaParser.g:6364:4: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            // InternalMyXeniaParser.g:6365:5: lv_declaredParam_2_0= ruleFullJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_53);
            lv_declaredParam_2_0=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              					}
              					set(
              						current,
              						"declaredParam",
              						lv_declaredParam_2_0,
              						"org.eclipse.xtext.xbase.Xbase.FullJvmFormalParameter");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
              		
            }
            // InternalMyXeniaParser.g:6386:3: ( (lv_expression_4_0= ruleXExpression ) )
            // InternalMyXeniaParser.g:6387:4: (lv_expression_4_0= ruleXExpression )
            {
            // InternalMyXeniaParser.g:6387:4: (lv_expression_4_0= ruleXExpression )
            // InternalMyXeniaParser.g:6388:5: lv_expression_4_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_4_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_4_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCatchClause"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalMyXeniaParser.g:6409:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // InternalMyXeniaParser.g:6409:53: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // InternalMyXeniaParser.g:6410:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalMyXeniaParser.g:6416:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )* ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;

        AntlrDatatypeRuleToken this_ValidID_2 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:6422:2: ( (this_ValidID_0= ruleValidID ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )* ) )
            // InternalMyXeniaParser.g:6423:2: (this_ValidID_0= ruleValidID ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )* )
            {
            // InternalMyXeniaParser.g:6423:2: (this_ValidID_0= ruleValidID ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )* )
            // InternalMyXeniaParser.g:6424:3: this_ValidID_0= ruleValidID ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_86);
            this_ValidID_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ValidID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyXeniaParser.g:6434:3: ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )*
            loop117:
            do {
                int alt117=2;
                int LA117_0 = input.LA(1);

                if ( (LA117_0==FullStop) ) {
                    int LA117_2 = input.LA(2);

                    if ( (LA117_2==RULE_ID) ) {
                        int LA117_3 = input.LA(3);

                        if ( (synpred42_InternalMyXeniaParser()) ) {
                            alt117=1;
                        }


                    }


                }


                switch (alt117) {
            	case 1 :
            	    // InternalMyXeniaParser.g:6435:4: ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID
            	    {
            	    // InternalMyXeniaParser.g:6435:4: ( ( FullStop )=>kw= FullStop )
            	    // InternalMyXeniaParser.g:6436:5: ( FullStop )=>kw= FullStop
            	    {
            	    kw=(Token)match(input,FullStop,FOLLOW_78); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					current.merge(kw);
            	      					newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_86);
            	    this_ValidID_2=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ValidID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop117;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleNumber"
    // InternalMyXeniaParser.g:6458:1: entryRuleNumber returns [String current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final String entryRuleNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumber = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalMyXeniaParser.g:6460:2: (iv_ruleNumber= ruleNumber EOF )
            // InternalMyXeniaParser.g:6461:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalMyXeniaParser.g:6470:1: ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) ;
    public final AntlrDatatypeRuleToken ruleNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_HEX_0=null;
        Token this_INT_1=null;
        Token this_DECIMAL_2=null;
        Token kw=null;
        Token this_INT_4=null;
        Token this_DECIMAL_5=null;


        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalMyXeniaParser.g:6477:2: ( (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) )
            // InternalMyXeniaParser.g:6478:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            {
            // InternalMyXeniaParser.g:6478:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==RULE_HEX) ) {
                alt121=1;
            }
            else if ( ((LA121_0>=RULE_INT && LA121_0<=RULE_DECIMAL)) ) {
                alt121=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 121, 0, input);

                throw nvae;
            }
            switch (alt121) {
                case 1 :
                    // InternalMyXeniaParser.g:6479:3: this_HEX_0= RULE_HEX
                    {
                    this_HEX_0=(Token)match(input,RULE_HEX,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_HEX_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:6487:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    {
                    // InternalMyXeniaParser.g:6487:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    // InternalMyXeniaParser.g:6488:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    {
                    // InternalMyXeniaParser.g:6488:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL )
                    int alt118=2;
                    int LA118_0 = input.LA(1);

                    if ( (LA118_0==RULE_INT) ) {
                        alt118=1;
                    }
                    else if ( (LA118_0==RULE_DECIMAL) ) {
                        alt118=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 118, 0, input);

                        throw nvae;
                    }
                    switch (alt118) {
                        case 1 :
                            // InternalMyXeniaParser.g:6489:5: this_INT_1= RULE_INT
                            {
                            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_86); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_1);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalMyXeniaParser.g:6497:5: this_DECIMAL_2= RULE_DECIMAL
                            {
                            this_DECIMAL_2=(Token)match(input,RULE_DECIMAL,FOLLOW_86); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DECIMAL_2);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalMyXeniaParser.g:6505:4: (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    int alt120=2;
                    int LA120_0 = input.LA(1);

                    if ( (LA120_0==FullStop) ) {
                        int LA120_1 = input.LA(2);

                        if ( ((LA120_1>=RULE_INT && LA120_1<=RULE_DECIMAL)) ) {
                            alt120=1;
                        }
                    }
                    switch (alt120) {
                        case 1 :
                            // InternalMyXeniaParser.g:6506:5: kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            {
                            kw=(Token)match(input,FullStop,FOLLOW_87); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0());
                              				
                            }
                            // InternalMyXeniaParser.g:6511:5: (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            int alt119=2;
                            int LA119_0 = input.LA(1);

                            if ( (LA119_0==RULE_INT) ) {
                                alt119=1;
                            }
                            else if ( (LA119_0==RULE_DECIMAL) ) {
                                alt119=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 119, 0, input);

                                throw nvae;
                            }
                            switch (alt119) {
                                case 1 :
                                    // InternalMyXeniaParser.g:6512:6: this_INT_4= RULE_INT
                                    {
                                    this_INT_4=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_INT_4);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0());
                                      					
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalMyXeniaParser.g:6520:6: this_DECIMAL_5= RULE_DECIMAL
                                    {
                                    this_DECIMAL_5=(Token)match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_DECIMAL_5);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1());
                                      					
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleJvmTypeReference"
    // InternalMyXeniaParser.g:6537:1: entryRuleJvmTypeReference returns [EObject current=null] : iv_ruleJvmTypeReference= ruleJvmTypeReference EOF ;
    public final EObject entryRuleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmTypeReference = null;


        try {
            // InternalMyXeniaParser.g:6537:57: (iv_ruleJvmTypeReference= ruleJvmTypeReference EOF )
            // InternalMyXeniaParser.g:6538:2: iv_ruleJvmTypeReference= ruleJvmTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmTypeReference=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmTypeReference"


    // $ANTLR start "ruleJvmTypeReference"
    // InternalMyXeniaParser.g:6544:1: ruleJvmTypeReference returns [EObject current=null] : ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) ;
    public final EObject ruleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmParameterizedTypeReference_0 = null;

        EObject this_XFunctionTypeRef_3 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:6550:2: ( ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) )
            // InternalMyXeniaParser.g:6551:2: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            {
            // InternalMyXeniaParser.g:6551:2: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==RULE_ID) ) {
                alt123=1;
            }
            else if ( (LA123_0==EqualsSignGreaterThanSign||LA123_0==LeftParenthesis) ) {
                alt123=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 123, 0, input);

                throw nvae;
            }
            switch (alt123) {
                case 1 :
                    // InternalMyXeniaParser.g:6552:3: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    {
                    // InternalMyXeniaParser.g:6552:3: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    // InternalMyXeniaParser.g:6553:4: this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_81);
                    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_JvmParameterizedTypeReference_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalMyXeniaParser.g:6561:4: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    loop122:
                    do {
                        int alt122=2;
                        int LA122_0 = input.LA(1);

                        if ( (LA122_0==LeftSquareBracket) ) {
                            int LA122_2 = input.LA(2);

                            if ( (LA122_2==RightSquareBracket) ) {
                                int LA122_3 = input.LA(3);

                                if ( (synpred43_InternalMyXeniaParser()) ) {
                                    alt122=1;
                                }


                            }


                        }


                        switch (alt122) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:6562:5: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
                    	    {
                    	    // InternalMyXeniaParser.g:6568:5: ( () ruleArrayBrackets )
                    	    // InternalMyXeniaParser.g:6569:6: () ruleArrayBrackets
                    	    {
                    	    // InternalMyXeniaParser.g:6569:6: ()
                    	    // InternalMyXeniaParser.g:6570:7: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							current = forceCreateModelElementAndSet(
                    	      								grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
                    	      								current);
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_81);
                    	    ruleArrayBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop122;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:6587:3: this_XFunctionTypeRef_3= ruleXFunctionTypeRef
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XFunctionTypeRef_3=ruleXFunctionTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XFunctionTypeRef_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmTypeReference"


    // $ANTLR start "entryRuleArrayBrackets"
    // InternalMyXeniaParser.g:6599:1: entryRuleArrayBrackets returns [String current=null] : iv_ruleArrayBrackets= ruleArrayBrackets EOF ;
    public final String entryRuleArrayBrackets() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleArrayBrackets = null;


        try {
            // InternalMyXeniaParser.g:6599:53: (iv_ruleArrayBrackets= ruleArrayBrackets EOF )
            // InternalMyXeniaParser.g:6600:2: iv_ruleArrayBrackets= ruleArrayBrackets EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayBracketsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayBrackets=ruleArrayBrackets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayBrackets.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayBrackets"


    // $ANTLR start "ruleArrayBrackets"
    // InternalMyXeniaParser.g:6606:1: ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= LeftSquareBracket kw= RightSquareBracket ) ;
    public final AntlrDatatypeRuleToken ruleArrayBrackets() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyXeniaParser.g:6612:2: ( (kw= LeftSquareBracket kw= RightSquareBracket ) )
            // InternalMyXeniaParser.g:6613:2: (kw= LeftSquareBracket kw= RightSquareBracket )
            {
            // InternalMyXeniaParser.g:6613:2: (kw= LeftSquareBracket kw= RightSquareBracket )
            // InternalMyXeniaParser.g:6614:3: kw= LeftSquareBracket kw= RightSquareBracket
            {
            kw=(Token)match(input,LeftSquareBracket,FOLLOW_63); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0());
              		
            }
            kw=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayBrackets"


    // $ANTLR start "entryRuleXFunctionTypeRef"
    // InternalMyXeniaParser.g:6628:1: entryRuleXFunctionTypeRef returns [EObject current=null] : iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF ;
    public final EObject entryRuleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFunctionTypeRef = null;


        try {
            // InternalMyXeniaParser.g:6628:57: (iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF )
            // InternalMyXeniaParser.g:6629:2: iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFunctionTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFunctionTypeRef"


    // $ANTLR start "ruleXFunctionTypeRef"
    // InternalMyXeniaParser.g:6635:1: ruleXFunctionTypeRef returns [EObject current=null] : ( (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )? otherlv_5= EqualsSignGreaterThanSign ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_paramTypes_1_0 = null;

        EObject lv_paramTypes_3_0 = null;

        EObject lv_returnType_6_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:6641:2: ( ( (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )? otherlv_5= EqualsSignGreaterThanSign ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) )
            // InternalMyXeniaParser.g:6642:2: ( (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )? otherlv_5= EqualsSignGreaterThanSign ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            {
            // InternalMyXeniaParser.g:6642:2: ( (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )? otherlv_5= EqualsSignGreaterThanSign ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            // InternalMyXeniaParser.g:6643:3: (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )? otherlv_5= EqualsSignGreaterThanSign ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            {
            // InternalMyXeniaParser.g:6643:3: (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==LeftParenthesis) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalMyXeniaParser.g:6644:4: otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    // InternalMyXeniaParser.g:6648:4: ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )?
                    int alt125=2;
                    int LA125_0 = input.LA(1);

                    if ( (LA125_0==EqualsSignGreaterThanSign||LA125_0==LeftParenthesis||LA125_0==RULE_ID) ) {
                        alt125=1;
                    }
                    switch (alt125) {
                        case 1 :
                            // InternalMyXeniaParser.g:6649:5: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            {
                            // InternalMyXeniaParser.g:6649:5: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) )
                            // InternalMyXeniaParser.g:6650:6: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            {
                            // InternalMyXeniaParser.g:6650:6: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            // InternalMyXeniaParser.g:6651:7: lv_paramTypes_1_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_24);
                            lv_paramTypes_1_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                              							}
                              							add(
                              								current,
                              								"paramTypes",
                              								lv_paramTypes_1_0,
                              								"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalMyXeniaParser.g:6668:5: (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            loop124:
                            do {
                                int alt124=2;
                                int LA124_0 = input.LA(1);

                                if ( (LA124_0==Comma) ) {
                                    alt124=1;
                                }


                                switch (alt124) {
                            	case 1 :
                            	    // InternalMyXeniaParser.g:6669:6: otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    {
                            	    otherlv_2=(Token)match(input,Comma,FOLLOW_37); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
                            	      					
                            	    }
                            	    // InternalMyXeniaParser.g:6673:6: ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    // InternalMyXeniaParser.g:6674:7: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    {
                            	    // InternalMyXeniaParser.g:6674:7: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    // InternalMyXeniaParser.g:6675:8: lv_paramTypes_3_0= ruleJvmTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_24);
                            	    lv_paramTypes_3_0=ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"paramTypes",
                            	      									lv_paramTypes_3_0,
                            	      									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop124;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }
                    break;

            }

            otherlv_5=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
              		
            }
            // InternalMyXeniaParser.g:6703:3: ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            // InternalMyXeniaParser.g:6704:4: (lv_returnType_6_0= ruleJvmTypeReference )
            {
            // InternalMyXeniaParser.g:6704:4: (lv_returnType_6_0= ruleJvmTypeReference )
            // InternalMyXeniaParser.g:6705:5: lv_returnType_6_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_returnType_6_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
              					}
              					set(
              						current,
              						"returnType",
              						lv_returnType_6_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFunctionTypeRef"


    // $ANTLR start "entryRuleJvmParameterizedTypeReference"
    // InternalMyXeniaParser.g:6726:1: entryRuleJvmParameterizedTypeReference returns [EObject current=null] : iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF ;
    public final EObject entryRuleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmParameterizedTypeReference = null;


        try {
            // InternalMyXeniaParser.g:6726:70: (iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF )
            // InternalMyXeniaParser.g:6727:2: iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmParameterizedTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmParameterizedTypeReference"


    // $ANTLR start "ruleJvmParameterizedTypeReference"
    // InternalMyXeniaParser.g:6733:1: ruleJvmParameterizedTypeReference returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )? ) ;
    public final EObject ruleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_arguments_2_0 = null;

        EObject lv_arguments_4_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:6739:2: ( ( ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )? ) )
            // InternalMyXeniaParser.g:6740:2: ( ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )? )
            {
            // InternalMyXeniaParser.g:6740:2: ( ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )? )
            // InternalMyXeniaParser.g:6741:3: ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )?
            {
            // InternalMyXeniaParser.g:6741:3: ( ( ruleQualifiedName ) )
            // InternalMyXeniaParser.g:6742:4: ( ruleQualifiedName )
            {
            // InternalMyXeniaParser.g:6742:4: ( ruleQualifiedName )
            // InternalMyXeniaParser.g:6743:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_90);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyXeniaParser.g:6757:3: ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )?
            int alt131=2;
            alt131 = dfa131.predict(input);
            switch (alt131) {
                case 1 :
                    // InternalMyXeniaParser.g:6758:4: ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )*
                    {
                    // InternalMyXeniaParser.g:6758:4: ( ( LessThanSign )=>otherlv_1= LessThanSign )
                    // InternalMyXeniaParser.g:6759:5: ( LessThanSign )=>otherlv_1= LessThanSign
                    {
                    otherlv_1=(Token)match(input,LessThanSign,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
                      				
                    }

                    }

                    // InternalMyXeniaParser.g:6765:4: ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalMyXeniaParser.g:6766:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalMyXeniaParser.g:6766:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalMyXeniaParser.g:6767:6: lv_arguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_50);
                    lv_arguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                      						}
                      						add(
                      							current,
                      							"arguments",
                      							lv_arguments_2_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:6784:4: (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop127:
                    do {
                        int alt127=2;
                        int LA127_0 = input.LA(1);

                        if ( (LA127_0==Comma) ) {
                            alt127=1;
                        }


                        switch (alt127) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:6785:5: otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_49); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalMyXeniaParser.g:6789:5: ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalMyXeniaParser.g:6790:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalMyXeniaParser.g:6790:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalMyXeniaParser.g:6791:7: lv_arguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_50);
                    	    lv_arguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"arguments",
                    	      								lv_arguments_4_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop127;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,GreaterThanSign,FOLLOW_86); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
                      			
                    }
                    // InternalMyXeniaParser.g:6813:4: ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )*
                    loop130:
                    do {
                        int alt130=2;
                        int LA130_0 = input.LA(1);

                        if ( (LA130_0==FullStop) ) {
                            int LA130_2 = input.LA(2);

                            if ( (LA130_2==RULE_ID) ) {
                                int LA130_3 = input.LA(3);

                                if ( (synpred45_InternalMyXeniaParser()) ) {
                                    alt130=1;
                                }


                            }


                        }


                        switch (alt130) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:6814:5: ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )?
                    	    {
                    	    // InternalMyXeniaParser.g:6814:5: ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) )
                    	    // InternalMyXeniaParser.g:6815:6: ( ( () FullStop ) )=> ( () otherlv_7= FullStop )
                    	    {
                    	    // InternalMyXeniaParser.g:6821:6: ( () otherlv_7= FullStop )
                    	    // InternalMyXeniaParser.g:6822:7: () otherlv_7= FullStop
                    	    {
                    	    // InternalMyXeniaParser.g:6822:7: ()
                    	    // InternalMyXeniaParser.g:6823:8: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								current = forceCreateModelElementAndSet(
                    	      									grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0(),
                    	      									current);
                    	      							
                    	    }

                    	    }

                    	    otherlv_7=(Token)match(input,FullStop,FOLLOW_78); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_7, grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1());
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalMyXeniaParser.g:6835:5: ( ( ruleValidID ) )
                    	    // InternalMyXeniaParser.g:6836:6: ( ruleValidID )
                    	    {
                    	    // InternalMyXeniaParser.g:6836:6: ( ruleValidID )
                    	    // InternalMyXeniaParser.g:6837:7: ruleValidID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_91);
                    	    ruleValidID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalMyXeniaParser.g:6851:5: ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )?
                    	    int alt129=2;
                    	    alt129 = dfa129.predict(input);
                    	    switch (alt129) {
                    	        case 1 :
                    	            // InternalMyXeniaParser.g:6852:6: ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign
                    	            {
                    	            // InternalMyXeniaParser.g:6852:6: ( ( LessThanSign )=>otherlv_9= LessThanSign )
                    	            // InternalMyXeniaParser.g:6853:7: ( LessThanSign )=>otherlv_9= LessThanSign
                    	            {
                    	            otherlv_9=(Token)match(input,LessThanSign,FOLLOW_49); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              							newLeafNode(otherlv_9, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0());
                    	              						
                    	            }

                    	            }

                    	            // InternalMyXeniaParser.g:6859:6: ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) )
                    	            // InternalMyXeniaParser.g:6860:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            {
                    	            // InternalMyXeniaParser.g:6860:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            // InternalMyXeniaParser.g:6861:8: lv_arguments_10_0= ruleJvmArgumentTypeReference
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_50);
                    	            lv_arguments_10_0=ruleJvmArgumentTypeReference();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"arguments",
                    	              									lv_arguments_10_0,
                    	              									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }


                    	            }

                    	            // InternalMyXeniaParser.g:6878:6: (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )*
                    	            loop128:
                    	            do {
                    	                int alt128=2;
                    	                int LA128_0 = input.LA(1);

                    	                if ( (LA128_0==Comma) ) {
                    	                    alt128=1;
                    	                }


                    	                switch (alt128) {
                    	            	case 1 :
                    	            	    // InternalMyXeniaParser.g:6879:7: otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    {
                    	            	    otherlv_11=(Token)match(input,Comma,FOLLOW_49); if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      							newLeafNode(otherlv_11, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0());
                    	            	      						
                    	            	    }
                    	            	    // InternalMyXeniaParser.g:6883:7: ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    // InternalMyXeniaParser.g:6884:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    {
                    	            	    // InternalMyXeniaParser.g:6884:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    // InternalMyXeniaParser.g:6885:9: lv_arguments_12_0= ruleJvmArgumentTypeReference
                    	            	    {
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0());
                    	            	      								
                    	            	    }
                    	            	    pushFollow(FOLLOW_50);
                    	            	    lv_arguments_12_0=ruleJvmArgumentTypeReference();

                    	            	    state._fsp--;
                    	            	    if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									if (current==null) {
                    	            	      										current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	            	      									}
                    	            	      									add(
                    	            	      										current,
                    	            	      										"arguments",
                    	            	      										lv_arguments_12_0,
                    	            	      										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	            	      									afterParserOrEnumRuleCall();
                    	            	      								
                    	            	    }

                    	            	    }


                    	            	    }


                    	            	    }
                    	            	    break;

                    	            	default :
                    	            	    break loop128;
                    	                }
                    	            } while (true);

                    	            otherlv_13=(Token)match(input,GreaterThanSign,FOLLOW_86); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_13, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop130;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmParameterizedTypeReference"


    // $ANTLR start "entryRuleJvmArgumentTypeReference"
    // InternalMyXeniaParser.g:6914:1: entryRuleJvmArgumentTypeReference returns [EObject current=null] : iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF ;
    public final EObject entryRuleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmArgumentTypeReference = null;


        try {
            // InternalMyXeniaParser.g:6914:65: (iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF )
            // InternalMyXeniaParser.g:6915:2: iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmArgumentTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmArgumentTypeReference"


    // $ANTLR start "ruleJvmArgumentTypeReference"
    // InternalMyXeniaParser.g:6921:1: ruleJvmArgumentTypeReference returns [EObject current=null] : (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) ;
    public final EObject ruleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmTypeReference_0 = null;

        EObject this_JvmWildcardTypeReference_1 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:6927:2: ( (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) )
            // InternalMyXeniaParser.g:6928:2: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            {
            // InternalMyXeniaParser.g:6928:2: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==EqualsSignGreaterThanSign||LA132_0==LeftParenthesis||LA132_0==RULE_ID) ) {
                alt132=1;
            }
            else if ( (LA132_0==QuestionMark) ) {
                alt132=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 132, 0, input);

                throw nvae;
            }
            switch (alt132) {
                case 1 :
                    // InternalMyXeniaParser.g:6929:3: this_JvmTypeReference_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmTypeReference_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmTypeReference_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:6938:3: this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmWildcardTypeReference_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmArgumentTypeReference"


    // $ANTLR start "entryRuleJvmWildcardTypeReference"
    // InternalMyXeniaParser.g:6950:1: entryRuleJvmWildcardTypeReference returns [EObject current=null] : iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF ;
    public final EObject entryRuleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmWildcardTypeReference = null;


        try {
            // InternalMyXeniaParser.g:6950:65: (iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF )
            // InternalMyXeniaParser.g:6951:2: iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmWildcardTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmWildcardTypeReference"


    // $ANTLR start "ruleJvmWildcardTypeReference"
    // InternalMyXeniaParser.g:6957:1: ruleJvmWildcardTypeReference returns [EObject current=null] : ( () otherlv_1= QuestionMark ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) ;
    public final EObject ruleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_constraints_2_0 = null;

        EObject lv_constraints_3_0 = null;

        EObject lv_constraints_4_0 = null;

        EObject lv_constraints_5_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:6963:2: ( ( () otherlv_1= QuestionMark ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) )
            // InternalMyXeniaParser.g:6964:2: ( () otherlv_1= QuestionMark ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            {
            // InternalMyXeniaParser.g:6964:2: ( () otherlv_1= QuestionMark ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            // InternalMyXeniaParser.g:6965:3: () otherlv_1= QuestionMark ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            {
            // InternalMyXeniaParser.g:6965:3: ()
            // InternalMyXeniaParser.g:6966:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,QuestionMark,FOLLOW_92); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
              		
            }
            // InternalMyXeniaParser.g:6976:3: ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            int alt135=3;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==Extends) ) {
                alt135=1;
            }
            else if ( (LA135_0==Super) ) {
                alt135=2;
            }
            switch (alt135) {
                case 1 :
                    // InternalMyXeniaParser.g:6977:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    {
                    // InternalMyXeniaParser.g:6977:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    // InternalMyXeniaParser.g:6978:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    {
                    // InternalMyXeniaParser.g:6978:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) )
                    // InternalMyXeniaParser.g:6979:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    {
                    // InternalMyXeniaParser.g:6979:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    // InternalMyXeniaParser.g:6980:7: lv_constraints_2_0= ruleJvmUpperBound
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_93);
                    lv_constraints_2_0=ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      							}
                      							add(
                      								current,
                      								"constraints",
                      								lv_constraints_2_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmUpperBound");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:6997:5: ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    loop133:
                    do {
                        int alt133=2;
                        int LA133_0 = input.LA(1);

                        if ( (LA133_0==Ampersand) ) {
                            alt133=1;
                        }


                        switch (alt133) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:6998:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    {
                    	    // InternalMyXeniaParser.g:6998:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    // InternalMyXeniaParser.g:6999:7: lv_constraints_3_0= ruleJvmUpperBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_93);
                    	    lv_constraints_3_0=ruleJvmUpperBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_3_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmUpperBoundAnded");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop133;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:7018:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    {
                    // InternalMyXeniaParser.g:7018:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    // InternalMyXeniaParser.g:7019:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    {
                    // InternalMyXeniaParser.g:7019:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) )
                    // InternalMyXeniaParser.g:7020:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    {
                    // InternalMyXeniaParser.g:7020:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    // InternalMyXeniaParser.g:7021:7: lv_constraints_4_0= ruleJvmLowerBound
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_93);
                    lv_constraints_4_0=ruleJvmLowerBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      							}
                      							add(
                      								current,
                      								"constraints",
                      								lv_constraints_4_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmLowerBound");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:7038:5: ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    loop134:
                    do {
                        int alt134=2;
                        int LA134_0 = input.LA(1);

                        if ( (LA134_0==Ampersand) ) {
                            alt134=1;
                        }


                        switch (alt134) {
                    	case 1 :
                    	    // InternalMyXeniaParser.g:7039:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    {
                    	    // InternalMyXeniaParser.g:7039:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    // InternalMyXeniaParser.g:7040:7: lv_constraints_5_0= ruleJvmLowerBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_93);
                    	    lv_constraints_5_0=ruleJvmLowerBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_5_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmLowerBoundAnded");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop134;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmWildcardTypeReference"


    // $ANTLR start "entryRuleJvmUpperBound"
    // InternalMyXeniaParser.g:7063:1: entryRuleJvmUpperBound returns [EObject current=null] : iv_ruleJvmUpperBound= ruleJvmUpperBound EOF ;
    public final EObject entryRuleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBound = null;


        try {
            // InternalMyXeniaParser.g:7063:54: (iv_ruleJvmUpperBound= ruleJvmUpperBound EOF )
            // InternalMyXeniaParser.g:7064:2: iv_ruleJvmUpperBound= ruleJvmUpperBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBound=ruleJvmUpperBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBound"


    // $ANTLR start "ruleJvmUpperBound"
    // InternalMyXeniaParser.g:7070:1: ruleJvmUpperBound returns [EObject current=null] : (otherlv_0= Extends ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:7076:2: ( (otherlv_0= Extends ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalMyXeniaParser.g:7077:2: (otherlv_0= Extends ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalMyXeniaParser.g:7077:2: (otherlv_0= Extends ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalMyXeniaParser.g:7078:3: otherlv_0= Extends ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,Extends,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
              		
            }
            // InternalMyXeniaParser.g:7082:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalMyXeniaParser.g:7083:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalMyXeniaParser.g:7083:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalMyXeniaParser.g:7084:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBound"


    // $ANTLR start "entryRuleJvmUpperBoundAnded"
    // InternalMyXeniaParser.g:7105:1: entryRuleJvmUpperBoundAnded returns [EObject current=null] : iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF ;
    public final EObject entryRuleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBoundAnded = null;


        try {
            // InternalMyXeniaParser.g:7105:59: (iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF )
            // InternalMyXeniaParser.g:7106:2: iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBoundAnded"


    // $ANTLR start "ruleJvmUpperBoundAnded"
    // InternalMyXeniaParser.g:7112:1: ruleJvmUpperBoundAnded returns [EObject current=null] : (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:7118:2: ( (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalMyXeniaParser.g:7119:2: (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalMyXeniaParser.g:7119:2: (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalMyXeniaParser.g:7120:3: otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,Ampersand,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
              		
            }
            // InternalMyXeniaParser.g:7124:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalMyXeniaParser.g:7125:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalMyXeniaParser.g:7125:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalMyXeniaParser.g:7126:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBoundAnded"


    // $ANTLR start "entryRuleJvmLowerBound"
    // InternalMyXeniaParser.g:7147:1: entryRuleJvmLowerBound returns [EObject current=null] : iv_ruleJvmLowerBound= ruleJvmLowerBound EOF ;
    public final EObject entryRuleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBound = null;


        try {
            // InternalMyXeniaParser.g:7147:54: (iv_ruleJvmLowerBound= ruleJvmLowerBound EOF )
            // InternalMyXeniaParser.g:7148:2: iv_ruleJvmLowerBound= ruleJvmLowerBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBound=ruleJvmLowerBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBound"


    // $ANTLR start "ruleJvmLowerBound"
    // InternalMyXeniaParser.g:7154:1: ruleJvmLowerBound returns [EObject current=null] : (otherlv_0= Super ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:7160:2: ( (otherlv_0= Super ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalMyXeniaParser.g:7161:2: (otherlv_0= Super ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalMyXeniaParser.g:7161:2: (otherlv_0= Super ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalMyXeniaParser.g:7162:3: otherlv_0= Super ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,Super,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
              		
            }
            // InternalMyXeniaParser.g:7166:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalMyXeniaParser.g:7167:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalMyXeniaParser.g:7167:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalMyXeniaParser.g:7168:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBound"


    // $ANTLR start "entryRuleJvmLowerBoundAnded"
    // InternalMyXeniaParser.g:7189:1: entryRuleJvmLowerBoundAnded returns [EObject current=null] : iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF ;
    public final EObject entryRuleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBoundAnded = null;


        try {
            // InternalMyXeniaParser.g:7189:59: (iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF )
            // InternalMyXeniaParser.g:7190:2: iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBoundAnded=ruleJvmLowerBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBoundAnded"


    // $ANTLR start "ruleJvmLowerBoundAnded"
    // InternalMyXeniaParser.g:7196:1: ruleJvmLowerBoundAnded returns [EObject current=null] : (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:7202:2: ( (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalMyXeniaParser.g:7203:2: (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalMyXeniaParser.g:7203:2: (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalMyXeniaParser.g:7204:3: otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,Ampersand,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0());
              		
            }
            // InternalMyXeniaParser.g:7208:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalMyXeniaParser.g:7209:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalMyXeniaParser.g:7209:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalMyXeniaParser.g:7210:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmLowerBoundAndedRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBoundAnded"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // InternalMyXeniaParser.g:7231:1: entryRuleQualifiedNameWithWildcard returns [String current=null] : iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF ;
    public final String entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameWithWildcard = null;


        try {
            // InternalMyXeniaParser.g:7231:65: (iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF )
            // InternalMyXeniaParser.g:7232:2: iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameWithWildcard.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // InternalMyXeniaParser.g:7238:1: ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QualifiedName_0= ruleQualifiedName kw= FullStop kw= Asterisk ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameWithWildcard() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:7244:2: ( (this_QualifiedName_0= ruleQualifiedName kw= FullStop kw= Asterisk ) )
            // InternalMyXeniaParser.g:7245:2: (this_QualifiedName_0= ruleQualifiedName kw= FullStop kw= Asterisk )
            {
            // InternalMyXeniaParser.g:7245:2: (this_QualifiedName_0= ruleQualifiedName kw= FullStop kw= Asterisk )
            // InternalMyXeniaParser.g:7246:3: this_QualifiedName_0= ruleQualifiedName kw= FullStop kw= Asterisk
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_94);
            this_QualifiedName_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_QualifiedName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,FullStop,FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1());
              		
            }
            kw=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleValidID"
    // InternalMyXeniaParser.g:7270:1: entryRuleValidID returns [String current=null] : iv_ruleValidID= ruleValidID EOF ;
    public final String entryRuleValidID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleValidID = null;


        try {
            // InternalMyXeniaParser.g:7270:47: (iv_ruleValidID= ruleValidID EOF )
            // InternalMyXeniaParser.g:7271:2: iv_ruleValidID= ruleValidID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValidIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValidID=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValidID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValidID"


    // $ANTLR start "ruleValidID"
    // InternalMyXeniaParser.g:7277:1: ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleValidID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;


        	enterRule();

        try {
            // InternalMyXeniaParser.g:7283:2: (this_ID_0= RULE_ID )
            // InternalMyXeniaParser.g:7284:2: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValidID"


    // $ANTLR start "entryRuleXImportDeclaration"
    // InternalMyXeniaParser.g:7294:1: entryRuleXImportDeclaration returns [EObject current=null] : iv_ruleXImportDeclaration= ruleXImportDeclaration EOF ;
    public final EObject entryRuleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportDeclaration = null;


        try {
            // InternalMyXeniaParser.g:7294:59: (iv_ruleXImportDeclaration= ruleXImportDeclaration EOF )
            // InternalMyXeniaParser.g:7295:2: iv_ruleXImportDeclaration= ruleXImportDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportDeclaration=ruleXImportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportDeclaration"


    // $ANTLR start "ruleXImportDeclaration"
    // InternalMyXeniaParser.g:7301:1: ruleXImportDeclaration returns [EObject current=null] : (otherlv_0= Import ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= Semicolon )? ) ;
    public final EObject ruleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_static_1_0=null;
        Token lv_extension_2_0=null;
        Token lv_wildcard_4_0=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_memberName_5_0 = null;

        AntlrDatatypeRuleToken lv_importedNamespace_7_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:7307:2: ( (otherlv_0= Import ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= Semicolon )? ) )
            // InternalMyXeniaParser.g:7308:2: (otherlv_0= Import ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= Semicolon )? )
            {
            // InternalMyXeniaParser.g:7308:2: (otherlv_0= Import ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= Semicolon )? )
            // InternalMyXeniaParser.g:7309:3: otherlv_0= Import ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= Semicolon )?
            {
            otherlv_0=(Token)match(input,Import,FOLLOW_96); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getXImportDeclarationAccess().getImportKeyword_0());
              		
            }
            // InternalMyXeniaParser.g:7313:3: ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )
            int alt138=3;
            alt138 = dfa138.predict(input);
            switch (alt138) {
                case 1 :
                    // InternalMyXeniaParser.g:7314:4: ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    {
                    // InternalMyXeniaParser.g:7314:4: ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    // InternalMyXeniaParser.g:7315:5: ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    {
                    // InternalMyXeniaParser.g:7315:5: ( (lv_static_1_0= Static ) )
                    // InternalMyXeniaParser.g:7316:6: (lv_static_1_0= Static )
                    {
                    // InternalMyXeniaParser.g:7316:6: (lv_static_1_0= Static )
                    // InternalMyXeniaParser.g:7317:7: lv_static_1_0= Static
                    {
                    lv_static_1_0=(Token)match(input,Static,FOLLOW_97); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_static_1_0, grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      							}
                      							setWithLastConsumed(current, "static", lv_static_1_0 != null, "static");
                      						
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:7329:5: ( (lv_extension_2_0= Extension ) )?
                    int alt136=2;
                    int LA136_0 = input.LA(1);

                    if ( (LA136_0==Extension) ) {
                        alt136=1;
                    }
                    switch (alt136) {
                        case 1 :
                            // InternalMyXeniaParser.g:7330:6: (lv_extension_2_0= Extension )
                            {
                            // InternalMyXeniaParser.g:7330:6: (lv_extension_2_0= Extension )
                            // InternalMyXeniaParser.g:7331:7: lv_extension_2_0= Extension
                            {
                            lv_extension_2_0=(Token)match(input,Extension,FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_extension_2_0, grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              							}
                              							setWithLastConsumed(current, "extension", lv_extension_2_0 != null, "extension");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalMyXeniaParser.g:7343:5: ( ( ruleQualifiedNameInStaticImport ) )
                    // InternalMyXeniaParser.g:7344:6: ( ruleQualifiedNameInStaticImport )
                    {
                    // InternalMyXeniaParser.g:7344:6: ( ruleQualifiedNameInStaticImport )
                    // InternalMyXeniaParser.g:7345:7: ruleQualifiedNameInStaticImport
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_98);
                    ruleQualifiedNameInStaticImport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalMyXeniaParser.g:7359:5: ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    int alt137=2;
                    int LA137_0 = input.LA(1);

                    if ( (LA137_0==Asterisk) ) {
                        alt137=1;
                    }
                    else if ( (LA137_0==RULE_ID) ) {
                        alt137=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 137, 0, input);

                        throw nvae;
                    }
                    switch (alt137) {
                        case 1 :
                            // InternalMyXeniaParser.g:7360:6: ( (lv_wildcard_4_0= Asterisk ) )
                            {
                            // InternalMyXeniaParser.g:7360:6: ( (lv_wildcard_4_0= Asterisk ) )
                            // InternalMyXeniaParser.g:7361:7: (lv_wildcard_4_0= Asterisk )
                            {
                            // InternalMyXeniaParser.g:7361:7: (lv_wildcard_4_0= Asterisk )
                            // InternalMyXeniaParser.g:7362:8: lv_wildcard_4_0= Asterisk
                            {
                            lv_wildcard_4_0=(Token)match(input,Asterisk,FOLLOW_99); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_wildcard_4_0, grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              								}
                              								setWithLastConsumed(current, "wildcard", lv_wildcard_4_0 != null, "*");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMyXeniaParser.g:7375:6: ( (lv_memberName_5_0= ruleValidID ) )
                            {
                            // InternalMyXeniaParser.g:7375:6: ( (lv_memberName_5_0= ruleValidID ) )
                            // InternalMyXeniaParser.g:7376:7: (lv_memberName_5_0= ruleValidID )
                            {
                            // InternalMyXeniaParser.g:7376:7: (lv_memberName_5_0= ruleValidID )
                            // InternalMyXeniaParser.g:7377:8: lv_memberName_5_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_3_1_0());
                              							
                            }
                            pushFollow(FOLLOW_99);
                            lv_memberName_5_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                              								}
                              								set(
                              									current,
                              									"memberName",
                              									lv_memberName_5_0,
                              									"org.eclipse.xtext.xbase.Xtype.ValidID");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:7397:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalMyXeniaParser.g:7397:4: ( ( ruleQualifiedName ) )
                    // InternalMyXeniaParser.g:7398:5: ( ruleQualifiedName )
                    {
                    // InternalMyXeniaParser.g:7398:5: ( ruleQualifiedName )
                    // InternalMyXeniaParser.g:7399:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_99);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalMyXeniaParser.g:7414:4: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    {
                    // InternalMyXeniaParser.g:7414:4: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    // InternalMyXeniaParser.g:7415:5: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    {
                    // InternalMyXeniaParser.g:7415:5: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    // InternalMyXeniaParser.g:7416:6: lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_99);
                    lv_importedNamespace_7_0=ruleQualifiedNameWithWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"importedNamespace",
                      							lv_importedNamespace_7_0,
                      							"org.eclipse.xtext.xbase.Xtype.QualifiedNameWithWildcard");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyXeniaParser.g:7434:3: (otherlv_8= Semicolon )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==Semicolon) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalMyXeniaParser.g:7435:4: otherlv_8= Semicolon
                    {
                    otherlv_8=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportDeclaration"


    // $ANTLR start "entryRuleQualifiedNameInStaticImport"
    // InternalMyXeniaParser.g:7444:1: entryRuleQualifiedNameInStaticImport returns [String current=null] : iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF ;
    public final String entryRuleQualifiedNameInStaticImport() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameInStaticImport = null;


        try {
            // InternalMyXeniaParser.g:7444:67: (iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF )
            // InternalMyXeniaParser.g:7445:2: iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameInStaticImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameInStaticImport=ruleQualifiedNameInStaticImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameInStaticImport.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameInStaticImport"


    // $ANTLR start "ruleQualifiedNameInStaticImport"
    // InternalMyXeniaParser.g:7451:1: ruleQualifiedNameInStaticImport returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID kw= FullStop )+ ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameInStaticImport() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;



        	enterRule();

        try {
            // InternalMyXeniaParser.g:7457:2: ( (this_ValidID_0= ruleValidID kw= FullStop )+ )
            // InternalMyXeniaParser.g:7458:2: (this_ValidID_0= ruleValidID kw= FullStop )+
            {
            // InternalMyXeniaParser.g:7458:2: (this_ValidID_0= ruleValidID kw= FullStop )+
            int cnt140=0;
            loop140:
            do {
                int alt140=2;
                int LA140_0 = input.LA(1);

                if ( (LA140_0==RULE_ID) ) {
                    int LA140_2 = input.LA(2);

                    if ( (LA140_2==FullStop) ) {
                        alt140=1;
                    }


                }


                switch (alt140) {
            	case 1 :
            	    // InternalMyXeniaParser.g:7459:3: this_ValidID_0= ruleValidID kw= FullStop
            	    {
            	    if ( state.backtracking==0 ) {

            	      			newCompositeNode(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0());
            	      		
            	    }
            	    pushFollow(FOLLOW_94);
            	    this_ValidID_0=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(this_ValidID_0);
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			afterParserOrEnumRuleCall();
            	      		
            	    }
            	    kw=(Token)match(input,FullStop,FOLLOW_100); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(kw);
            	      			newLeafNode(kw, grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1());
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt140 >= 1 ) break loop140;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(140, input);
                        throw eee;
                }
                cnt140++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameInStaticImport"


    // $ANTLR start "ruleMode"
    // InternalMyXeniaParser.g:7478:1: ruleMode returns [Enumerator current=null] : ( (enumLiteral_0= DEV ) | (enumLiteral_1= PROD ) ) ;
    public final Enumerator ruleMode() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalMyXeniaParser.g:7484:2: ( ( (enumLiteral_0= DEV ) | (enumLiteral_1= PROD ) ) )
            // InternalMyXeniaParser.g:7485:2: ( (enumLiteral_0= DEV ) | (enumLiteral_1= PROD ) )
            {
            // InternalMyXeniaParser.g:7485:2: ( (enumLiteral_0= DEV ) | (enumLiteral_1= PROD ) )
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==DEV) ) {
                alt141=1;
            }
            else if ( (LA141_0==PROD) ) {
                alt141=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 141, 0, input);

                throw nvae;
            }
            switch (alt141) {
                case 1 :
                    // InternalMyXeniaParser.g:7486:3: (enumLiteral_0= DEV )
                    {
                    // InternalMyXeniaParser.g:7486:3: (enumLiteral_0= DEV )
                    // InternalMyXeniaParser.g:7487:4: enumLiteral_0= DEV
                    {
                    enumLiteral_0=(Token)match(input,DEV,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getModeAccess().getDEVEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getModeAccess().getDEVEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:7494:3: (enumLiteral_1= PROD )
                    {
                    // InternalMyXeniaParser.g:7494:3: (enumLiteral_1= PROD )
                    // InternalMyXeniaParser.g:7495:4: enumLiteral_1= PROD
                    {
                    enumLiteral_1=(Token)match(input,PROD,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getModeAccess().getPRODEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getModeAccess().getPRODEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMode"


    // $ANTLR start "ruleInfoEntry"
    // InternalMyXeniaParser.g:7505:1: ruleInfoEntry returns [Enumerator current=null] : ( (enumLiteral_0= MOD ) | (enumLiteral_1= FREQ ) | (enumLiteral_2= PRIO ) ) ;
    public final Enumerator ruleInfoEntry() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalMyXeniaParser.g:7511:2: ( ( (enumLiteral_0= MOD ) | (enumLiteral_1= FREQ ) | (enumLiteral_2= PRIO ) ) )
            // InternalMyXeniaParser.g:7512:2: ( (enumLiteral_0= MOD ) | (enumLiteral_1= FREQ ) | (enumLiteral_2= PRIO ) )
            {
            // InternalMyXeniaParser.g:7512:2: ( (enumLiteral_0= MOD ) | (enumLiteral_1= FREQ ) | (enumLiteral_2= PRIO ) )
            int alt142=3;
            switch ( input.LA(1) ) {
            case MOD:
                {
                alt142=1;
                }
                break;
            case FREQ:
                {
                alt142=2;
                }
                break;
            case PRIO:
                {
                alt142=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 142, 0, input);

                throw nvae;
            }

            switch (alt142) {
                case 1 :
                    // InternalMyXeniaParser.g:7513:3: (enumLiteral_0= MOD )
                    {
                    // InternalMyXeniaParser.g:7513:3: (enumLiteral_0= MOD )
                    // InternalMyXeniaParser.g:7514:4: enumLiteral_0= MOD
                    {
                    enumLiteral_0=(Token)match(input,MOD,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getInfoEntryAccess().getMODEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getInfoEntryAccess().getMODEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyXeniaParser.g:7521:3: (enumLiteral_1= FREQ )
                    {
                    // InternalMyXeniaParser.g:7521:3: (enumLiteral_1= FREQ )
                    // InternalMyXeniaParser.g:7522:4: enumLiteral_1= FREQ
                    {
                    enumLiteral_1=(Token)match(input,FREQ,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getInfoEntryAccess().getFREQEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getInfoEntryAccess().getFREQEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyXeniaParser.g:7529:3: (enumLiteral_2= PRIO )
                    {
                    // InternalMyXeniaParser.g:7529:3: (enumLiteral_2= PRIO )
                    // InternalMyXeniaParser.g:7530:4: enumLiteral_2= PRIO
                    {
                    enumLiteral_2=(Token)match(input,PRIO,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getInfoEntryAccess().getPRIOEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getInfoEntryAccess().getPRIOEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInfoEntry"

    // $ANTLR start synpred1_InternalMyXeniaParser
    public final void synpred1_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:1360:6: ( ( () ( ( ruleOpMultiAssign ) ) ) )
        // InternalMyXeniaParser.g:1360:7: ( () ( ( ruleOpMultiAssign ) ) )
        {
        // InternalMyXeniaParser.g:1360:7: ( () ( ( ruleOpMultiAssign ) ) )
        // InternalMyXeniaParser.g:1361:7: () ( ( ruleOpMultiAssign ) )
        {
        // InternalMyXeniaParser.g:1361:7: ()
        // InternalMyXeniaParser.g:1362:7: 
        {
        }

        // InternalMyXeniaParser.g:1363:7: ( ( ruleOpMultiAssign ) )
        // InternalMyXeniaParser.g:1364:8: ( ruleOpMultiAssign )
        {
        // InternalMyXeniaParser.g:1364:8: ( ruleOpMultiAssign )
        // InternalMyXeniaParser.g:1365:9: ruleOpMultiAssign
        {
        pushFollow(FOLLOW_2);
        ruleOpMultiAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred1_InternalMyXeniaParser

    // $ANTLR start synpred2_InternalMyXeniaParser
    public final void synpred2_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:1554:5: ( ( () ( ( ruleOpOr ) ) ) )
        // InternalMyXeniaParser.g:1554:6: ( () ( ( ruleOpOr ) ) )
        {
        // InternalMyXeniaParser.g:1554:6: ( () ( ( ruleOpOr ) ) )
        // InternalMyXeniaParser.g:1555:6: () ( ( ruleOpOr ) )
        {
        // InternalMyXeniaParser.g:1555:6: ()
        // InternalMyXeniaParser.g:1556:6: 
        {
        }

        // InternalMyXeniaParser.g:1557:6: ( ( ruleOpOr ) )
        // InternalMyXeniaParser.g:1558:7: ( ruleOpOr )
        {
        // InternalMyXeniaParser.g:1558:7: ( ruleOpOr )
        // InternalMyXeniaParser.g:1559:8: ruleOpOr
        {
        pushFollow(FOLLOW_2);
        ruleOpOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred2_InternalMyXeniaParser

    // $ANTLR start synpred3_InternalMyXeniaParser
    public final void synpred3_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:1661:5: ( ( () ( ( ruleOpAnd ) ) ) )
        // InternalMyXeniaParser.g:1661:6: ( () ( ( ruleOpAnd ) ) )
        {
        // InternalMyXeniaParser.g:1661:6: ( () ( ( ruleOpAnd ) ) )
        // InternalMyXeniaParser.g:1662:6: () ( ( ruleOpAnd ) )
        {
        // InternalMyXeniaParser.g:1662:6: ()
        // InternalMyXeniaParser.g:1663:6: 
        {
        }

        // InternalMyXeniaParser.g:1664:6: ( ( ruleOpAnd ) )
        // InternalMyXeniaParser.g:1665:7: ( ruleOpAnd )
        {
        // InternalMyXeniaParser.g:1665:7: ( ruleOpAnd )
        // InternalMyXeniaParser.g:1666:8: ruleOpAnd
        {
        pushFollow(FOLLOW_2);
        ruleOpAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred3_InternalMyXeniaParser

    // $ANTLR start synpred4_InternalMyXeniaParser
    public final void synpred4_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:1768:5: ( ( () ( ( ruleOpEquality ) ) ) )
        // InternalMyXeniaParser.g:1768:6: ( () ( ( ruleOpEquality ) ) )
        {
        // InternalMyXeniaParser.g:1768:6: ( () ( ( ruleOpEquality ) ) )
        // InternalMyXeniaParser.g:1769:6: () ( ( ruleOpEquality ) )
        {
        // InternalMyXeniaParser.g:1769:6: ()
        // InternalMyXeniaParser.g:1770:6: 
        {
        }

        // InternalMyXeniaParser.g:1771:6: ( ( ruleOpEquality ) )
        // InternalMyXeniaParser.g:1772:7: ( ruleOpEquality )
        {
        // InternalMyXeniaParser.g:1772:7: ( ruleOpEquality )
        // InternalMyXeniaParser.g:1773:8: ruleOpEquality
        {
        pushFollow(FOLLOW_2);
        ruleOpEquality();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred4_InternalMyXeniaParser

    // $ANTLR start synpred5_InternalMyXeniaParser
    public final void synpred5_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:1896:6: ( ( () Instanceof ) )
        // InternalMyXeniaParser.g:1896:7: ( () Instanceof )
        {
        // InternalMyXeniaParser.g:1896:7: ( () Instanceof )
        // InternalMyXeniaParser.g:1897:7: () Instanceof
        {
        // InternalMyXeniaParser.g:1897:7: ()
        // InternalMyXeniaParser.g:1898:7: 
        {
        }

        match(input,Instanceof,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalMyXeniaParser

    // $ANTLR start synpred6_InternalMyXeniaParser
    public final void synpred6_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:1939:6: ( ( () ( ( ruleOpCompare ) ) ) )
        // InternalMyXeniaParser.g:1939:7: ( () ( ( ruleOpCompare ) ) )
        {
        // InternalMyXeniaParser.g:1939:7: ( () ( ( ruleOpCompare ) ) )
        // InternalMyXeniaParser.g:1940:7: () ( ( ruleOpCompare ) )
        {
        // InternalMyXeniaParser.g:1940:7: ()
        // InternalMyXeniaParser.g:1941:7: 
        {
        }

        // InternalMyXeniaParser.g:1942:7: ( ( ruleOpCompare ) )
        // InternalMyXeniaParser.g:1943:8: ( ruleOpCompare )
        {
        // InternalMyXeniaParser.g:1943:8: ( ruleOpCompare )
        // InternalMyXeniaParser.g:1944:9: ruleOpCompare
        {
        pushFollow(FOLLOW_2);
        ruleOpCompare();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred6_InternalMyXeniaParser

    // $ANTLR start synpred7_InternalMyXeniaParser
    public final void synpred7_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:2074:5: ( ( () ( ( ruleOpOther ) ) ) )
        // InternalMyXeniaParser.g:2074:6: ( () ( ( ruleOpOther ) ) )
        {
        // InternalMyXeniaParser.g:2074:6: ( () ( ( ruleOpOther ) ) )
        // InternalMyXeniaParser.g:2075:6: () ( ( ruleOpOther ) )
        {
        // InternalMyXeniaParser.g:2075:6: ()
        // InternalMyXeniaParser.g:2076:6: 
        {
        }

        // InternalMyXeniaParser.g:2077:6: ( ( ruleOpOther ) )
        // InternalMyXeniaParser.g:2078:7: ( ruleOpOther )
        {
        // InternalMyXeniaParser.g:2078:7: ( ruleOpOther )
        // InternalMyXeniaParser.g:2079:8: ruleOpOther
        {
        pushFollow(FOLLOW_2);
        ruleOpOther();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred7_InternalMyXeniaParser

    // $ANTLR start synpred8_InternalMyXeniaParser
    public final void synpred8_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:2194:6: ( ( GreaterThanSign GreaterThanSign ) )
        // InternalMyXeniaParser.g:2194:7: ( GreaterThanSign GreaterThanSign )
        {
        // InternalMyXeniaParser.g:2194:7: ( GreaterThanSign GreaterThanSign )
        // InternalMyXeniaParser.g:2195:7: GreaterThanSign GreaterThanSign
        {
        match(input,GreaterThanSign,FOLLOW_40); if (state.failed) return ;
        match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalMyXeniaParser

    // $ANTLR start synpred9_InternalMyXeniaParser
    public final void synpred9_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:2229:6: ( ( LessThanSign LessThanSign ) )
        // InternalMyXeniaParser.g:2229:7: ( LessThanSign LessThanSign )
        {
        // InternalMyXeniaParser.g:2229:7: ( LessThanSign LessThanSign )
        // InternalMyXeniaParser.g:2230:7: LessThanSign LessThanSign
        {
        match(input,LessThanSign,FOLLOW_30); if (state.failed) return ;
        match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred9_InternalMyXeniaParser

    // $ANTLR start synpred10_InternalMyXeniaParser
    public final void synpred10_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:2302:5: ( ( () ( ( ruleOpAdd ) ) ) )
        // InternalMyXeniaParser.g:2302:6: ( () ( ( ruleOpAdd ) ) )
        {
        // InternalMyXeniaParser.g:2302:6: ( () ( ( ruleOpAdd ) ) )
        // InternalMyXeniaParser.g:2303:6: () ( ( ruleOpAdd ) )
        {
        // InternalMyXeniaParser.g:2303:6: ()
        // InternalMyXeniaParser.g:2304:6: 
        {
        }

        // InternalMyXeniaParser.g:2305:6: ( ( ruleOpAdd ) )
        // InternalMyXeniaParser.g:2306:7: ( ruleOpAdd )
        {
        // InternalMyXeniaParser.g:2306:7: ( ruleOpAdd )
        // InternalMyXeniaParser.g:2307:8: ruleOpAdd
        {
        pushFollow(FOLLOW_2);
        ruleOpAdd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalMyXeniaParser

    // $ANTLR start synpred11_InternalMyXeniaParser
    public final void synpred11_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:2417:5: ( ( () ( ( ruleOpMulti ) ) ) )
        // InternalMyXeniaParser.g:2417:6: ( () ( ( ruleOpMulti ) ) )
        {
        // InternalMyXeniaParser.g:2417:6: ( () ( ( ruleOpMulti ) ) )
        // InternalMyXeniaParser.g:2418:6: () ( ( ruleOpMulti ) )
        {
        // InternalMyXeniaParser.g:2418:6: ()
        // InternalMyXeniaParser.g:2419:6: 
        {
        }

        // InternalMyXeniaParser.g:2420:6: ( ( ruleOpMulti ) )
        // InternalMyXeniaParser.g:2421:7: ( ruleOpMulti )
        {
        // InternalMyXeniaParser.g:2421:7: ( ruleOpMulti )
        // InternalMyXeniaParser.g:2422:8: ruleOpMulti
        {
        pushFollow(FOLLOW_2);
        ruleOpMulti();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred11_InternalMyXeniaParser

    // $ANTLR start synpred12_InternalMyXeniaParser
    public final void synpred12_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:2652:5: ( ( () As ) )
        // InternalMyXeniaParser.g:2652:6: ( () As )
        {
        // InternalMyXeniaParser.g:2652:6: ( () As )
        // InternalMyXeniaParser.g:2653:6: () As
        {
        // InternalMyXeniaParser.g:2653:6: ()
        // InternalMyXeniaParser.g:2654:6: 
        {
        }

        match(input,As,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_InternalMyXeniaParser

    // $ANTLR start synpred13_InternalMyXeniaParser
    public final void synpred13_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:2720:4: ( ( () ( ( ruleOpPostfix ) ) ) )
        // InternalMyXeniaParser.g:2720:5: ( () ( ( ruleOpPostfix ) ) )
        {
        // InternalMyXeniaParser.g:2720:5: ( () ( ( ruleOpPostfix ) ) )
        // InternalMyXeniaParser.g:2721:5: () ( ( ruleOpPostfix ) )
        {
        // InternalMyXeniaParser.g:2721:5: ()
        // InternalMyXeniaParser.g:2722:5: 
        {
        }

        // InternalMyXeniaParser.g:2723:5: ( ( ruleOpPostfix ) )
        // InternalMyXeniaParser.g:2724:6: ( ruleOpPostfix )
        {
        // InternalMyXeniaParser.g:2724:6: ( ruleOpPostfix )
        // InternalMyXeniaParser.g:2725:7: ruleOpPostfix
        {
        pushFollow(FOLLOW_2);
        ruleOpPostfix();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred13_InternalMyXeniaParser

    // $ANTLR start synpred14_InternalMyXeniaParser
    public final void synpred14_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:2816:6: ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
        // InternalMyXeniaParser.g:2816:7: ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        {
        // InternalMyXeniaParser.g:2816:7: ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        // InternalMyXeniaParser.g:2817:7: () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
        {
        // InternalMyXeniaParser.g:2817:7: ()
        // InternalMyXeniaParser.g:2818:7: 
        {
        }

        // InternalMyXeniaParser.g:2819:7: ( FullStop | ( ( ColonColon ) ) )
        int alt143=2;
        int LA143_0 = input.LA(1);

        if ( (LA143_0==FullStop) ) {
            alt143=1;
        }
        else if ( (LA143_0==ColonColon) ) {
            alt143=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 143, 0, input);

            throw nvae;
        }
        switch (alt143) {
            case 1 :
                // InternalMyXeniaParser.g:2820:8: FullStop
                {
                match(input,FullStop,FOLLOW_47); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalMyXeniaParser.g:2822:8: ( ( ColonColon ) )
                {
                // InternalMyXeniaParser.g:2822:8: ( ( ColonColon ) )
                // InternalMyXeniaParser.g:2823:9: ( ColonColon )
                {
                // InternalMyXeniaParser.g:2823:9: ( ColonColon )
                // InternalMyXeniaParser.g:2824:10: ColonColon
                {
                match(input,ColonColon,FOLLOW_47); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalMyXeniaParser.g:2828:7: ( ( ruleFeatureCallID ) )
        // InternalMyXeniaParser.g:2829:8: ( ruleFeatureCallID )
        {
        // InternalMyXeniaParser.g:2829:8: ( ruleFeatureCallID )
        // InternalMyXeniaParser.g:2830:9: ruleFeatureCallID
        {
        pushFollow(FOLLOW_27);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred14_InternalMyXeniaParser

    // $ANTLR start synpred15_InternalMyXeniaParser
    public final void synpred15_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:2913:6: ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )
        // InternalMyXeniaParser.g:2913:7: ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) )
        {
        // InternalMyXeniaParser.g:2913:7: ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) )
        // InternalMyXeniaParser.g:2914:7: () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) )
        {
        // InternalMyXeniaParser.g:2914:7: ()
        // InternalMyXeniaParser.g:2915:7: 
        {
        }

        // InternalMyXeniaParser.g:2916:7: ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) )
        int alt144=3;
        switch ( input.LA(1) ) {
        case FullStop:
            {
            alt144=1;
            }
            break;
        case QuestionMarkFullStop:
            {
            alt144=2;
            }
            break;
        case ColonColon:
            {
            alt144=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 144, 0, input);

            throw nvae;
        }

        switch (alt144) {
            case 1 :
                // InternalMyXeniaParser.g:2917:8: FullStop
                {
                match(input,FullStop,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalMyXeniaParser.g:2919:8: ( ( QuestionMarkFullStop ) )
                {
                // InternalMyXeniaParser.g:2919:8: ( ( QuestionMarkFullStop ) )
                // InternalMyXeniaParser.g:2920:9: ( QuestionMarkFullStop )
                {
                // InternalMyXeniaParser.g:2920:9: ( QuestionMarkFullStop )
                // InternalMyXeniaParser.g:2921:10: QuestionMarkFullStop
                {
                match(input,QuestionMarkFullStop,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalMyXeniaParser.g:2925:8: ( ( ColonColon ) )
                {
                // InternalMyXeniaParser.g:2925:8: ( ( ColonColon ) )
                // InternalMyXeniaParser.g:2926:9: ( ColonColon )
                {
                // InternalMyXeniaParser.g:2926:9: ( ColonColon )
                // InternalMyXeniaParser.g:2927:10: ColonColon
                {
                match(input,ColonColon,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred15_InternalMyXeniaParser

    // $ANTLR start synpred16_InternalMyXeniaParser
    public final void synpred16_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:3051:7: ( ( LeftParenthesis ) )
        // InternalMyXeniaParser.g:3051:8: ( LeftParenthesis )
        {
        // InternalMyXeniaParser.g:3051:8: ( LeftParenthesis )
        // InternalMyXeniaParser.g:3052:8: LeftParenthesis
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred16_InternalMyXeniaParser

    // $ANTLR start synpred17_InternalMyXeniaParser
    public final void synpred17_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:3070:8: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )
        // InternalMyXeniaParser.g:3070:9: ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        {
        // InternalMyXeniaParser.g:3070:9: ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        // InternalMyXeniaParser.g:3071:9: () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) )
        {
        // InternalMyXeniaParser.g:3071:9: ()
        // InternalMyXeniaParser.g:3072:9: 
        {
        }

        // InternalMyXeniaParser.g:3073:9: ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )?
        int alt146=2;
        int LA146_0 = input.LA(1);

        if ( (LA146_0==EqualsSignGreaterThanSign||LA146_0==LeftParenthesis||LA146_0==RULE_ID) ) {
            alt146=1;
        }
        switch (alt146) {
            case 1 :
                // InternalMyXeniaParser.g:3074:10: ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalMyXeniaParser.g:3074:10: ( ( ruleJvmFormalParameter ) )
                // InternalMyXeniaParser.g:3075:11: ( ruleJvmFormalParameter )
                {
                // InternalMyXeniaParser.g:3075:11: ( ruleJvmFormalParameter )
                // InternalMyXeniaParser.g:3076:12: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_62);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalMyXeniaParser.g:3079:10: ( Comma ( ( ruleJvmFormalParameter ) ) )*
                loop145:
                do {
                    int alt145=2;
                    int LA145_0 = input.LA(1);

                    if ( (LA145_0==Comma) ) {
                        alt145=1;
                    }


                    switch (alt145) {
                	case 1 :
                	    // InternalMyXeniaParser.g:3080:11: Comma ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,Comma,FOLLOW_37); if (state.failed) return ;
                	    // InternalMyXeniaParser.g:3081:11: ( ( ruleJvmFormalParameter ) )
                	    // InternalMyXeniaParser.g:3082:12: ( ruleJvmFormalParameter )
                	    {
                	    // InternalMyXeniaParser.g:3082:12: ( ruleJvmFormalParameter )
                	    // InternalMyXeniaParser.g:3083:13: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_62);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop145;
                    }
                } while (true);


                }
                break;

        }

        // InternalMyXeniaParser.g:3088:9: ( ( VerticalLine ) )
        // InternalMyXeniaParser.g:3089:10: ( VerticalLine )
        {
        // InternalMyXeniaParser.g:3089:10: ( VerticalLine )
        // InternalMyXeniaParser.g:3090:11: VerticalLine
        {
        match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred17_InternalMyXeniaParser

    // $ANTLR start synpred18_InternalMyXeniaParser
    public final void synpred18_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:3167:6: ( ( () LeftSquareBracket ) )
        // InternalMyXeniaParser.g:3167:7: ( () LeftSquareBracket )
        {
        // InternalMyXeniaParser.g:3167:7: ( () LeftSquareBracket )
        // InternalMyXeniaParser.g:3168:7: () LeftSquareBracket
        {
        // InternalMyXeniaParser.g:3168:7: ()
        // InternalMyXeniaParser.g:3169:7: 
        {
        }

        match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred18_InternalMyXeniaParser

    // $ANTLR start synpred19_InternalMyXeniaParser
    public final void synpred19_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:3240:4: ( ( () Synchronized LeftParenthesis ) )
        // InternalMyXeniaParser.g:3240:5: ( () Synchronized LeftParenthesis )
        {
        // InternalMyXeniaParser.g:3240:5: ( () Synchronized LeftParenthesis )
        // InternalMyXeniaParser.g:3241:5: () Synchronized LeftParenthesis
        {
        // InternalMyXeniaParser.g:3241:5: ()
        // InternalMyXeniaParser.g:3242:5: 
        {
        }

        match(input,Synchronized,FOLLOW_23); if (state.failed) return ;
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalMyXeniaParser

    // $ANTLR start synpred20_InternalMyXeniaParser
    public final void synpred20_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:3285:4: ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )
        // InternalMyXeniaParser.g:3285:5: ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon )
        {
        // InternalMyXeniaParser.g:3285:5: ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon )
        // InternalMyXeniaParser.g:3286:5: () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon
        {
        // InternalMyXeniaParser.g:3286:5: ()
        // InternalMyXeniaParser.g:3287:5: 
        {
        }

        match(input,For,FOLLOW_23); if (state.failed) return ;
        match(input,LeftParenthesis,FOLLOW_37); if (state.failed) return ;
        // InternalMyXeniaParser.g:3290:5: ( ( ruleJvmFormalParameter ) )
        // InternalMyXeniaParser.g:3291:6: ( ruleJvmFormalParameter )
        {
        // InternalMyXeniaParser.g:3291:6: ( ruleJvmFormalParameter )
        // InternalMyXeniaParser.g:3292:7: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_68);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred20_InternalMyXeniaParser

    // $ANTLR start synpred21_InternalMyXeniaParser
    public final void synpred21_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:3399:4: ( ( () LeftSquareBracket ) )
        // InternalMyXeniaParser.g:3399:5: ( () LeftSquareBracket )
        {
        // InternalMyXeniaParser.g:3399:5: ( () LeftSquareBracket )
        // InternalMyXeniaParser.g:3400:5: () LeftSquareBracket
        {
        // InternalMyXeniaParser.g:3400:5: ()
        // InternalMyXeniaParser.g:3401:5: 
        {
        }

        match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred21_InternalMyXeniaParser

    // $ANTLR start synpred23_InternalMyXeniaParser
    public final void synpred23_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:3704:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )
        // InternalMyXeniaParser.g:3704:5: ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        {
        // InternalMyXeniaParser.g:3704:5: ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        // InternalMyXeniaParser.g:3705:5: ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) )
        {
        // InternalMyXeniaParser.g:3705:5: ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )?
        int alt148=2;
        int LA148_0 = input.LA(1);

        if ( (LA148_0==EqualsSignGreaterThanSign||LA148_0==LeftParenthesis||LA148_0==RULE_ID) ) {
            alt148=1;
        }
        switch (alt148) {
            case 1 :
                // InternalMyXeniaParser.g:3706:6: ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalMyXeniaParser.g:3706:6: ( ( ruleJvmFormalParameter ) )
                // InternalMyXeniaParser.g:3707:7: ( ruleJvmFormalParameter )
                {
                // InternalMyXeniaParser.g:3707:7: ( ruleJvmFormalParameter )
                // InternalMyXeniaParser.g:3708:8: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_62);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalMyXeniaParser.g:3711:6: ( Comma ( ( ruleJvmFormalParameter ) ) )*
                loop147:
                do {
                    int alt147=2;
                    int LA147_0 = input.LA(1);

                    if ( (LA147_0==Comma) ) {
                        alt147=1;
                    }


                    switch (alt147) {
                	case 1 :
                	    // InternalMyXeniaParser.g:3712:7: Comma ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,Comma,FOLLOW_37); if (state.failed) return ;
                	    // InternalMyXeniaParser.g:3713:7: ( ( ruleJvmFormalParameter ) )
                	    // InternalMyXeniaParser.g:3714:8: ( ruleJvmFormalParameter )
                	    {
                	    // InternalMyXeniaParser.g:3714:8: ( ruleJvmFormalParameter )
                	    // InternalMyXeniaParser.g:3715:9: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_62);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop147;
                    }
                } while (true);


                }
                break;

        }

        // InternalMyXeniaParser.g:3720:5: ( ( VerticalLine ) )
        // InternalMyXeniaParser.g:3721:6: ( VerticalLine )
        {
        // InternalMyXeniaParser.g:3721:6: ( VerticalLine )
        // InternalMyXeniaParser.g:3722:7: VerticalLine
        {
        match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred23_InternalMyXeniaParser

    // $ANTLR start synpred25_InternalMyXeniaParser
    public final void synpred25_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:4113:5: ( Else )
        // InternalMyXeniaParser.g:4113:6: Else
        {
        match(input,Else,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred25_InternalMyXeniaParser

    // $ANTLR start synpred26_InternalMyXeniaParser
    public final void synpred26_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:4172:6: ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )
        // InternalMyXeniaParser.g:4172:7: ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon )
        {
        // InternalMyXeniaParser.g:4172:7: ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon )
        // InternalMyXeniaParser.g:4173:7: LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon
        {
        match(input,LeftParenthesis,FOLLOW_37); if (state.failed) return ;
        // InternalMyXeniaParser.g:4174:7: ( ( ruleJvmFormalParameter ) )
        // InternalMyXeniaParser.g:4175:8: ( ruleJvmFormalParameter )
        {
        // InternalMyXeniaParser.g:4175:8: ( ruleJvmFormalParameter )
        // InternalMyXeniaParser.g:4176:9: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_68);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred26_InternalMyXeniaParser

    // $ANTLR start synpred27_InternalMyXeniaParser
    public final void synpred27_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:4239:6: ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )
        // InternalMyXeniaParser.g:4239:7: ( ( ( ruleJvmFormalParameter ) ) Colon )
        {
        // InternalMyXeniaParser.g:4239:7: ( ( ( ruleJvmFormalParameter ) ) Colon )
        // InternalMyXeniaParser.g:4240:7: ( ( ruleJvmFormalParameter ) ) Colon
        {
        // InternalMyXeniaParser.g:4240:7: ( ( ruleJvmFormalParameter ) )
        // InternalMyXeniaParser.g:4241:8: ( ruleJvmFormalParameter )
        {
        // InternalMyXeniaParser.g:4241:8: ( ruleJvmFormalParameter )
        // InternalMyXeniaParser.g:4242:9: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_68);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred27_InternalMyXeniaParser

    // $ANTLR start synpred29_InternalMyXeniaParser
    public final void synpred29_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:4996:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )
        // InternalMyXeniaParser.g:4996:6: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        {
        // InternalMyXeniaParser.g:4996:6: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        // InternalMyXeniaParser.g:4997:6: ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) )
        {
        // InternalMyXeniaParser.g:4997:6: ( ( ruleJvmTypeReference ) )
        // InternalMyXeniaParser.g:4998:7: ( ruleJvmTypeReference )
        {
        // InternalMyXeniaParser.g:4998:7: ( ruleJvmTypeReference )
        // InternalMyXeniaParser.g:4999:8: ruleJvmTypeReference
        {
        pushFollow(FOLLOW_78);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalMyXeniaParser.g:5002:6: ( ( ruleValidID ) )
        // InternalMyXeniaParser.g:5003:7: ( ruleValidID )
        {
        // InternalMyXeniaParser.g:5003:7: ( ruleValidID )
        // InternalMyXeniaParser.g:5004:8: ruleValidID
        {
        pushFollow(FOLLOW_2);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred29_InternalMyXeniaParser

    // $ANTLR start synpred30_InternalMyXeniaParser
    public final void synpred30_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:5308:5: ( ( LeftParenthesis ) )
        // InternalMyXeniaParser.g:5308:6: ( LeftParenthesis )
        {
        // InternalMyXeniaParser.g:5308:6: ( LeftParenthesis )
        // InternalMyXeniaParser.g:5309:6: LeftParenthesis
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred30_InternalMyXeniaParser

    // $ANTLR start synpred31_InternalMyXeniaParser
    public final void synpred31_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:5327:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )
        // InternalMyXeniaParser.g:5327:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        {
        // InternalMyXeniaParser.g:5327:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        // InternalMyXeniaParser.g:5328:7: () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) )
        {
        // InternalMyXeniaParser.g:5328:7: ()
        // InternalMyXeniaParser.g:5329:7: 
        {
        }

        // InternalMyXeniaParser.g:5330:7: ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )?
        int alt152=2;
        int LA152_0 = input.LA(1);

        if ( (LA152_0==EqualsSignGreaterThanSign||LA152_0==LeftParenthesis||LA152_0==RULE_ID) ) {
            alt152=1;
        }
        switch (alt152) {
            case 1 :
                // InternalMyXeniaParser.g:5331:8: ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalMyXeniaParser.g:5331:8: ( ( ruleJvmFormalParameter ) )
                // InternalMyXeniaParser.g:5332:9: ( ruleJvmFormalParameter )
                {
                // InternalMyXeniaParser.g:5332:9: ( ruleJvmFormalParameter )
                // InternalMyXeniaParser.g:5333:10: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_62);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalMyXeniaParser.g:5336:8: ( Comma ( ( ruleJvmFormalParameter ) ) )*
                loop151:
                do {
                    int alt151=2;
                    int LA151_0 = input.LA(1);

                    if ( (LA151_0==Comma) ) {
                        alt151=1;
                    }


                    switch (alt151) {
                	case 1 :
                	    // InternalMyXeniaParser.g:5337:9: Comma ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,Comma,FOLLOW_37); if (state.failed) return ;
                	    // InternalMyXeniaParser.g:5338:9: ( ( ruleJvmFormalParameter ) )
                	    // InternalMyXeniaParser.g:5339:10: ( ruleJvmFormalParameter )
                	    {
                	    // InternalMyXeniaParser.g:5339:10: ( ruleJvmFormalParameter )
                	    // InternalMyXeniaParser.g:5340:11: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_62);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop151;
                    }
                } while (true);


                }
                break;

        }

        // InternalMyXeniaParser.g:5345:7: ( ( VerticalLine ) )
        // InternalMyXeniaParser.g:5346:8: ( VerticalLine )
        {
        // InternalMyXeniaParser.g:5346:8: ( VerticalLine )
        // InternalMyXeniaParser.g:5347:9: VerticalLine
        {
        match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred31_InternalMyXeniaParser

    // $ANTLR start synpred32_InternalMyXeniaParser
    public final void synpred32_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:5424:4: ( ( () LeftSquareBracket ) )
        // InternalMyXeniaParser.g:5424:5: ( () LeftSquareBracket )
        {
        // InternalMyXeniaParser.g:5424:5: ( () LeftSquareBracket )
        // InternalMyXeniaParser.g:5425:5: () LeftSquareBracket
        {
        // InternalMyXeniaParser.g:5425:5: ()
        // InternalMyXeniaParser.g:5426:5: 
        {
        }

        match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalMyXeniaParser

    // $ANTLR start synpred33_InternalMyXeniaParser
    public final void synpred33_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:5584:5: ( LessThanSign )
        // InternalMyXeniaParser.g:5584:6: LessThanSign
        {
        match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred33_InternalMyXeniaParser

    // $ANTLR start synpred34_InternalMyXeniaParser
    public final void synpred34_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:5641:5: ( ( LeftParenthesis ) )
        // InternalMyXeniaParser.g:5641:6: ( LeftParenthesis )
        {
        // InternalMyXeniaParser.g:5641:6: ( LeftParenthesis )
        // InternalMyXeniaParser.g:5642:6: LeftParenthesis
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_InternalMyXeniaParser

    // $ANTLR start synpred35_InternalMyXeniaParser
    public final void synpred35_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:5660:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )
        // InternalMyXeniaParser.g:5660:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        {
        // InternalMyXeniaParser.g:5660:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        // InternalMyXeniaParser.g:5661:7: () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) )
        {
        // InternalMyXeniaParser.g:5661:7: ()
        // InternalMyXeniaParser.g:5662:7: 
        {
        }

        // InternalMyXeniaParser.g:5663:7: ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )?
        int alt154=2;
        int LA154_0 = input.LA(1);

        if ( (LA154_0==EqualsSignGreaterThanSign||LA154_0==LeftParenthesis||LA154_0==RULE_ID) ) {
            alt154=1;
        }
        switch (alt154) {
            case 1 :
                // InternalMyXeniaParser.g:5664:8: ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalMyXeniaParser.g:5664:8: ( ( ruleJvmFormalParameter ) )
                // InternalMyXeniaParser.g:5665:9: ( ruleJvmFormalParameter )
                {
                // InternalMyXeniaParser.g:5665:9: ( ruleJvmFormalParameter )
                // InternalMyXeniaParser.g:5666:10: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_62);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalMyXeniaParser.g:5669:8: ( Comma ( ( ruleJvmFormalParameter ) ) )*
                loop153:
                do {
                    int alt153=2;
                    int LA153_0 = input.LA(1);

                    if ( (LA153_0==Comma) ) {
                        alt153=1;
                    }


                    switch (alt153) {
                	case 1 :
                	    // InternalMyXeniaParser.g:5670:9: Comma ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,Comma,FOLLOW_37); if (state.failed) return ;
                	    // InternalMyXeniaParser.g:5671:9: ( ( ruleJvmFormalParameter ) )
                	    // InternalMyXeniaParser.g:5672:10: ( ruleJvmFormalParameter )
                	    {
                	    // InternalMyXeniaParser.g:5672:10: ( ruleJvmFormalParameter )
                	    // InternalMyXeniaParser.g:5673:11: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_62);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop153;
                    }
                } while (true);


                }
                break;

        }

        // InternalMyXeniaParser.g:5678:7: ( ( VerticalLine ) )
        // InternalMyXeniaParser.g:5679:8: ( VerticalLine )
        {
        // InternalMyXeniaParser.g:5679:8: ( VerticalLine )
        // InternalMyXeniaParser.g:5680:9: VerticalLine
        {
        match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred35_InternalMyXeniaParser

    // $ANTLR start synpred36_InternalMyXeniaParser
    public final void synpred36_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:5757:4: ( ( () LeftSquareBracket ) )
        // InternalMyXeniaParser.g:5757:5: ( () LeftSquareBracket )
        {
        // InternalMyXeniaParser.g:5757:5: ( () LeftSquareBracket )
        // InternalMyXeniaParser.g:5758:5: () LeftSquareBracket
        {
        // InternalMyXeniaParser.g:5758:5: ()
        // InternalMyXeniaParser.g:5759:5: 
        {
        }

        match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred36_InternalMyXeniaParser

    // $ANTLR start synpred37_InternalMyXeniaParser
    public final void synpred37_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:6100:4: ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )
        // InternalMyXeniaParser.g:
        {
        if ( input.LA(1)==Synchronized||input.LA(1)==Extension||input.LA(1)==Extends||(input.LA(1)>=Import && input.LA(1)<=Typeof)||(input.LA(1)>=False && input.LA(1)<=While)||input.LA(1)==Null||input.LA(1)==True||(input.LA(1)>=For && input.LA(1)<=Try)||(input.LA(1)>=Do && input.LA(1)<=If)||(input.LA(1)>=ExclamationMark && input.LA(1)<=NumberSign)||input.LA(1)==LeftParenthesis||input.LA(1)==PlusSign||input.LA(1)==HyphenMinus||input.LA(1)==LessThanSign||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_BEGIN||(input.LA(1)>=RULE_HEX && input.LA(1)<=RULE_STRING) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred37_InternalMyXeniaParser

    // $ANTLR start synpred38_InternalMyXeniaParser
    public final void synpred38_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:6171:6: ( Catch )
        // InternalMyXeniaParser.g:6171:7: Catch
        {
        match(input,Catch,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred38_InternalMyXeniaParser

    // $ANTLR start synpred39_InternalMyXeniaParser
    public final void synpred39_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:6192:7: ( Finally )
        // InternalMyXeniaParser.g:6192:8: Finally
        {
        match(input,Finally,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred39_InternalMyXeniaParser

    // $ANTLR start synpred42_InternalMyXeniaParser
    public final void synpred42_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:6436:5: ( FullStop )
        // InternalMyXeniaParser.g:6436:6: FullStop
        {
        match(input,FullStop,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred42_InternalMyXeniaParser

    // $ANTLR start synpred43_InternalMyXeniaParser
    public final void synpred43_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:6562:5: ( ( () ruleArrayBrackets ) )
        // InternalMyXeniaParser.g:6562:6: ( () ruleArrayBrackets )
        {
        // InternalMyXeniaParser.g:6562:6: ( () ruleArrayBrackets )
        // InternalMyXeniaParser.g:6563:6: () ruleArrayBrackets
        {
        // InternalMyXeniaParser.g:6563:6: ()
        // InternalMyXeniaParser.g:6564:6: 
        {
        }

        pushFollow(FOLLOW_2);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred43_InternalMyXeniaParser

    // $ANTLR start synpred44_InternalMyXeniaParser
    public final void synpred44_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:6759:5: ( LessThanSign )
        // InternalMyXeniaParser.g:6759:6: LessThanSign
        {
        match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred44_InternalMyXeniaParser

    // $ANTLR start synpred45_InternalMyXeniaParser
    public final void synpred45_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:6815:6: ( ( () FullStop ) )
        // InternalMyXeniaParser.g:6815:7: ( () FullStop )
        {
        // InternalMyXeniaParser.g:6815:7: ( () FullStop )
        // InternalMyXeniaParser.g:6816:7: () FullStop
        {
        // InternalMyXeniaParser.g:6816:7: ()
        // InternalMyXeniaParser.g:6817:7: 
        {
        }

        match(input,FullStop,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred45_InternalMyXeniaParser

    // $ANTLR start synpred46_InternalMyXeniaParser
    public final void synpred46_InternalMyXeniaParser_fragment() throws RecognitionException {   
        // InternalMyXeniaParser.g:6853:7: ( LessThanSign )
        // InternalMyXeniaParser.g:6853:8: LessThanSign
        {
        match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred46_InternalMyXeniaParser

    // Delegated rules

    public final boolean synpred8_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalMyXeniaParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalMyXeniaParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA33 dfa33 = new DFA33(this);
    protected DFA43 dfa43 = new DFA43(this);
    protected DFA46 dfa46 = new DFA46(this);
    protected DFA62 dfa62 = new DFA62(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA63 dfa63 = new DFA63(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA101 dfa101 = new DFA101(this);
    protected DFA100 dfa100 = new DFA100(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA106 dfa106 = new DFA106(this);
    protected DFA109 dfa109 = new DFA109(this);
    protected DFA108 dfa108 = new DFA108(this);
    protected DFA110 dfa110 = new DFA110(this);
    protected DFA113 dfa113 = new DFA113(this);
    protected DFA131 dfa131 = new DFA131(this);
    protected DFA129 dfa129 = new DFA129(this);
    protected DFA138 dfa138 = new DFA138(this);
    static final String dfa_1s = "\12\uffff";
    static final String dfa_2s = "\1\10\11\uffff";
    static final String dfa_3s = "\1\11\7\0\2\uffff";
    static final String dfa_4s = "\1\154\7\0\2\uffff";
    static final String dfa_5s = "\10\uffff\1\2\1\1";
    static final String dfa_6s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\0\1\6\2\uffff}>";
    static final String[] dfa_7s = {
            "\1\10\1\uffff\1\10\1\uffff\1\10\2\uffff\3\10\2\uffff\5\10\1\uffff\5\10\4\uffff\2\10\2\uffff\1\10\4\uffff\4\10\2\uffff\6\10\1\5\2\10\1\3\1\10\1\1\1\10\1\2\2\10\1\4\16\10\1\uffff\12\10\1\6\1\uffff\1\7\1\uffff\3\10\1\uffff\10\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "1358:4: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA33_6 = input.LA(1);

                         
                        int index33_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyXeniaParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index33_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA33_1 = input.LA(1);

                         
                        int index33_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyXeniaParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index33_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA33_2 = input.LA(1);

                         
                        int index33_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyXeniaParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index33_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA33_3 = input.LA(1);

                         
                        int index33_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyXeniaParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index33_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA33_4 = input.LA(1);

                         
                        int index33_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyXeniaParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index33_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA33_5 = input.LA(1);

                         
                        int index33_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyXeniaParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index33_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA33_7 = input.LA(1);

                         
                        int index33_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyXeniaParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index33_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 33, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\13\uffff";
    static final String dfa_9s = "\1\1\12\uffff";
    static final String dfa_10s = "\1\11\1\uffff\10\0\1\uffff";
    static final String dfa_11s = "\1\154\1\uffff\10\0\1\uffff";
    static final String dfa_12s = "\1\uffff\1\2\10\uffff\1\1";
    static final String dfa_13s = "\2\uffff\1\4\1\3\1\6\1\7\1\5\1\0\1\1\1\2\1\uffff}>";
    static final String[] dfa_14s = {
            "\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\3\1\2\uffff\5\1\1\uffff\5\1\4\uffff\2\1\2\uffff\1\1\4\uffff\2\1\1\5\1\1\2\uffff\16\1\1\4\1\6\2\1\1\10\1\1\1\7\2\1\1\11\7\1\1\uffff\12\1\1\2\1\uffff\1\3\1\uffff\3\1\1\uffff\10\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA43 extends DFA {

        public DFA43(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 43;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "()* loopback of 2072:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA43_7 = input.LA(1);

                         
                        int index43_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMyXeniaParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA43_8 = input.LA(1);

                         
                        int index43_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMyXeniaParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA43_9 = input.LA(1);

                         
                        int index43_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMyXeniaParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA43_3 = input.LA(1);

                         
                        int index43_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMyXeniaParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA43_2 = input.LA(1);

                         
                        int index43_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMyXeniaParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_2);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA43_6 = input.LA(1);

                         
                        int index43_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMyXeniaParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA43_4 = input.LA(1);

                         
                        int index43_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMyXeniaParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_4);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA43_5 = input.LA(1);

                         
                        int index43_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMyXeniaParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index43_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 43, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_15s = "\1\57\2\uffff\1\102\7\uffff";
    static final String dfa_16s = "\1\137\2\uffff\1\137\7\uffff";
    static final String dfa_17s = "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\7\1\10\1\11\1\3\1\6";
    static final String dfa_18s = "\13\uffff}>";
    static final String[] dfa_19s = {
            "\1\2\21\uffff\1\1\1\4\2\uffff\1\7\1\uffff\1\5\2\uffff\1\10\22\uffff\1\6\1\uffff\1\3",
            "",
            "",
            "\1\11\34\uffff\1\12",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA46 extends DFA {

        public DFA46(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 46;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "2148:2: (kw= HyphenMinusGreaterThanSign | kw= FullStopFullStopLessThanSign | (kw= GreaterThanSign kw= FullStopFullStop ) | kw= FullStopFullStop | kw= EqualsSignGreaterThanSign | (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) ) | (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) ) | kw= LessThanSignGreaterThanSign | kw= QuestionMarkColon )";
        }
    }
    static final String dfa_20s = "\120\uffff";
    static final String dfa_21s = "\1\2\117\uffff";
    static final String dfa_22s = "\1\11\1\0\116\uffff";
    static final String dfa_23s = "\1\154\1\0\116\uffff";
    static final String dfa_24s = "\2\uffff\1\2\114\uffff\1\1";
    static final String dfa_25s = "\1\uffff\1\0\116\uffff}>";
    static final String[] dfa_26s = {
            "\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\3\2\2\uffff\5\2\1\uffff\5\2\4\uffff\2\2\2\uffff\1\2\4\uffff\4\2\2\uffff\37\2\1\uffff\1\1\12\2\1\uffff\1\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA62 extends DFA {

        public DFA62(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 62;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "3049:5: ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA62_1 = input.LA(1);

                         
                        int index62_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index62_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 62, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_27s = "\44\uffff";
    static final String dfa_28s = "\1\11\2\0\41\uffff";
    static final String dfa_29s = "\1\154\2\0\41\uffff";
    static final String dfa_30s = "\3\uffff\2\1\1\2\35\uffff\1\3";
    static final String dfa_31s = "\1\0\1\1\1\2\41\uffff}>";
    static final String[] dfa_32s = {
            "\1\5\3\uffff\1\5\3\uffff\1\5\3\uffff\5\5\2\uffff\4\5\10\uffff\1\5\4\uffff\1\5\5\uffff\3\5\21\uffff\1\3\4\uffff\2\5\1\uffff\2\5\2\uffff\1\2\1\43\1\uffff\1\5\1\uffff\1\5\4\uffff\1\5\3\uffff\1\5\2\uffff\1\4\1\uffff\1\5\1\uffff\3\5\1\1\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "3068:6: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA61_0 = input.LA(1);

                         
                        int index61_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA61_0==RULE_ID) ) {s = 1;}

                        else if ( (LA61_0==LeftParenthesis) ) {s = 2;}

                        else if ( (LA61_0==EqualsSignGreaterThanSign) && (synpred17_InternalMyXeniaParser())) {s = 3;}

                        else if ( (LA61_0==VerticalLine) && (synpred17_InternalMyXeniaParser())) {s = 4;}

                        else if ( (LA61_0==Synchronized||LA61_0==Extension||LA61_0==Extends||(LA61_0>=Import && LA61_0<=Typeof)||(LA61_0>=False && LA61_0<=While)||LA61_0==Null||LA61_0==True||(LA61_0>=For && LA61_0<=Try)||(LA61_0>=Do && LA61_0<=If)||(LA61_0>=ExclamationMark && LA61_0<=NumberSign)||LA61_0==PlusSign||LA61_0==HyphenMinus||LA61_0==LessThanSign||LA61_0==LeftSquareBracket||LA61_0==RULE_BEGIN||(LA61_0>=RULE_HEX && LA61_0<=RULE_DECIMAL)||LA61_0==RULE_STRING) ) {s = 5;}

                        else if ( (LA61_0==RightParenthesis) ) {s = 35;}

                         
                        input.seek(index61_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA61_1 = input.LA(1);

                         
                        int index61_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalMyXeniaParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index61_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA61_2 = input.LA(1);

                         
                        int index61_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalMyXeniaParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index61_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 61, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_33s = {
            "\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\3\2\2\uffff\5\2\1\uffff\5\2\4\uffff\2\2\2\uffff\1\2\4\uffff\4\2\2\uffff\37\2\1\uffff\13\2\1\uffff\1\2\1\uffff\1\1\2\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "3166:5: ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA63_1 = input.LA(1);

                         
                        int index63_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index63_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 63, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\40\uffff";
    static final String dfa_35s = "\1\11\26\uffff\1\0\10\uffff";
    static final String dfa_36s = "\1\154\26\uffff\1\0\10\uffff";
    static final String dfa_37s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\6\uffff\1\6\11\uffff\1\7\1\uffff\1\12\1\13\1\14\1\15\1\16\1\17\1\10\1\11";
    static final String dfa_38s = "\1\0\26\uffff\1\1\10\uffff}>";
    static final String[] dfa_39s = {
            "\1\4\3\uffff\1\5\3\uffff\1\5\3\uffff\1\5\1\33\1\5\1\3\1\14\2\uffff\1\14\1\5\1\32\1\30\10\uffff\1\14\4\uffff\1\14\5\uffff\1\27\1\1\1\34\26\uffff\1\31\1\26\2\uffff\1\14\2\uffff\1\35\11\uffff\1\5\3\uffff\1\14\4\uffff\1\2\1\uffff\3\14\1\5\1\14",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_34;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "3211:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA65_0 = input.LA(1);

                         
                        int index65_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA65_0==New) ) {s = 1;}

                        else if ( (LA65_0==RULE_BEGIN) ) {s = 2;}

                        else if ( (LA65_0==Switch) ) {s = 3;}

                        else if ( (LA65_0==Synchronized) && (synpred19_InternalMyXeniaParser())) {s = 4;}

                        else if ( (LA65_0==Extension||LA65_0==Extends||LA65_0==Import||LA65_0==Static||LA65_0==Super||LA65_0==LessThanSign||LA65_0==RULE_ID) ) {s = 5;}

                        else if ( (LA65_0==Typeof||LA65_0==False||LA65_0==Null||LA65_0==True||LA65_0==NumberSign||LA65_0==LeftSquareBracket||(LA65_0>=RULE_HEX && LA65_0<=RULE_DECIMAL)||LA65_0==RULE_STRING) ) {s = 12;}

                        else if ( (LA65_0==If) ) {s = 22;}

                        else if ( (LA65_0==For) ) {s = 23;}

                        else if ( (LA65_0==While) ) {s = 24;}

                        else if ( (LA65_0==Do) ) {s = 25;}

                        else if ( (LA65_0==Throw) ) {s = 26;}

                        else if ( (LA65_0==Return) ) {s = 27;}

                        else if ( (LA65_0==Try) ) {s = 28;}

                        else if ( (LA65_0==LeftParenthesis) ) {s = 29;}

                         
                        input.seek(index65_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA65_23 = input.LA(1);

                         
                        int index65_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalMyXeniaParser()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index65_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 65, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_40s = "\46\uffff";
    static final String dfa_41s = "\1\11\2\0\43\uffff";
    static final String dfa_42s = "\1\154\2\0\43\uffff";
    static final String dfa_43s = "\3\uffff\2\1\1\2\40\uffff";
    static final String dfa_44s = "\1\0\1\1\1\2\43\uffff}>";
    static final String[] dfa_45s = {
            "\1\5\3\uffff\1\5\3\uffff\1\5\3\uffff\5\5\2\uffff\4\5\10\uffff\1\5\4\uffff\1\5\5\uffff\5\5\17\uffff\1\3\4\uffff\2\5\1\uffff\2\5\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\4\uffff\1\5\3\uffff\2\5\1\uffff\1\4\1\uffff\1\5\1\uffff\3\5\1\1\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_40;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "3703:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA74_0 = input.LA(1);

                         
                        int index74_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA74_0==RULE_ID) ) {s = 1;}

                        else if ( (LA74_0==LeftParenthesis) ) {s = 2;}

                        else if ( (LA74_0==EqualsSignGreaterThanSign) && (synpred23_InternalMyXeniaParser())) {s = 3;}

                        else if ( (LA74_0==VerticalLine) && (synpred23_InternalMyXeniaParser())) {s = 4;}

                        else if ( (LA74_0==Synchronized||LA74_0==Extension||LA74_0==Extends||(LA74_0>=Import && LA74_0<=Typeof)||(LA74_0>=False && LA74_0<=While)||LA74_0==Null||LA74_0==True||(LA74_0>=For && LA74_0<=Var)||(LA74_0>=Do && LA74_0<=If)||(LA74_0>=ExclamationMark && LA74_0<=NumberSign)||LA74_0==PlusSign||LA74_0==HyphenMinus||LA74_0==LessThanSign||(LA74_0>=LeftSquareBracket && LA74_0<=RightSquareBracket)||LA74_0==RULE_BEGIN||(LA74_0>=RULE_HEX && LA74_0<=RULE_DECIMAL)||LA74_0==RULE_STRING) ) {s = 5;}

                         
                        input.seek(index74_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA74_1 = input.LA(1);

                         
                        int index74_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalMyXeniaParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index74_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA74_2 = input.LA(1);

                         
                        int index74_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalMyXeniaParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index74_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 74, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_46s = "\43\uffff";
    static final String dfa_47s = "\1\11\1\0\41\uffff";
    static final String dfa_48s = "\1\154\1\0\41\uffff";
    static final String dfa_49s = "\2\uffff\1\2\37\uffff\1\1";
    static final String dfa_50s = "\1\uffff\1\0\41\uffff}>";
    static final String[] dfa_51s = {
            "\1\2\3\uffff\1\2\3\uffff\1\2\3\uffff\5\2\2\uffff\4\2\10\uffff\1\2\4\uffff\1\2\5\uffff\3\2\21\uffff\1\2\4\uffff\2\2\1\uffff\2\2\2\uffff\1\1\2\uffff\1\2\1\uffff\1\2\4\uffff\1\2\3\uffff\1\2\4\uffff\1\2\1\uffff\5\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[][] dfa_51 = unpackEncodedStringArray(dfa_51s);

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_46;
            this.eof = dfa_46;
            this.min = dfa_47;
            this.max = dfa_48;
            this.accept = dfa_49;
            this.special = dfa_50;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "4169:3: ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA81_1 = input.LA(1);

                         
                        int index81_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_InternalMyXeniaParser()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index81_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_52s = "\42\uffff";
    static final String dfa_53s = "\1\11\2\0\37\uffff";
    static final String dfa_54s = "\1\154\2\0\37\uffff";
    static final String dfa_55s = "\3\uffff\1\1\1\2\35\uffff";
    static final String dfa_56s = "\1\0\1\1\1\2\37\uffff}>";
    static final String[] dfa_57s = {
            "\1\4\3\uffff\1\4\3\uffff\1\4\3\uffff\5\4\2\uffff\4\4\10\uffff\1\4\4\uffff\1\4\5\uffff\3\4\21\uffff\1\3\4\uffff\2\4\1\uffff\2\4\2\uffff\1\2\2\uffff\1\4\1\uffff\1\4\4\uffff\1\4\3\uffff\1\4\4\uffff\1\4\1\uffff\3\4\1\1\1\4",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = dfa_52;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "4238:5: ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA80_0 = input.LA(1);

                         
                        int index80_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA80_0==RULE_ID) ) {s = 1;}

                        else if ( (LA80_0==LeftParenthesis) ) {s = 2;}

                        else if ( (LA80_0==EqualsSignGreaterThanSign) && (synpred27_InternalMyXeniaParser())) {s = 3;}

                        else if ( (LA80_0==Synchronized||LA80_0==Extension||LA80_0==Extends||(LA80_0>=Import && LA80_0<=Typeof)||(LA80_0>=False && LA80_0<=While)||LA80_0==Null||LA80_0==True||(LA80_0>=For && LA80_0<=Try)||(LA80_0>=Do && LA80_0<=If)||(LA80_0>=ExclamationMark && LA80_0<=NumberSign)||LA80_0==PlusSign||LA80_0==HyphenMinus||LA80_0==LessThanSign||LA80_0==LeftSquareBracket||LA80_0==RULE_BEGIN||(LA80_0>=RULE_HEX && LA80_0<=RULE_DECIMAL)||LA80_0==RULE_STRING) ) {s = 4;}

                         
                        input.seek(index80_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA80_1 = input.LA(1);

                         
                        int index80_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalMyXeniaParser()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index80_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA80_2 = input.LA(1);

                         
                        int index80_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalMyXeniaParser()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index80_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 80, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA101 extends DFA {

        public DFA101(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 101;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "5306:3: ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA101_1 = input.LA(1);

                         
                        int index101_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index101_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 101, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA100 extends DFA {

        public DFA100(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 100;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "5325:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA100_0 = input.LA(1);

                         
                        int index100_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA100_0==RULE_ID) ) {s = 1;}

                        else if ( (LA100_0==LeftParenthesis) ) {s = 2;}

                        else if ( (LA100_0==EqualsSignGreaterThanSign) && (synpred31_InternalMyXeniaParser())) {s = 3;}

                        else if ( (LA100_0==VerticalLine) && (synpred31_InternalMyXeniaParser())) {s = 4;}

                        else if ( (LA100_0==Synchronized||LA100_0==Extension||LA100_0==Extends||(LA100_0>=Import && LA100_0<=Typeof)||(LA100_0>=False && LA100_0<=While)||LA100_0==Null||LA100_0==True||(LA100_0>=For && LA100_0<=Try)||(LA100_0>=Do && LA100_0<=If)||(LA100_0>=ExclamationMark && LA100_0<=NumberSign)||LA100_0==PlusSign||LA100_0==HyphenMinus||LA100_0==LessThanSign||LA100_0==LeftSquareBracket||LA100_0==RULE_BEGIN||(LA100_0>=RULE_HEX && LA100_0<=RULE_DECIMAL)||LA100_0==RULE_STRING) ) {s = 5;}

                        else if ( (LA100_0==RightParenthesis) ) {s = 35;}

                         
                        input.seek(index100_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA100_1 = input.LA(1);

                         
                        int index100_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalMyXeniaParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index100_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA100_2 = input.LA(1);

                         
                        int index100_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalMyXeniaParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index100_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 100, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "5423:3: ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA102_1 = input.LA(1);

                         
                        int index102_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index102_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 102, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_58s = {
            "\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\3\2\2\uffff\5\2\1\uffff\5\2\4\uffff\2\2\2\uffff\1\2\4\uffff\4\2\2\uffff\37\2\1\uffff\12\2\1\1\1\uffff\1\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA106 extends DFA {

        public DFA106(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 106;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "5582:3: ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA106_1 = input.LA(1);

                         
                        int index106_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index106_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 106, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA109 extends DFA {

        public DFA109(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 109;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "5639:3: ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA109_1 = input.LA(1);

                         
                        int index109_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index109_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 109, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA108 extends DFA {

        public DFA108(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 108;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "5658:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA108_0 = input.LA(1);

                         
                        int index108_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA108_0==RULE_ID) ) {s = 1;}

                        else if ( (LA108_0==LeftParenthesis) ) {s = 2;}

                        else if ( (LA108_0==EqualsSignGreaterThanSign) && (synpred35_InternalMyXeniaParser())) {s = 3;}

                        else if ( (LA108_0==VerticalLine) && (synpred35_InternalMyXeniaParser())) {s = 4;}

                        else if ( (LA108_0==Synchronized||LA108_0==Extension||LA108_0==Extends||(LA108_0>=Import && LA108_0<=Typeof)||(LA108_0>=False && LA108_0<=While)||LA108_0==Null||LA108_0==True||(LA108_0>=For && LA108_0<=Try)||(LA108_0>=Do && LA108_0<=If)||(LA108_0>=ExclamationMark && LA108_0<=NumberSign)||LA108_0==PlusSign||LA108_0==HyphenMinus||LA108_0==LessThanSign||LA108_0==LeftSquareBracket||LA108_0==RULE_BEGIN||(LA108_0>=RULE_HEX && LA108_0<=RULE_DECIMAL)||LA108_0==RULE_STRING) ) {s = 5;}

                        else if ( (LA108_0==RightParenthesis) ) {s = 35;}

                         
                        input.seek(index108_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA108_1 = input.LA(1);

                         
                        int index108_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalMyXeniaParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index108_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA108_2 = input.LA(1);

                         
                        int index108_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalMyXeniaParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index108_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 108, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA110 extends DFA {

        public DFA110(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 110;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "5756:3: ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA110_1 = input.LA(1);

                         
                        int index110_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index110_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 110, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_59s = "\1\41\117\uffff";
    static final String dfa_60s = "\1\11\40\0\57\uffff";
    static final String dfa_61s = "\1\154\40\0\57\uffff";
    static final String dfa_62s = "\41\uffff\1\2\55\uffff\1\1";
    static final String dfa_63s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\57\uffff}>";
    static final String[] dfa_64s = {
            "\1\14\1\uffff\1\41\1\uffff\1\5\2\uffff\1\41\1\2\1\41\2\uffff\1\4\1\36\1\3\1\13\1\30\1\uffff\1\41\1\21\1\16\1\35\1\33\4\uffff\2\41\2\uffff\1\26\4\uffff\1\22\3\41\2\uffff\1\32\1\11\1\37\26\41\1\34\1\31\1\41\1\6\1\17\1\41\1\uffff\1\40\2\41\1\10\1\41\1\7\4\41\1\15\1\uffff\1\41\1\uffff\1\20\2\41\1\uffff\1\41\1\12\1\41\1\23\1\24\1\25\1\1\1\27",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[][] dfa_64 = unpackEncodedStringArray(dfa_64s);

    class DFA113 extends DFA {

        public DFA113(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 113;
            this.eot = dfa_20;
            this.eof = dfa_59;
            this.min = dfa_60;
            this.max = dfa_61;
            this.accept = dfa_62;
            this.special = dfa_63;
            this.transition = dfa_64;
        }
        public String getDescription() {
            return "6099:3: ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA113_1 = input.LA(1);

                         
                        int index113_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA113_2 = input.LA(1);

                         
                        int index113_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA113_3 = input.LA(1);

                         
                        int index113_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA113_4 = input.LA(1);

                         
                        int index113_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA113_5 = input.LA(1);

                         
                        int index113_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA113_6 = input.LA(1);

                         
                        int index113_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA113_7 = input.LA(1);

                         
                        int index113_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA113_8 = input.LA(1);

                         
                        int index113_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA113_9 = input.LA(1);

                         
                        int index113_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA113_10 = input.LA(1);

                         
                        int index113_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA113_11 = input.LA(1);

                         
                        int index113_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA113_12 = input.LA(1);

                         
                        int index113_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA113_13 = input.LA(1);

                         
                        int index113_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA113_14 = input.LA(1);

                         
                        int index113_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA113_15 = input.LA(1);

                         
                        int index113_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA113_16 = input.LA(1);

                         
                        int index113_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA113_17 = input.LA(1);

                         
                        int index113_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA113_18 = input.LA(1);

                         
                        int index113_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA113_19 = input.LA(1);

                         
                        int index113_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA113_20 = input.LA(1);

                         
                        int index113_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA113_21 = input.LA(1);

                         
                        int index113_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA113_22 = input.LA(1);

                         
                        int index113_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA113_23 = input.LA(1);

                         
                        int index113_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA113_24 = input.LA(1);

                         
                        int index113_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA113_25 = input.LA(1);

                         
                        int index113_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA113_26 = input.LA(1);

                         
                        int index113_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA113_27 = input.LA(1);

                         
                        int index113_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA113_28 = input.LA(1);

                         
                        int index113_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA113_29 = input.LA(1);

                         
                        int index113_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA113_30 = input.LA(1);

                         
                        int index113_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA113_31 = input.LA(1);

                         
                        int index113_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA113_32 = input.LA(1);

                         
                        int index113_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyXeniaParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index113_32);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 113, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_65s = "\121\uffff";
    static final String dfa_66s = "\1\2\120\uffff";
    static final String dfa_67s = "\1\11\1\0\117\uffff";
    static final String dfa_68s = "\1\154\1\0\117\uffff";
    static final String dfa_69s = "\2\uffff\1\2\115\uffff\1\1";
    static final String dfa_70s = "\1\uffff\1\0\117\uffff}>";
    static final String[] dfa_71s = {
            "\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\3\2\2\uffff\5\2\1\uffff\5\2\4\uffff\2\2\2\uffff\1\2\4\uffff\4\2\2\uffff\52\2\1\1\1\uffff\1\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[][] dfa_71 = unpackEncodedStringArray(dfa_71s);

    class DFA131 extends DFA {

        public DFA131(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 131;
            this.eot = dfa_65;
            this.eof = dfa_66;
            this.min = dfa_67;
            this.max = dfa_68;
            this.accept = dfa_69;
            this.special = dfa_70;
            this.transition = dfa_71;
        }
        public String getDescription() {
            return "6757:3: ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA131_1 = input.LA(1);

                         
                        int index131_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalMyXeniaParser()) ) {s = 80;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index131_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 131, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA129 extends DFA {

        public DFA129(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 129;
            this.eot = dfa_65;
            this.eof = dfa_66;
            this.min = dfa_67;
            this.max = dfa_68;
            this.accept = dfa_69;
            this.special = dfa_70;
            this.transition = dfa_71;
        }
        public String getDescription() {
            return "6851:5: ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA129_1 = input.LA(1);

                         
                        int index129_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalMyXeniaParser()) ) {s = 80;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index129_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 129, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_72s = "\7\uffff";
    static final String dfa_73s = "\2\uffff\1\4\3\uffff\1\4";
    static final String dfa_74s = "\1\27\1\uffff\1\131\1\125\2\uffff\1\131";
    static final String dfa_75s = "\1\153\1\uffff\1\134\1\153\2\uffff\1\134";
    static final String dfa_76s = "\1\uffff\1\1\2\uffff\1\2\1\3\1\uffff";
    static final String dfa_77s = "\7\uffff}>";
    static final String[] dfa_78s = {
            "\1\1\123\uffff\1\2",
            "",
            "\1\3\2\uffff\1\4",
            "\1\5\25\uffff\1\6",
            "",
            "",
            "\1\3\2\uffff\1\4"
    };

    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[][] dfa_78 = unpackEncodedStringArray(dfa_78s);

    class DFA138 extends DFA {

        public DFA138(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 138;
            this.eot = dfa_72;
            this.eof = dfa_73;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_78;
        }
        public String getDescription() {
            return "7313:3: ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000180080L,0x0000008000000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000080080L,0x0000008000000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000080L,0x0000008000000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000800009020L,0x0000008000000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000000L,0x0000180000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000800001020L,0x0000008000000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000144000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000044000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000004000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0002000400000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000050L,0x0000008000000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000010L,0x0000008000000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000020000000400L,0x0000008000000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000400L,0x0000008000000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000008000000100L,0x0000008000000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000100L,0x0000008000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0004000300004000L,0x0000008000000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000080000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000000L,0x0000000000900000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x00F82100F3E22200L,0x00001FC22149B000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x00F82100F3E22200L,0x00001FC23149B000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x00F82100F3E22200L,0x00001F422149B000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x5200000000000002L,0x00000000A0000009L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000100L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0101400000000002L,0x0000000000000040L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000802L,0x00000000A0000100L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0000080000080080L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000800000000002L,0x00000000A00004A6L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000080L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000002L,0x0000000001400000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0800000000000002L,0x0000000004220000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000800L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0xA000000000000002L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000210L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000A22000L,0x0000080000000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000020A22000L,0x0000080020000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000080100080080L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000000080800000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000002L,0x0000000202080210L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x00F82100F3E22200L,0x00001F522159B080L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000002L,0x0000000202000210L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x00F82100F3E22200L,0x00001F622149B000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000002000800000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x00F82100F3E22200L,0x00001F462149B000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0000000400800000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x00F82100F3E22200L,0x00001F562149B080L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000001000800000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x00F82100F3E22202L,0x00001F423149B000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x00F82100F3E22202L,0x00001F422149B000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x00F82100F3E22200L,0x00001F422149B080L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000001000010000L,0x0000082008880080L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000001000000000L,0x0000000008800000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000000008800000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x00F82100F3E22200L,0x00001F423149B000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000010800000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x00F82100F3E22200L,0x00001F422159B000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000002L,0x0000000040000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000002L,0x0000000200080000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000002L,0x0000000200000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000002L,0x0000000220080000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000000200100000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000008040000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000008040002L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x0000060000000000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0000080000180080L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000002L,0x0000000020000000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000002L,0x0000000022000000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000020020002L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000800000L,0x0000080000000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000002000L,0x0000080000000000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000000L,0x0000080000200000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});

}