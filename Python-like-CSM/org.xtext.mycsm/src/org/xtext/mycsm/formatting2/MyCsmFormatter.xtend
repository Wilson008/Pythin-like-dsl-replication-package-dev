/*
 * generated by Xtext 2.25.0
 */
package org.xtext.mycsm.formatting2

import com.google.inject.Inject
import csm.CSM
import csm.Scenarion
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.eclipse.xtext.xbase.formatting2.XbaseFormatter
import org.xtext.mycsm.services.MyCsmGrammarAccess

class MyCsmFormatter extends XbaseFormatter {
	
	@Inject extension MyCsmGrammarAccess

	def dispatch void format(CSM cSM, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (step : cSM.step) {
			step.format
		}
		for (generalResource : cSM.generalResource) {
			generalResource.format
		}
		for (scenarion : cSM.scenarion) {
			scenarion.format
		}
		for (message : cSM.message) {
			message.format
		}
	}

	def dispatch void format(Scenarion scenarion, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (step : scenarion.step) {
			step.format
		}
		for (pathConnection : scenarion.pathconnection) {
			pathConnection.format
		}
	}
	
	// TODO: implement for Start, Stop, ResourceAcquire, ResourceRelease, XBlockExpression
}
