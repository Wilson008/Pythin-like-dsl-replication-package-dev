package org.xtext.mycsm.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.mycsm.services.MyCsmGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalMyCsmParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "ProcessingResource", "ExternalService", "ResourceAcquire", "ResourceRelease", "GeneralResource", "ResourceAcquire_1", "ResourceRelease_1", "ActiveResource", "Pathconnection", "Synchronized", "Instanceof", "Component", "Scenarion", "Extension", "Scenarion_1", "Workload", "PostPath", "Workload_1", "Message", "Seqence", "Default", "Extends", "Finally", "Message_1", "PrePath", "Branch", "Import", "Return", "Static", "Switch", "Typeof", "Merge", "Start", "Catch", "False", "Super", "Throw", "Value", "While", "Fork", "Join", "Stop", "Case", "Else", "Null", "Post", "Root", "Step", "True", "ExclamationMarkEqualsSignEqualsSign", "FullStopFullStopLessThanSign", "EqualsSignEqualsSignEqualsSign", "CSM", "For", "New", "Pre", "Try", "Val", "Var", "ExclamationMarkEqualsSign", "PercentSignEqualsSign", "AmpersandAmpersand", "AsteriskAsterisk", "AsteriskEqualsSign", "PlusSignPlusSign", "PlusSignEqualsSign", "HyphenMinusHyphenMinus", "HyphenMinusEqualsSign", "HyphenMinusGreaterThanSign", "FullStopFullStop", "SolidusEqualsSign", "ColonColon", "LessThanSignGreaterThanSign", "EqualsSignEqualsSign", "EqualsSignGreaterThanSign", "GreaterThanSignEqualsSign", "QuestionMarkFullStop", "QuestionMarkColon", "As", "Do", "If", "VerticalLineVerticalLine", "ExclamationMark", "NumberSign", "PercentSign", "Ampersand", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "QuestionMark", "LeftSquareBracket", "RightSquareBracket", "LeftCurlyBracket", "VerticalLine", "RightCurlyBracket", "RULE_BEGIN", "RULE_END", "RULE_HEX", "RULE_INT", "RULE_DECIMAL", "RULE_ID", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int Val=61;
    public static final int LessThanSignGreaterThanSign=76;
    public static final int RULE_HEX=111;
    public static final int Import=30;
    public static final int Stop=45;
    public static final int EqualsSignGreaterThanSign=78;
    public static final int Var=62;
    public static final int False=38;
    public static final int LessThanSign=100;
    public static final int LeftParenthesis=90;
    public static final int ExternalService=5;
    public static final int Throw=40;
    public static final int Extends=25;
    public static final int ExclamationMark=86;
    public static final int ExclamationMarkEqualsSignEqualsSign=53;
    public static final int GreaterThanSign=102;
    public static final int Root=50;
    public static final int RULE_ID=114;
    public static final int GreaterThanSignEqualsSign=79;
    public static final int ColonColon=75;
    public static final int EqualsSignEqualsSign=77;
    public static final int Switch=33;
    public static final int VerticalLine=107;
    public static final int PlusSign=93;
    public static final int RULE_INT=112;
    public static final int GeneralResource=8;
    public static final int RULE_ML_COMMENT=116;
    public static final int LeftSquareBracket=104;
    public static final int If=84;
    public static final int Workload_1=21;
    public static final int Finally=26;
    public static final int Message_1=27;
    public static final int Catch=37;
    public static final int VerticalLineVerticalLine=85;
    public static final int Case=46;
    public static final int QuestionMarkFullStop=80;
    public static final int Comma=94;
    public static final int As=82;
    public static final int HyphenMinus=95;
    public static final int Synchronized=13;
    public static final int QuestionMarkColon=81;
    public static final int Solidus=97;
    public static final int RightCurlyBracket=108;
    public static final int PercentSignEqualsSign=64;
    public static final int FullStop=96;
    public static final int Join=44;
    public static final int Default=24;
    public static final int Workload=19;
    public static final int Semicolon=99;
    public static final int Merge=35;
    public static final int PlusSignPlusSign=68;
    public static final int QuestionMark=103;
    public static final int PrePath=28;
    public static final int Else=47;
    public static final int ExclamationMarkEqualsSign=63;
    public static final int HyphenMinusGreaterThanSign=72;
    public static final int HyphenMinusHyphenMinus=70;
    public static final int New=58;
    public static final int Null=48;
    public static final int Pre=59;
    public static final int RULE_BEGIN=109;
    public static final int Typeof=34;
    public static final int Start=36;
    public static final int SolidusEqualsSign=74;
    public static final int ProcessingResource=4;
    public static final int ResourceRelease_1=10;
    public static final int True=52;
    public static final int PercentSign=88;
    public static final int Super=39;
    public static final int ResourceRelease=7;
    public static final int FullStopFullStop=73;
    public static final int Try=60;
    public static final int Ampersand=89;
    public static final int AsteriskEqualsSign=67;
    public static final int RightSquareBracket=105;
    public static final int For=57;
    public static final int RightParenthesis=91;
    public static final int ResourceAcquire_1=9;
    public static final int Do=83;
    public static final int EqualsSignEqualsSignEqualsSign=55;
    public static final int RULE_DECIMAL=113;
    public static final int NumberSign=87;
    public static final int Value=41;
    public static final int AsteriskAsterisk=66;
    public static final int Static=32;
    public static final int RULE_END=110;
    public static final int Pathconnection=12;
    public static final int Fork=43;
    public static final int Message=22;
    public static final int RULE_STRING=115;
    public static final int Step=51;
    public static final int ResourceAcquire=6;
    public static final int RULE_SL_COMMENT=117;
    public static final int EqualsSign=101;
    public static final int AmpersandAmpersand=65;
    public static final int Branch=29;
    public static final int Instanceof=14;
    public static final int HyphenMinusEqualsSign=71;
    public static final int Colon=98;
    public static final int Component=15;
    public static final int CSM=56;
    public static final int EOF=-1;
    public static final int Asterisk=92;
    public static final int PlusSignEqualsSign=69;
    public static final int Return=31;
    public static final int Scenarion=16;
    public static final int RULE_WS=118;
    public static final int Post=49;
    public static final int LeftCurlyBracket=106;
    public static final int While=42;
    public static final int RULE_ANY_OTHER=119;
    public static final int Seqence=23;
    public static final int Extension=17;
    public static final int FullStopFullStopLessThanSign=54;
    public static final int PostPath=20;
    public static final int ActiveResource=11;
    public static final int Scenarion_1=18;

    // delegates
    // delegators


        public InternalMyCsmParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalMyCsmParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalMyCsmParser.tokenNames; }
    public String getGrammarFileName() { return "InternalMyCsmParser.g"; }



     	private MyCsmGrammarAccess grammarAccess;

        public InternalMyCsmParser(TokenStream input, MyCsmGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "CSM";
       	}

       	@Override
       	protected MyCsmGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleCSM"
    // InternalMyCsmParser.g:57:1: entryRuleCSM returns [EObject current=null] : iv_ruleCSM= ruleCSM EOF ;
    public final EObject entryRuleCSM() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCSM = null;


        try {
            // InternalMyCsmParser.g:57:44: (iv_ruleCSM= ruleCSM EOF )
            // InternalMyCsmParser.g:58:2: iv_ruleCSM= ruleCSM EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCSMRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCSM=ruleCSM();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCSM; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCSM"


    // $ANTLR start "ruleCSM"
    // InternalMyCsmParser.g:64:1: ruleCSM returns [EObject current=null] : (otherlv_0= CSM this_BEGIN_1= RULE_BEGIN otherlv_2= Step this_BEGIN_3= RULE_BEGIN ( (lv_step_4_0= ruleStep ) ) (otherlv_5= Comma ( (lv_step_6_0= ruleStep ) ) )* this_END_7= RULE_END otherlv_8= GeneralResource this_BEGIN_9= RULE_BEGIN ( (lv_generalResource_10_0= ruleGeneralResource ) ) (otherlv_11= Comma ( (lv_generalResource_12_0= ruleGeneralResource ) ) )* this_END_13= RULE_END otherlv_14= Scenarion_1 this_BEGIN_15= RULE_BEGIN ( (lv_scenarion_16_0= ruleScenarion ) ) (otherlv_17= Comma ( (lv_scenarion_18_0= ruleScenarion ) ) )* this_END_19= RULE_END (otherlv_20= Message_1 this_BEGIN_21= RULE_BEGIN ( (lv_message_22_0= ruleMessage ) ) (otherlv_23= Comma ( (lv_message_24_0= ruleMessage ) ) )* this_END_25= RULE_END )? this_END_26= RULE_END ) ;
    public final EObject ruleCSM() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_1=null;
        Token otherlv_2=null;
        Token this_BEGIN_3=null;
        Token otherlv_5=null;
        Token this_END_7=null;
        Token otherlv_8=null;
        Token this_BEGIN_9=null;
        Token otherlv_11=null;
        Token this_END_13=null;
        Token otherlv_14=null;
        Token this_BEGIN_15=null;
        Token otherlv_17=null;
        Token this_END_19=null;
        Token otherlv_20=null;
        Token this_BEGIN_21=null;
        Token otherlv_23=null;
        Token this_END_25=null;
        Token this_END_26=null;
        EObject lv_step_4_0 = null;

        EObject lv_step_6_0 = null;

        EObject lv_generalResource_10_0 = null;

        EObject lv_generalResource_12_0 = null;

        EObject lv_scenarion_16_0 = null;

        EObject lv_scenarion_18_0 = null;

        EObject lv_message_22_0 = null;

        EObject lv_message_24_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:70:2: ( (otherlv_0= CSM this_BEGIN_1= RULE_BEGIN otherlv_2= Step this_BEGIN_3= RULE_BEGIN ( (lv_step_4_0= ruleStep ) ) (otherlv_5= Comma ( (lv_step_6_0= ruleStep ) ) )* this_END_7= RULE_END otherlv_8= GeneralResource this_BEGIN_9= RULE_BEGIN ( (lv_generalResource_10_0= ruleGeneralResource ) ) (otherlv_11= Comma ( (lv_generalResource_12_0= ruleGeneralResource ) ) )* this_END_13= RULE_END otherlv_14= Scenarion_1 this_BEGIN_15= RULE_BEGIN ( (lv_scenarion_16_0= ruleScenarion ) ) (otherlv_17= Comma ( (lv_scenarion_18_0= ruleScenarion ) ) )* this_END_19= RULE_END (otherlv_20= Message_1 this_BEGIN_21= RULE_BEGIN ( (lv_message_22_0= ruleMessage ) ) (otherlv_23= Comma ( (lv_message_24_0= ruleMessage ) ) )* this_END_25= RULE_END )? this_END_26= RULE_END ) )
            // InternalMyCsmParser.g:71:2: (otherlv_0= CSM this_BEGIN_1= RULE_BEGIN otherlv_2= Step this_BEGIN_3= RULE_BEGIN ( (lv_step_4_0= ruleStep ) ) (otherlv_5= Comma ( (lv_step_6_0= ruleStep ) ) )* this_END_7= RULE_END otherlv_8= GeneralResource this_BEGIN_9= RULE_BEGIN ( (lv_generalResource_10_0= ruleGeneralResource ) ) (otherlv_11= Comma ( (lv_generalResource_12_0= ruleGeneralResource ) ) )* this_END_13= RULE_END otherlv_14= Scenarion_1 this_BEGIN_15= RULE_BEGIN ( (lv_scenarion_16_0= ruleScenarion ) ) (otherlv_17= Comma ( (lv_scenarion_18_0= ruleScenarion ) ) )* this_END_19= RULE_END (otherlv_20= Message_1 this_BEGIN_21= RULE_BEGIN ( (lv_message_22_0= ruleMessage ) ) (otherlv_23= Comma ( (lv_message_24_0= ruleMessage ) ) )* this_END_25= RULE_END )? this_END_26= RULE_END )
            {
            // InternalMyCsmParser.g:71:2: (otherlv_0= CSM this_BEGIN_1= RULE_BEGIN otherlv_2= Step this_BEGIN_3= RULE_BEGIN ( (lv_step_4_0= ruleStep ) ) (otherlv_5= Comma ( (lv_step_6_0= ruleStep ) ) )* this_END_7= RULE_END otherlv_8= GeneralResource this_BEGIN_9= RULE_BEGIN ( (lv_generalResource_10_0= ruleGeneralResource ) ) (otherlv_11= Comma ( (lv_generalResource_12_0= ruleGeneralResource ) ) )* this_END_13= RULE_END otherlv_14= Scenarion_1 this_BEGIN_15= RULE_BEGIN ( (lv_scenarion_16_0= ruleScenarion ) ) (otherlv_17= Comma ( (lv_scenarion_18_0= ruleScenarion ) ) )* this_END_19= RULE_END (otherlv_20= Message_1 this_BEGIN_21= RULE_BEGIN ( (lv_message_22_0= ruleMessage ) ) (otherlv_23= Comma ( (lv_message_24_0= ruleMessage ) ) )* this_END_25= RULE_END )? this_END_26= RULE_END )
            // InternalMyCsmParser.g:72:3: otherlv_0= CSM this_BEGIN_1= RULE_BEGIN otherlv_2= Step this_BEGIN_3= RULE_BEGIN ( (lv_step_4_0= ruleStep ) ) (otherlv_5= Comma ( (lv_step_6_0= ruleStep ) ) )* this_END_7= RULE_END otherlv_8= GeneralResource this_BEGIN_9= RULE_BEGIN ( (lv_generalResource_10_0= ruleGeneralResource ) ) (otherlv_11= Comma ( (lv_generalResource_12_0= ruleGeneralResource ) ) )* this_END_13= RULE_END otherlv_14= Scenarion_1 this_BEGIN_15= RULE_BEGIN ( (lv_scenarion_16_0= ruleScenarion ) ) (otherlv_17= Comma ( (lv_scenarion_18_0= ruleScenarion ) ) )* this_END_19= RULE_END (otherlv_20= Message_1 this_BEGIN_21= RULE_BEGIN ( (lv_message_22_0= ruleMessage ) ) (otherlv_23= Comma ( (lv_message_24_0= ruleMessage ) ) )* this_END_25= RULE_END )? this_END_26= RULE_END
            {
            otherlv_0=(Token)match(input,CSM,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getCSMAccess().getCSMKeyword_0());
              		
            }
            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getCSMAccess().getBEGINTerminalRuleCall_1());
              		
            }
            otherlv_2=(Token)match(input,Step,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getCSMAccess().getStepKeyword_2());
              		
            }
            this_BEGIN_3=(Token)match(input,RULE_BEGIN,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_3, grammarAccess.getCSMAccess().getBEGINTerminalRuleCall_3());
              		
            }
            // InternalMyCsmParser.g:88:3: ( (lv_step_4_0= ruleStep ) )
            // InternalMyCsmParser.g:89:4: (lv_step_4_0= ruleStep )
            {
            // InternalMyCsmParser.g:89:4: (lv_step_4_0= ruleStep )
            // InternalMyCsmParser.g:90:5: lv_step_4_0= ruleStep
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCSMAccess().getStepStepParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_step_4_0=ruleStep();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCSMRule());
              					}
              					add(
              						current,
              						"step",
              						lv_step_4_0,
              						"org.xtext.mycsm.MyCsm.Step");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyCsmParser.g:107:3: (otherlv_5= Comma ( (lv_step_6_0= ruleStep ) ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==Comma) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalMyCsmParser.g:108:4: otherlv_5= Comma ( (lv_step_6_0= ruleStep ) )
            	    {
            	    otherlv_5=(Token)match(input,Comma,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getCSMAccess().getCommaKeyword_5_0());
            	      			
            	    }
            	    // InternalMyCsmParser.g:112:4: ( (lv_step_6_0= ruleStep ) )
            	    // InternalMyCsmParser.g:113:5: (lv_step_6_0= ruleStep )
            	    {
            	    // InternalMyCsmParser.g:113:5: (lv_step_6_0= ruleStep )
            	    // InternalMyCsmParser.g:114:6: lv_step_6_0= ruleStep
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCSMAccess().getStepStepParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_step_6_0=ruleStep();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCSMRule());
            	      						}
            	      						add(
            	      							current,
            	      							"step",
            	      							lv_step_6_0,
            	      							"org.xtext.mycsm.MyCsm.Step");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            this_END_7=(Token)match(input,RULE_END,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_7, grammarAccess.getCSMAccess().getENDTerminalRuleCall_6());
              		
            }
            otherlv_8=(Token)match(input,GeneralResource,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getCSMAccess().getGeneralResourceKeyword_7());
              		
            }
            this_BEGIN_9=(Token)match(input,RULE_BEGIN,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_9, grammarAccess.getCSMAccess().getBEGINTerminalRuleCall_8());
              		
            }
            // InternalMyCsmParser.g:144:3: ( (lv_generalResource_10_0= ruleGeneralResource ) )
            // InternalMyCsmParser.g:145:4: (lv_generalResource_10_0= ruleGeneralResource )
            {
            // InternalMyCsmParser.g:145:4: (lv_generalResource_10_0= ruleGeneralResource )
            // InternalMyCsmParser.g:146:5: lv_generalResource_10_0= ruleGeneralResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCSMAccess().getGeneralResourceGeneralResourceParserRuleCall_9_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_generalResource_10_0=ruleGeneralResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCSMRule());
              					}
              					add(
              						current,
              						"generalResource",
              						lv_generalResource_10_0,
              						"org.xtext.mycsm.MyCsm.GeneralResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyCsmParser.g:163:3: (otherlv_11= Comma ( (lv_generalResource_12_0= ruleGeneralResource ) ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==Comma) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalMyCsmParser.g:164:4: otherlv_11= Comma ( (lv_generalResource_12_0= ruleGeneralResource ) )
            	    {
            	    otherlv_11=(Token)match(input,Comma,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_11, grammarAccess.getCSMAccess().getCommaKeyword_10_0());
            	      			
            	    }
            	    // InternalMyCsmParser.g:168:4: ( (lv_generalResource_12_0= ruleGeneralResource ) )
            	    // InternalMyCsmParser.g:169:5: (lv_generalResource_12_0= ruleGeneralResource )
            	    {
            	    // InternalMyCsmParser.g:169:5: (lv_generalResource_12_0= ruleGeneralResource )
            	    // InternalMyCsmParser.g:170:6: lv_generalResource_12_0= ruleGeneralResource
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCSMAccess().getGeneralResourceGeneralResourceParserRuleCall_10_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_generalResource_12_0=ruleGeneralResource();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCSMRule());
            	      						}
            	      						add(
            	      							current,
            	      							"generalResource",
            	      							lv_generalResource_12_0,
            	      							"org.xtext.mycsm.MyCsm.GeneralResource");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            this_END_13=(Token)match(input,RULE_END,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_13, grammarAccess.getCSMAccess().getENDTerminalRuleCall_11());
              		
            }
            otherlv_14=(Token)match(input,Scenarion_1,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_14, grammarAccess.getCSMAccess().getScenarionKeyword_12());
              		
            }
            this_BEGIN_15=(Token)match(input,RULE_BEGIN,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_15, grammarAccess.getCSMAccess().getBEGINTerminalRuleCall_13());
              		
            }
            // InternalMyCsmParser.g:200:3: ( (lv_scenarion_16_0= ruleScenarion ) )
            // InternalMyCsmParser.g:201:4: (lv_scenarion_16_0= ruleScenarion )
            {
            // InternalMyCsmParser.g:201:4: (lv_scenarion_16_0= ruleScenarion )
            // InternalMyCsmParser.g:202:5: lv_scenarion_16_0= ruleScenarion
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCSMAccess().getScenarionScenarionParserRuleCall_14_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_scenarion_16_0=ruleScenarion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCSMRule());
              					}
              					add(
              						current,
              						"scenarion",
              						lv_scenarion_16_0,
              						"org.xtext.mycsm.MyCsm.Scenarion");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyCsmParser.g:219:3: (otherlv_17= Comma ( (lv_scenarion_18_0= ruleScenarion ) ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==Comma) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalMyCsmParser.g:220:4: otherlv_17= Comma ( (lv_scenarion_18_0= ruleScenarion ) )
            	    {
            	    otherlv_17=(Token)match(input,Comma,FOLLOW_10); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_17, grammarAccess.getCSMAccess().getCommaKeyword_15_0());
            	      			
            	    }
            	    // InternalMyCsmParser.g:224:4: ( (lv_scenarion_18_0= ruleScenarion ) )
            	    // InternalMyCsmParser.g:225:5: (lv_scenarion_18_0= ruleScenarion )
            	    {
            	    // InternalMyCsmParser.g:225:5: (lv_scenarion_18_0= ruleScenarion )
            	    // InternalMyCsmParser.g:226:6: lv_scenarion_18_0= ruleScenarion
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCSMAccess().getScenarionScenarionParserRuleCall_15_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_scenarion_18_0=ruleScenarion();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCSMRule());
            	      						}
            	      						add(
            	      							current,
            	      							"scenarion",
            	      							lv_scenarion_18_0,
            	      							"org.xtext.mycsm.MyCsm.Scenarion");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            this_END_19=(Token)match(input,RULE_END,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_19, grammarAccess.getCSMAccess().getENDTerminalRuleCall_16());
              		
            }
            // InternalMyCsmParser.g:248:3: (otherlv_20= Message_1 this_BEGIN_21= RULE_BEGIN ( (lv_message_22_0= ruleMessage ) ) (otherlv_23= Comma ( (lv_message_24_0= ruleMessage ) ) )* this_END_25= RULE_END )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==Message_1) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // InternalMyCsmParser.g:249:4: otherlv_20= Message_1 this_BEGIN_21= RULE_BEGIN ( (lv_message_22_0= ruleMessage ) ) (otherlv_23= Comma ( (lv_message_24_0= ruleMessage ) ) )* this_END_25= RULE_END
                    {
                    otherlv_20=(Token)match(input,Message_1,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getCSMAccess().getMessageKeyword_17_0());
                      			
                    }
                    this_BEGIN_21=(Token)match(input,RULE_BEGIN,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_BEGIN_21, grammarAccess.getCSMAccess().getBEGINTerminalRuleCall_17_1());
                      			
                    }
                    // InternalMyCsmParser.g:257:4: ( (lv_message_22_0= ruleMessage ) )
                    // InternalMyCsmParser.g:258:5: (lv_message_22_0= ruleMessage )
                    {
                    // InternalMyCsmParser.g:258:5: (lv_message_22_0= ruleMessage )
                    // InternalMyCsmParser.g:259:6: lv_message_22_0= ruleMessage
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCSMAccess().getMessageMessageParserRuleCall_17_2_0());
                      					
                    }
                    pushFollow(FOLLOW_6);
                    lv_message_22_0=ruleMessage();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCSMRule());
                      						}
                      						add(
                      							current,
                      							"message",
                      							lv_message_22_0,
                      							"org.xtext.mycsm.MyCsm.Message");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:276:4: (otherlv_23= Comma ( (lv_message_24_0= ruleMessage ) ) )*
                    loop4:
                    do {
                        int alt4=2;
                        int LA4_0 = input.LA(1);

                        if ( (LA4_0==Comma) ) {
                            alt4=1;
                        }


                        switch (alt4) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:277:5: otherlv_23= Comma ( (lv_message_24_0= ruleMessage ) )
                    	    {
                    	    otherlv_23=(Token)match(input,Comma,FOLLOW_12); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_23, grammarAccess.getCSMAccess().getCommaKeyword_17_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:281:5: ( (lv_message_24_0= ruleMessage ) )
                    	    // InternalMyCsmParser.g:282:6: (lv_message_24_0= ruleMessage )
                    	    {
                    	    // InternalMyCsmParser.g:282:6: (lv_message_24_0= ruleMessage )
                    	    // InternalMyCsmParser.g:283:7: lv_message_24_0= ruleMessage
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getCSMAccess().getMessageMessageParserRuleCall_17_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_6);
                    	    lv_message_24_0=ruleMessage();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getCSMRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"message",
                    	      								lv_message_24_0,
                    	      								"org.xtext.mycsm.MyCsm.Message");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop4;
                        }
                    } while (true);

                    this_END_25=(Token)match(input,RULE_END,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_END_25, grammarAccess.getCSMAccess().getENDTerminalRuleCall_17_4());
                      			
                    }

                    }
                    break;

            }

            this_END_26=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_26, grammarAccess.getCSMAccess().getENDTerminalRuleCall_18());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCSM"


    // $ANTLR start "entryRuleStep"
    // InternalMyCsmParser.g:314:1: entryRuleStep returns [EObject current=null] : iv_ruleStep= ruleStep EOF ;
    public final EObject entryRuleStep() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStep = null;


        try {
            // InternalMyCsmParser.g:314:45: (iv_ruleStep= ruleStep EOF )
            // InternalMyCsmParser.g:315:2: iv_ruleStep= ruleStep EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStepRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStep=ruleStep();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStep; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStep"


    // $ANTLR start "ruleStep"
    // InternalMyCsmParser.g:321:1: ruleStep returns [EObject current=null] : (this_Start_0= ruleStart | this_Stop_1= ruleStop | this_ResourceAcquire_2= ruleResourceAcquire | this_ResourceRelease_3= ruleResourceRelease ) ;
    public final EObject ruleStep() throws RecognitionException {
        EObject current = null;

        EObject this_Start_0 = null;

        EObject this_Stop_1 = null;

        EObject this_ResourceAcquire_2 = null;

        EObject this_ResourceRelease_3 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:327:2: ( (this_Start_0= ruleStart | this_Stop_1= ruleStop | this_ResourceAcquire_2= ruleResourceAcquire | this_ResourceRelease_3= ruleResourceRelease ) )
            // InternalMyCsmParser.g:328:2: (this_Start_0= ruleStart | this_Stop_1= ruleStop | this_ResourceAcquire_2= ruleResourceAcquire | this_ResourceRelease_3= ruleResourceRelease )
            {
            // InternalMyCsmParser.g:328:2: (this_Start_0= ruleStart | this_Stop_1= ruleStop | this_ResourceAcquire_2= ruleResourceAcquire | this_ResourceRelease_3= ruleResourceRelease )
            int alt6=4;
            switch ( input.LA(1) ) {
            case Start:
                {
                alt6=1;
                }
                break;
            case Stop:
                {
                alt6=2;
                }
                break;
            case ResourceAcquire:
                {
                alt6=3;
                }
                break;
            case ResourceRelease:
                {
                alt6=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // InternalMyCsmParser.g:329:3: this_Start_0= ruleStart
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStepAccess().getStartParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Start_0=ruleStart();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Start_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:338:3: this_Stop_1= ruleStop
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStepAccess().getStopParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Stop_1=ruleStop();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Stop_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyCsmParser.g:347:3: this_ResourceAcquire_2= ruleResourceAcquire
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStepAccess().getResourceAcquireParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ResourceAcquire_2=ruleResourceAcquire();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ResourceAcquire_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyCsmParser.g:356:3: this_ResourceRelease_3= ruleResourceRelease
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStepAccess().getResourceReleaseParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ResourceRelease_3=ruleResourceRelease();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ResourceRelease_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStep"


    // $ANTLR start "entryRuleGeneralResource"
    // InternalMyCsmParser.g:368:1: entryRuleGeneralResource returns [EObject current=null] : iv_ruleGeneralResource= ruleGeneralResource EOF ;
    public final EObject entryRuleGeneralResource() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGeneralResource = null;


        try {
            // InternalMyCsmParser.g:368:56: (iv_ruleGeneralResource= ruleGeneralResource EOF )
            // InternalMyCsmParser.g:369:2: iv_ruleGeneralResource= ruleGeneralResource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGeneralResourceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGeneralResource=ruleGeneralResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGeneralResource; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGeneralResource"


    // $ANTLR start "ruleGeneralResource"
    // InternalMyCsmParser.g:375:1: ruleGeneralResource returns [EObject current=null] : (this_Component_0= ruleComponent | this_ProcessingResource_1= ruleProcessingResource | this_ExternalService_2= ruleExternalService ) ;
    public final EObject ruleGeneralResource() throws RecognitionException {
        EObject current = null;

        EObject this_Component_0 = null;

        EObject this_ProcessingResource_1 = null;

        EObject this_ExternalService_2 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:381:2: ( (this_Component_0= ruleComponent | this_ProcessingResource_1= ruleProcessingResource | this_ExternalService_2= ruleExternalService ) )
            // InternalMyCsmParser.g:382:2: (this_Component_0= ruleComponent | this_ProcessingResource_1= ruleProcessingResource | this_ExternalService_2= ruleExternalService )
            {
            // InternalMyCsmParser.g:382:2: (this_Component_0= ruleComponent | this_ProcessingResource_1= ruleProcessingResource | this_ExternalService_2= ruleExternalService )
            int alt7=3;
            switch ( input.LA(1) ) {
            case Component:
                {
                alt7=1;
                }
                break;
            case ProcessingResource:
                {
                alt7=2;
                }
                break;
            case ExternalService:
                {
                alt7=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // InternalMyCsmParser.g:383:3: this_Component_0= ruleComponent
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getGeneralResourceAccess().getComponentParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Component_0=ruleComponent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Component_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:392:3: this_ProcessingResource_1= ruleProcessingResource
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getGeneralResourceAccess().getProcessingResourceParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ProcessingResource_1=ruleProcessingResource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ProcessingResource_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyCsmParser.g:401:3: this_ExternalService_2= ruleExternalService
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getGeneralResourceAccess().getExternalServiceParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExternalService_2=ruleExternalService();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExternalService_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGeneralResource"


    // $ANTLR start "entryRulePathConnection"
    // InternalMyCsmParser.g:413:1: entryRulePathConnection returns [EObject current=null] : iv_rulePathConnection= rulePathConnection EOF ;
    public final EObject entryRulePathConnection() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePathConnection = null;


        try {
            // InternalMyCsmParser.g:413:55: (iv_rulePathConnection= rulePathConnection EOF )
            // InternalMyCsmParser.g:414:2: iv_rulePathConnection= rulePathConnection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathConnectionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePathConnection=rulePathConnection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathConnection; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathConnection"


    // $ANTLR start "rulePathConnection"
    // InternalMyCsmParser.g:420:1: rulePathConnection returns [EObject current=null] : (this_Join_0= ruleJoin | this_Fork_1= ruleFork | this_Merge_2= ruleMerge | this_Branch_3= ruleBranch | this_Seqence_4= ruleSeqence ) ;
    public final EObject rulePathConnection() throws RecognitionException {
        EObject current = null;

        EObject this_Join_0 = null;

        EObject this_Fork_1 = null;

        EObject this_Merge_2 = null;

        EObject this_Branch_3 = null;

        EObject this_Seqence_4 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:426:2: ( (this_Join_0= ruleJoin | this_Fork_1= ruleFork | this_Merge_2= ruleMerge | this_Branch_3= ruleBranch | this_Seqence_4= ruleSeqence ) )
            // InternalMyCsmParser.g:427:2: (this_Join_0= ruleJoin | this_Fork_1= ruleFork | this_Merge_2= ruleMerge | this_Branch_3= ruleBranch | this_Seqence_4= ruleSeqence )
            {
            // InternalMyCsmParser.g:427:2: (this_Join_0= ruleJoin | this_Fork_1= ruleFork | this_Merge_2= ruleMerge | this_Branch_3= ruleBranch | this_Seqence_4= ruleSeqence )
            int alt8=5;
            switch ( input.LA(1) ) {
            case Join:
                {
                alt8=1;
                }
                break;
            case Fork:
                {
                alt8=2;
                }
                break;
            case Merge:
                {
                alt8=3;
                }
                break;
            case Branch:
                {
                alt8=4;
                }
                break;
            case Seqence:
                {
                alt8=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // InternalMyCsmParser.g:428:3: this_Join_0= ruleJoin
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPathConnectionAccess().getJoinParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Join_0=ruleJoin();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Join_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:437:3: this_Fork_1= ruleFork
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPathConnectionAccess().getForkParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Fork_1=ruleFork();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Fork_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyCsmParser.g:446:3: this_Merge_2= ruleMerge
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPathConnectionAccess().getMergeParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Merge_2=ruleMerge();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Merge_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyCsmParser.g:455:3: this_Branch_3= ruleBranch
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPathConnectionAccess().getBranchParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Branch_3=ruleBranch();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Branch_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMyCsmParser.g:464:3: this_Seqence_4= ruleSeqence
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPathConnectionAccess().getSeqenceParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Seqence_4=ruleSeqence();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Seqence_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathConnection"


    // $ANTLR start "entryRuleScenarion"
    // InternalMyCsmParser.g:476:1: entryRuleScenarion returns [EObject current=null] : iv_ruleScenarion= ruleScenarion EOF ;
    public final EObject entryRuleScenarion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScenarion = null;


        try {
            // InternalMyCsmParser.g:476:50: (iv_ruleScenarion= ruleScenarion EOF )
            // InternalMyCsmParser.g:477:2: iv_ruleScenarion= ruleScenarion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScenarionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleScenarion=ruleScenarion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScenarion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScenarion"


    // $ANTLR start "ruleScenarion"
    // InternalMyCsmParser.g:483:1: ruleScenarion returns [EObject current=null] : (otherlv_0= Scenarion this_BEGIN_1= RULE_BEGIN otherlv_2= Root otherlv_3= LeftParenthesis ( ( ruleEString ) ) (otherlv_5= Comma ( ( ruleEString ) ) )* otherlv_7= RightParenthesis otherlv_8= Step this_BEGIN_9= RULE_BEGIN ( (lv_step_10_0= ruleStep ) ) (otherlv_11= Comma ( (lv_step_12_0= ruleStep ) ) )* this_END_13= RULE_END (otherlv_14= Pathconnection this_BEGIN_15= RULE_BEGIN ( (lv_pathconnection_16_0= rulePathConnection ) ) (otherlv_17= Comma ( (lv_pathconnection_18_0= rulePathConnection ) ) )* this_END_19= RULE_END )? this_END_20= RULE_END ) ;
    public final EObject ruleScenarion() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_BEGIN_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token this_BEGIN_9=null;
        Token otherlv_11=null;
        Token this_END_13=null;
        Token otherlv_14=null;
        Token this_BEGIN_15=null;
        Token otherlv_17=null;
        Token this_END_19=null;
        Token this_END_20=null;
        EObject lv_step_10_0 = null;

        EObject lv_step_12_0 = null;

        EObject lv_pathconnection_16_0 = null;

        EObject lv_pathconnection_18_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:489:2: ( (otherlv_0= Scenarion this_BEGIN_1= RULE_BEGIN otherlv_2= Root otherlv_3= LeftParenthesis ( ( ruleEString ) ) (otherlv_5= Comma ( ( ruleEString ) ) )* otherlv_7= RightParenthesis otherlv_8= Step this_BEGIN_9= RULE_BEGIN ( (lv_step_10_0= ruleStep ) ) (otherlv_11= Comma ( (lv_step_12_0= ruleStep ) ) )* this_END_13= RULE_END (otherlv_14= Pathconnection this_BEGIN_15= RULE_BEGIN ( (lv_pathconnection_16_0= rulePathConnection ) ) (otherlv_17= Comma ( (lv_pathconnection_18_0= rulePathConnection ) ) )* this_END_19= RULE_END )? this_END_20= RULE_END ) )
            // InternalMyCsmParser.g:490:2: (otherlv_0= Scenarion this_BEGIN_1= RULE_BEGIN otherlv_2= Root otherlv_3= LeftParenthesis ( ( ruleEString ) ) (otherlv_5= Comma ( ( ruleEString ) ) )* otherlv_7= RightParenthesis otherlv_8= Step this_BEGIN_9= RULE_BEGIN ( (lv_step_10_0= ruleStep ) ) (otherlv_11= Comma ( (lv_step_12_0= ruleStep ) ) )* this_END_13= RULE_END (otherlv_14= Pathconnection this_BEGIN_15= RULE_BEGIN ( (lv_pathconnection_16_0= rulePathConnection ) ) (otherlv_17= Comma ( (lv_pathconnection_18_0= rulePathConnection ) ) )* this_END_19= RULE_END )? this_END_20= RULE_END )
            {
            // InternalMyCsmParser.g:490:2: (otherlv_0= Scenarion this_BEGIN_1= RULE_BEGIN otherlv_2= Root otherlv_3= LeftParenthesis ( ( ruleEString ) ) (otherlv_5= Comma ( ( ruleEString ) ) )* otherlv_7= RightParenthesis otherlv_8= Step this_BEGIN_9= RULE_BEGIN ( (lv_step_10_0= ruleStep ) ) (otherlv_11= Comma ( (lv_step_12_0= ruleStep ) ) )* this_END_13= RULE_END (otherlv_14= Pathconnection this_BEGIN_15= RULE_BEGIN ( (lv_pathconnection_16_0= rulePathConnection ) ) (otherlv_17= Comma ( (lv_pathconnection_18_0= rulePathConnection ) ) )* this_END_19= RULE_END )? this_END_20= RULE_END )
            // InternalMyCsmParser.g:491:3: otherlv_0= Scenarion this_BEGIN_1= RULE_BEGIN otherlv_2= Root otherlv_3= LeftParenthesis ( ( ruleEString ) ) (otherlv_5= Comma ( ( ruleEString ) ) )* otherlv_7= RightParenthesis otherlv_8= Step this_BEGIN_9= RULE_BEGIN ( (lv_step_10_0= ruleStep ) ) (otherlv_11= Comma ( (lv_step_12_0= ruleStep ) ) )* this_END_13= RULE_END (otherlv_14= Pathconnection this_BEGIN_15= RULE_BEGIN ( (lv_pathconnection_16_0= rulePathConnection ) ) (otherlv_17= Comma ( (lv_pathconnection_18_0= rulePathConnection ) ) )* this_END_19= RULE_END )? this_END_20= RULE_END
            {
            otherlv_0=(Token)match(input,Scenarion,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getScenarionAccess().getScenarionKeyword_0());
              		
            }
            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getScenarionAccess().getBEGINTerminalRuleCall_1());
              		
            }
            otherlv_2=(Token)match(input,Root,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScenarionAccess().getRootKeyword_2());
              		
            }
            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getScenarionAccess().getLeftParenthesisKeyword_3());
              		
            }
            // InternalMyCsmParser.g:507:3: ( ( ruleEString ) )
            // InternalMyCsmParser.g:508:4: ( ruleEString )
            {
            // InternalMyCsmParser.g:508:4: ( ruleEString )
            // InternalMyCsmParser.g:509:5: ruleEString
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getScenarionRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScenarionAccess().getRootStartCrossReference_4_0());
              				
            }
            pushFollow(FOLLOW_17);
            ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyCsmParser.g:523:3: (otherlv_5= Comma ( ( ruleEString ) ) )*
            loop9:
            do {
                int alt9=2;
                int LA9_0 = input.LA(1);

                if ( (LA9_0==Comma) ) {
                    alt9=1;
                }


                switch (alt9) {
            	case 1 :
            	    // InternalMyCsmParser.g:524:4: otherlv_5= Comma ( ( ruleEString ) )
            	    {
            	    otherlv_5=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getScenarionAccess().getCommaKeyword_5_0());
            	      			
            	    }
            	    // InternalMyCsmParser.g:528:4: ( ( ruleEString ) )
            	    // InternalMyCsmParser.g:529:5: ( ruleEString )
            	    {
            	    // InternalMyCsmParser.g:529:5: ( ruleEString )
            	    // InternalMyCsmParser.g:530:6: ruleEString
            	    {
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getScenarionRule());
            	      						}
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScenarionAccess().getRootStartCrossReference_5_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_17);
            	    ruleEString();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop9;
                }
            } while (true);

            otherlv_7=(Token)match(input,RightParenthesis,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getScenarionAccess().getRightParenthesisKeyword_6());
              		
            }
            otherlv_8=(Token)match(input,Step,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getScenarionAccess().getStepKeyword_7());
              		
            }
            this_BEGIN_9=(Token)match(input,RULE_BEGIN,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_9, grammarAccess.getScenarionAccess().getBEGINTerminalRuleCall_8());
              		
            }
            // InternalMyCsmParser.g:557:3: ( (lv_step_10_0= ruleStep ) )
            // InternalMyCsmParser.g:558:4: (lv_step_10_0= ruleStep )
            {
            // InternalMyCsmParser.g:558:4: (lv_step_10_0= ruleStep )
            // InternalMyCsmParser.g:559:5: lv_step_10_0= ruleStep
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScenarionAccess().getStepStepParserRuleCall_9_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_step_10_0=ruleStep();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScenarionRule());
              					}
              					add(
              						current,
              						"step",
              						lv_step_10_0,
              						"org.xtext.mycsm.MyCsm.Step");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyCsmParser.g:576:3: (otherlv_11= Comma ( (lv_step_12_0= ruleStep ) ) )*
            loop10:
            do {
                int alt10=2;
                int LA10_0 = input.LA(1);

                if ( (LA10_0==Comma) ) {
                    alt10=1;
                }


                switch (alt10) {
            	case 1 :
            	    // InternalMyCsmParser.g:577:4: otherlv_11= Comma ( (lv_step_12_0= ruleStep ) )
            	    {
            	    otherlv_11=(Token)match(input,Comma,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_11, grammarAccess.getScenarionAccess().getCommaKeyword_10_0());
            	      			
            	    }
            	    // InternalMyCsmParser.g:581:4: ( (lv_step_12_0= ruleStep ) )
            	    // InternalMyCsmParser.g:582:5: (lv_step_12_0= ruleStep )
            	    {
            	    // InternalMyCsmParser.g:582:5: (lv_step_12_0= ruleStep )
            	    // InternalMyCsmParser.g:583:6: lv_step_12_0= ruleStep
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScenarionAccess().getStepStepParserRuleCall_10_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_step_12_0=ruleStep();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScenarionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"step",
            	      							lv_step_12_0,
            	      							"org.xtext.mycsm.MyCsm.Step");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop10;
                }
            } while (true);

            this_END_13=(Token)match(input,RULE_END,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_13, grammarAccess.getScenarionAccess().getENDTerminalRuleCall_11());
              		
            }
            // InternalMyCsmParser.g:605:3: (otherlv_14= Pathconnection this_BEGIN_15= RULE_BEGIN ( (lv_pathconnection_16_0= rulePathConnection ) ) (otherlv_17= Comma ( (lv_pathconnection_18_0= rulePathConnection ) ) )* this_END_19= RULE_END )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==Pathconnection) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalMyCsmParser.g:606:4: otherlv_14= Pathconnection this_BEGIN_15= RULE_BEGIN ( (lv_pathconnection_16_0= rulePathConnection ) ) (otherlv_17= Comma ( (lv_pathconnection_18_0= rulePathConnection ) ) )* this_END_19= RULE_END
                    {
                    otherlv_14=(Token)match(input,Pathconnection,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getScenarionAccess().getPathconnectionKeyword_12_0());
                      			
                    }
                    this_BEGIN_15=(Token)match(input,RULE_BEGIN,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_BEGIN_15, grammarAccess.getScenarionAccess().getBEGINTerminalRuleCall_12_1());
                      			
                    }
                    // InternalMyCsmParser.g:614:4: ( (lv_pathconnection_16_0= rulePathConnection ) )
                    // InternalMyCsmParser.g:615:5: (lv_pathconnection_16_0= rulePathConnection )
                    {
                    // InternalMyCsmParser.g:615:5: (lv_pathconnection_16_0= rulePathConnection )
                    // InternalMyCsmParser.g:616:6: lv_pathconnection_16_0= rulePathConnection
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScenarionAccess().getPathconnectionPathConnectionParserRuleCall_12_2_0());
                      					
                    }
                    pushFollow(FOLLOW_6);
                    lv_pathconnection_16_0=rulePathConnection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScenarionRule());
                      						}
                      						add(
                      							current,
                      							"pathconnection",
                      							lv_pathconnection_16_0,
                      							"org.xtext.mycsm.MyCsm.PathConnection");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:633:4: (otherlv_17= Comma ( (lv_pathconnection_18_0= rulePathConnection ) ) )*
                    loop11:
                    do {
                        int alt11=2;
                        int LA11_0 = input.LA(1);

                        if ( (LA11_0==Comma) ) {
                            alt11=1;
                        }


                        switch (alt11) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:634:5: otherlv_17= Comma ( (lv_pathconnection_18_0= rulePathConnection ) )
                    	    {
                    	    otherlv_17=(Token)match(input,Comma,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_17, grammarAccess.getScenarionAccess().getCommaKeyword_12_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:638:5: ( (lv_pathconnection_18_0= rulePathConnection ) )
                    	    // InternalMyCsmParser.g:639:6: (lv_pathconnection_18_0= rulePathConnection )
                    	    {
                    	    // InternalMyCsmParser.g:639:6: (lv_pathconnection_18_0= rulePathConnection )
                    	    // InternalMyCsmParser.g:640:7: lv_pathconnection_18_0= rulePathConnection
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getScenarionAccess().getPathconnectionPathConnectionParserRuleCall_12_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_6);
                    	    lv_pathconnection_18_0=rulePathConnection();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getScenarionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"pathconnection",
                    	      								lv_pathconnection_18_0,
                    	      								"org.xtext.mycsm.MyCsm.PathConnection");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop11;
                        }
                    } while (true);

                    this_END_19=(Token)match(input,RULE_END,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_END_19, grammarAccess.getScenarionAccess().getENDTerminalRuleCall_12_4());
                      			
                    }

                    }
                    break;

            }

            this_END_20=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_20, grammarAccess.getScenarionAccess().getENDTerminalRuleCall_13());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScenarion"


    // $ANTLR start "entryRuleMessage"
    // InternalMyCsmParser.g:671:1: entryRuleMessage returns [EObject current=null] : iv_ruleMessage= ruleMessage EOF ;
    public final EObject entryRuleMessage() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMessage = null;


        try {
            // InternalMyCsmParser.g:671:48: (iv_ruleMessage= ruleMessage EOF )
            // InternalMyCsmParser.g:672:2: iv_ruleMessage= ruleMessage EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMessageRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMessage=ruleMessage();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMessage; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMessage"


    // $ANTLR start "ruleMessage"
    // InternalMyCsmParser.g:678:1: ruleMessage returns [EObject current=null] : ( () otherlv_1= Message ( (lv_name_2_0= ruleEString ) ) ) ;
    public final EObject ruleMessage() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:684:2: ( ( () otherlv_1= Message ( (lv_name_2_0= ruleEString ) ) ) )
            // InternalMyCsmParser.g:685:2: ( () otherlv_1= Message ( (lv_name_2_0= ruleEString ) ) )
            {
            // InternalMyCsmParser.g:685:2: ( () otherlv_1= Message ( (lv_name_2_0= ruleEString ) ) )
            // InternalMyCsmParser.g:686:3: () otherlv_1= Message ( (lv_name_2_0= ruleEString ) )
            {
            // InternalMyCsmParser.g:686:3: ()
            // InternalMyCsmParser.g:687:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMessageAccess().getMessageAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Message,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMessageAccess().getMessageKeyword_1());
              		
            }
            // InternalMyCsmParser.g:697:3: ( (lv_name_2_0= ruleEString ) )
            // InternalMyCsmParser.g:698:4: (lv_name_2_0= ruleEString )
            {
            // InternalMyCsmParser.g:698:4: (lv_name_2_0= ruleEString )
            // InternalMyCsmParser.g:699:5: lv_name_2_0= ruleEString
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMessageAccess().getNameEStringParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_2_0=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMessageRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.mycsm.MyCsm.EString");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMessage"


    // $ANTLR start "entryRuleEString"
    // InternalMyCsmParser.g:720:1: entryRuleEString returns [String current=null] : iv_ruleEString= ruleEString EOF ;
    public final String entryRuleEString() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEString = null;


        try {
            // InternalMyCsmParser.g:720:47: (iv_ruleEString= ruleEString EOF )
            // InternalMyCsmParser.g:721:2: iv_ruleEString= ruleEString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEString=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEString.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEString"


    // $ANTLR start "ruleEString"
    // InternalMyCsmParser.g:727:1: ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID ) ;
    public final AntlrDatatypeRuleToken ruleEString() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_ID_1=null;


        	enterRule();

        try {
            // InternalMyCsmParser.g:733:2: ( (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID ) )
            // InternalMyCsmParser.g:734:2: (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID )
            {
            // InternalMyCsmParser.g:734:2: (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==RULE_STRING) ) {
                alt13=1;
            }
            else if ( (LA13_0==RULE_ID) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalMyCsmParser.g:735:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:743:3: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEString"


    // $ANTLR start "entryRuleWorkload"
    // InternalMyCsmParser.g:754:1: entryRuleWorkload returns [EObject current=null] : iv_ruleWorkload= ruleWorkload EOF ;
    public final EObject entryRuleWorkload() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWorkload = null;


        try {
            // InternalMyCsmParser.g:754:49: (iv_ruleWorkload= ruleWorkload EOF )
            // InternalMyCsmParser.g:755:2: iv_ruleWorkload= ruleWorkload EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWorkloadRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWorkload=ruleWorkload();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWorkload; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWorkload"


    // $ANTLR start "ruleWorkload"
    // InternalMyCsmParser.g:761:1: ruleWorkload returns [EObject current=null] : ( () otherlv_1= Workload this_BEGIN_2= RULE_BEGIN (otherlv_3= Value ( (lv_value_4_0= ruleEInt ) ) )? this_END_5= RULE_END ) ;
    public final EObject ruleWorkload() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_2=null;
        Token otherlv_3=null;
        Token this_END_5=null;
        AntlrDatatypeRuleToken lv_value_4_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:767:2: ( ( () otherlv_1= Workload this_BEGIN_2= RULE_BEGIN (otherlv_3= Value ( (lv_value_4_0= ruleEInt ) ) )? this_END_5= RULE_END ) )
            // InternalMyCsmParser.g:768:2: ( () otherlv_1= Workload this_BEGIN_2= RULE_BEGIN (otherlv_3= Value ( (lv_value_4_0= ruleEInt ) ) )? this_END_5= RULE_END )
            {
            // InternalMyCsmParser.g:768:2: ( () otherlv_1= Workload this_BEGIN_2= RULE_BEGIN (otherlv_3= Value ( (lv_value_4_0= ruleEInt ) ) )? this_END_5= RULE_END )
            // InternalMyCsmParser.g:769:3: () otherlv_1= Workload this_BEGIN_2= RULE_BEGIN (otherlv_3= Value ( (lv_value_4_0= ruleEInt ) ) )? this_END_5= RULE_END
            {
            // InternalMyCsmParser.g:769:3: ()
            // InternalMyCsmParser.g:770:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getWorkloadAccess().getWorkloadAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Workload,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getWorkloadAccess().getWorkloadKeyword_1());
              		
            }
            this_BEGIN_2=(Token)match(input,RULE_BEGIN,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_2, grammarAccess.getWorkloadAccess().getBEGINTerminalRuleCall_2());
              		
            }
            // InternalMyCsmParser.g:784:3: (otherlv_3= Value ( (lv_value_4_0= ruleEInt ) ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==Value) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalMyCsmParser.g:785:4: otherlv_3= Value ( (lv_value_4_0= ruleEInt ) )
                    {
                    otherlv_3=(Token)match(input,Value,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getWorkloadAccess().getValueKeyword_3_0());
                      			
                    }
                    // InternalMyCsmParser.g:789:4: ( (lv_value_4_0= ruleEInt ) )
                    // InternalMyCsmParser.g:790:5: (lv_value_4_0= ruleEInt )
                    {
                    // InternalMyCsmParser.g:790:5: (lv_value_4_0= ruleEInt )
                    // InternalMyCsmParser.g:791:6: lv_value_4_0= ruleEInt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getWorkloadAccess().getValueEIntParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_13);
                    lv_value_4_0=ruleEInt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getWorkloadRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_4_0,
                      							"org.xtext.mycsm.MyCsm.EInt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            this_END_5=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_5, grammarAccess.getWorkloadAccess().getENDTerminalRuleCall_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWorkload"


    // $ANTLR start "entryRuleStart"
    // InternalMyCsmParser.g:817:1: entryRuleStart returns [EObject current=null] : iv_ruleStart= ruleStart EOF ;
    public final EObject entryRuleStart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStart = null;


        try {
            // InternalMyCsmParser.g:817:46: (iv_ruleStart= ruleStart EOF )
            // InternalMyCsmParser.g:818:2: iv_ruleStart= ruleStart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStartRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStart=ruleStart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStart; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStart"


    // $ANTLR start "ruleStart"
    // InternalMyCsmParser.g:824:1: ruleStart returns [EObject current=null] : ( () otherlv_1= Start ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= PostPath ( ( ruleEString ) ) )? (otherlv_6= PrePath ( ( ruleEString ) ) )? (otherlv_8= ActiveResource ( ( ruleEString ) ) )? (otherlv_10= Workload_1 this_BEGIN_11= RULE_BEGIN ( (lv_workload_12_0= ruleWorkload ) ) (otherlv_13= Comma ( (lv_workload_14_0= ruleWorkload ) ) )* this_END_15= RULE_END )? this_END_16= RULE_END ) ;
    public final EObject ruleStart() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token this_BEGIN_11=null;
        Token otherlv_13=null;
        Token this_END_15=null;
        Token this_END_16=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_workload_12_0 = null;

        EObject lv_workload_14_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:830:2: ( ( () otherlv_1= Start ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= PostPath ( ( ruleEString ) ) )? (otherlv_6= PrePath ( ( ruleEString ) ) )? (otherlv_8= ActiveResource ( ( ruleEString ) ) )? (otherlv_10= Workload_1 this_BEGIN_11= RULE_BEGIN ( (lv_workload_12_0= ruleWorkload ) ) (otherlv_13= Comma ( (lv_workload_14_0= ruleWorkload ) ) )* this_END_15= RULE_END )? this_END_16= RULE_END ) )
            // InternalMyCsmParser.g:831:2: ( () otherlv_1= Start ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= PostPath ( ( ruleEString ) ) )? (otherlv_6= PrePath ( ( ruleEString ) ) )? (otherlv_8= ActiveResource ( ( ruleEString ) ) )? (otherlv_10= Workload_1 this_BEGIN_11= RULE_BEGIN ( (lv_workload_12_0= ruleWorkload ) ) (otherlv_13= Comma ( (lv_workload_14_0= ruleWorkload ) ) )* this_END_15= RULE_END )? this_END_16= RULE_END )
            {
            // InternalMyCsmParser.g:831:2: ( () otherlv_1= Start ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= PostPath ( ( ruleEString ) ) )? (otherlv_6= PrePath ( ( ruleEString ) ) )? (otherlv_8= ActiveResource ( ( ruleEString ) ) )? (otherlv_10= Workload_1 this_BEGIN_11= RULE_BEGIN ( (lv_workload_12_0= ruleWorkload ) ) (otherlv_13= Comma ( (lv_workload_14_0= ruleWorkload ) ) )* this_END_15= RULE_END )? this_END_16= RULE_END )
            // InternalMyCsmParser.g:832:3: () otherlv_1= Start ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= PostPath ( ( ruleEString ) ) )? (otherlv_6= PrePath ( ( ruleEString ) ) )? (otherlv_8= ActiveResource ( ( ruleEString ) ) )? (otherlv_10= Workload_1 this_BEGIN_11= RULE_BEGIN ( (lv_workload_12_0= ruleWorkload ) ) (otherlv_13= Comma ( (lv_workload_14_0= ruleWorkload ) ) )* this_END_15= RULE_END )? this_END_16= RULE_END
            {
            // InternalMyCsmParser.g:832:3: ()
            // InternalMyCsmParser.g:833:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStartAccess().getStartAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Start,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStartAccess().getStartKeyword_1());
              		
            }
            // InternalMyCsmParser.g:843:3: ( (lv_name_2_0= ruleEString ) )
            // InternalMyCsmParser.g:844:4: (lv_name_2_0= ruleEString )
            {
            // InternalMyCsmParser.g:844:4: (lv_name_2_0= ruleEString )
            // InternalMyCsmParser.g:845:5: lv_name_2_0= ruleEString
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStartAccess().getNameEStringParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_name_2_0=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStartRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.mycsm.MyCsm.EString");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            this_BEGIN_3=(Token)match(input,RULE_BEGIN,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_3, grammarAccess.getStartAccess().getBEGINTerminalRuleCall_3());
              		
            }
            // InternalMyCsmParser.g:866:3: (otherlv_4= PostPath ( ( ruleEString ) ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==PostPath) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalMyCsmParser.g:867:4: otherlv_4= PostPath ( ( ruleEString ) )
                    {
                    otherlv_4=(Token)match(input,PostPath,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getStartAccess().getPostPathKeyword_4_0());
                      			
                    }
                    // InternalMyCsmParser.g:871:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:872:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:872:5: ( ruleEString )
                    // InternalMyCsmParser.g:873:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStartRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStartAccess().getPostPathPathConnectionCrossReference_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_23);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:888:3: (otherlv_6= PrePath ( ( ruleEString ) ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==PrePath) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // InternalMyCsmParser.g:889:4: otherlv_6= PrePath ( ( ruleEString ) )
                    {
                    otherlv_6=(Token)match(input,PrePath,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getStartAccess().getPrePathKeyword_5_0());
                      			
                    }
                    // InternalMyCsmParser.g:893:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:894:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:894:5: ( ruleEString )
                    // InternalMyCsmParser.g:895:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStartRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStartAccess().getPrePathPathConnectionCrossReference_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_24);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:910:3: (otherlv_8= ActiveResource ( ( ruleEString ) ) )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==ActiveResource) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // InternalMyCsmParser.g:911:4: otherlv_8= ActiveResource ( ( ruleEString ) )
                    {
                    otherlv_8=(Token)match(input,ActiveResource,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getStartAccess().getActiveResourceKeyword_6_0());
                      			
                    }
                    // InternalMyCsmParser.g:915:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:916:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:916:5: ( ruleEString )
                    // InternalMyCsmParser.g:917:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStartRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStartAccess().getActiveResourceActiveResourceCrossReference_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:932:3: (otherlv_10= Workload_1 this_BEGIN_11= RULE_BEGIN ( (lv_workload_12_0= ruleWorkload ) ) (otherlv_13= Comma ( (lv_workload_14_0= ruleWorkload ) ) )* this_END_15= RULE_END )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==Workload_1) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalMyCsmParser.g:933:4: otherlv_10= Workload_1 this_BEGIN_11= RULE_BEGIN ( (lv_workload_12_0= ruleWorkload ) ) (otherlv_13= Comma ( (lv_workload_14_0= ruleWorkload ) ) )* this_END_15= RULE_END
                    {
                    otherlv_10=(Token)match(input,Workload_1,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getStartAccess().getWorkloadKeyword_7_0());
                      			
                    }
                    this_BEGIN_11=(Token)match(input,RULE_BEGIN,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_BEGIN_11, grammarAccess.getStartAccess().getBEGINTerminalRuleCall_7_1());
                      			
                    }
                    // InternalMyCsmParser.g:941:4: ( (lv_workload_12_0= ruleWorkload ) )
                    // InternalMyCsmParser.g:942:5: (lv_workload_12_0= ruleWorkload )
                    {
                    // InternalMyCsmParser.g:942:5: (lv_workload_12_0= ruleWorkload )
                    // InternalMyCsmParser.g:943:6: lv_workload_12_0= ruleWorkload
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStartAccess().getWorkloadWorkloadParserRuleCall_7_2_0());
                      					
                    }
                    pushFollow(FOLLOW_6);
                    lv_workload_12_0=ruleWorkload();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStartRule());
                      						}
                      						add(
                      							current,
                      							"workload",
                      							lv_workload_12_0,
                      							"org.xtext.mycsm.MyCsm.Workload");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:960:4: (otherlv_13= Comma ( (lv_workload_14_0= ruleWorkload ) ) )*
                    loop18:
                    do {
                        int alt18=2;
                        int LA18_0 = input.LA(1);

                        if ( (LA18_0==Comma) ) {
                            alt18=1;
                        }


                        switch (alt18) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:961:5: otherlv_13= Comma ( (lv_workload_14_0= ruleWorkload ) )
                    	    {
                    	    otherlv_13=(Token)match(input,Comma,FOLLOW_26); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_13, grammarAccess.getStartAccess().getCommaKeyword_7_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:965:5: ( (lv_workload_14_0= ruleWorkload ) )
                    	    // InternalMyCsmParser.g:966:6: (lv_workload_14_0= ruleWorkload )
                    	    {
                    	    // InternalMyCsmParser.g:966:6: (lv_workload_14_0= ruleWorkload )
                    	    // InternalMyCsmParser.g:967:7: lv_workload_14_0= ruleWorkload
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getStartAccess().getWorkloadWorkloadParserRuleCall_7_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_6);
                    	    lv_workload_14_0=ruleWorkload();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getStartRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"workload",
                    	      								lv_workload_14_0,
                    	      								"org.xtext.mycsm.MyCsm.Workload");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop18;
                        }
                    } while (true);

                    this_END_15=(Token)match(input,RULE_END,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_END_15, grammarAccess.getStartAccess().getENDTerminalRuleCall_7_4());
                      			
                    }

                    }
                    break;

            }

            this_END_16=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_16, grammarAccess.getStartAccess().getENDTerminalRuleCall_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStart"


    // $ANTLR start "entryRuleStop"
    // InternalMyCsmParser.g:998:1: entryRuleStop returns [EObject current=null] : iv_ruleStop= ruleStop EOF ;
    public final EObject entryRuleStop() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStop = null;


        try {
            // InternalMyCsmParser.g:998:45: (iv_ruleStop= ruleStop EOF )
            // InternalMyCsmParser.g:999:2: iv_ruleStop= ruleStop EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStopRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStop=ruleStop();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStop; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStop"


    // $ANTLR start "ruleStop"
    // InternalMyCsmParser.g:1005:1: ruleStop returns [EObject current=null] : ( () otherlv_1= Stop ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= PostPath ( ( ruleEString ) ) )? (otherlv_6= PrePath ( ( ruleEString ) ) )? (otherlv_8= ActiveResource ( ( ruleEString ) ) )? (otherlv_10= Workload_1 this_BEGIN_11= RULE_BEGIN ( (lv_workload_12_0= ruleWorkload ) ) (otherlv_13= Comma ( (lv_workload_14_0= ruleWorkload ) ) )* this_END_15= RULE_END )? this_END_16= RULE_END ) ;
    public final EObject ruleStop() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token this_BEGIN_11=null;
        Token otherlv_13=null;
        Token this_END_15=null;
        Token this_END_16=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_workload_12_0 = null;

        EObject lv_workload_14_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:1011:2: ( ( () otherlv_1= Stop ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= PostPath ( ( ruleEString ) ) )? (otherlv_6= PrePath ( ( ruleEString ) ) )? (otherlv_8= ActiveResource ( ( ruleEString ) ) )? (otherlv_10= Workload_1 this_BEGIN_11= RULE_BEGIN ( (lv_workload_12_0= ruleWorkload ) ) (otherlv_13= Comma ( (lv_workload_14_0= ruleWorkload ) ) )* this_END_15= RULE_END )? this_END_16= RULE_END ) )
            // InternalMyCsmParser.g:1012:2: ( () otherlv_1= Stop ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= PostPath ( ( ruleEString ) ) )? (otherlv_6= PrePath ( ( ruleEString ) ) )? (otherlv_8= ActiveResource ( ( ruleEString ) ) )? (otherlv_10= Workload_1 this_BEGIN_11= RULE_BEGIN ( (lv_workload_12_0= ruleWorkload ) ) (otherlv_13= Comma ( (lv_workload_14_0= ruleWorkload ) ) )* this_END_15= RULE_END )? this_END_16= RULE_END )
            {
            // InternalMyCsmParser.g:1012:2: ( () otherlv_1= Stop ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= PostPath ( ( ruleEString ) ) )? (otherlv_6= PrePath ( ( ruleEString ) ) )? (otherlv_8= ActiveResource ( ( ruleEString ) ) )? (otherlv_10= Workload_1 this_BEGIN_11= RULE_BEGIN ( (lv_workload_12_0= ruleWorkload ) ) (otherlv_13= Comma ( (lv_workload_14_0= ruleWorkload ) ) )* this_END_15= RULE_END )? this_END_16= RULE_END )
            // InternalMyCsmParser.g:1013:3: () otherlv_1= Stop ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= PostPath ( ( ruleEString ) ) )? (otherlv_6= PrePath ( ( ruleEString ) ) )? (otherlv_8= ActiveResource ( ( ruleEString ) ) )? (otherlv_10= Workload_1 this_BEGIN_11= RULE_BEGIN ( (lv_workload_12_0= ruleWorkload ) ) (otherlv_13= Comma ( (lv_workload_14_0= ruleWorkload ) ) )* this_END_15= RULE_END )? this_END_16= RULE_END
            {
            // InternalMyCsmParser.g:1013:3: ()
            // InternalMyCsmParser.g:1014:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStopAccess().getStopAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Stop,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStopAccess().getStopKeyword_1());
              		
            }
            // InternalMyCsmParser.g:1024:3: ( (lv_name_2_0= ruleEString ) )
            // InternalMyCsmParser.g:1025:4: (lv_name_2_0= ruleEString )
            {
            // InternalMyCsmParser.g:1025:4: (lv_name_2_0= ruleEString )
            // InternalMyCsmParser.g:1026:5: lv_name_2_0= ruleEString
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStopAccess().getNameEStringParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_name_2_0=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStopRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.mycsm.MyCsm.EString");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            this_BEGIN_3=(Token)match(input,RULE_BEGIN,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_3, grammarAccess.getStopAccess().getBEGINTerminalRuleCall_3());
              		
            }
            // InternalMyCsmParser.g:1047:3: (otherlv_4= PostPath ( ( ruleEString ) ) )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==PostPath) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // InternalMyCsmParser.g:1048:4: otherlv_4= PostPath ( ( ruleEString ) )
                    {
                    otherlv_4=(Token)match(input,PostPath,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getStopAccess().getPostPathKeyword_4_0());
                      			
                    }
                    // InternalMyCsmParser.g:1052:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:1053:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:1053:5: ( ruleEString )
                    // InternalMyCsmParser.g:1054:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStopRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStopAccess().getPostPathPathConnectionCrossReference_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_23);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:1069:3: (otherlv_6= PrePath ( ( ruleEString ) ) )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==PrePath) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalMyCsmParser.g:1070:4: otherlv_6= PrePath ( ( ruleEString ) )
                    {
                    otherlv_6=(Token)match(input,PrePath,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getStopAccess().getPrePathKeyword_5_0());
                      			
                    }
                    // InternalMyCsmParser.g:1074:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:1075:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:1075:5: ( ruleEString )
                    // InternalMyCsmParser.g:1076:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStopRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStopAccess().getPrePathPathConnectionCrossReference_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_24);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:1091:3: (otherlv_8= ActiveResource ( ( ruleEString ) ) )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==ActiveResource) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // InternalMyCsmParser.g:1092:4: otherlv_8= ActiveResource ( ( ruleEString ) )
                    {
                    otherlv_8=(Token)match(input,ActiveResource,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getStopAccess().getActiveResourceKeyword_6_0());
                      			
                    }
                    // InternalMyCsmParser.g:1096:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:1097:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:1097:5: ( ruleEString )
                    // InternalMyCsmParser.g:1098:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStopRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStopAccess().getActiveResourceActiveResourceCrossReference_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:1113:3: (otherlv_10= Workload_1 this_BEGIN_11= RULE_BEGIN ( (lv_workload_12_0= ruleWorkload ) ) (otherlv_13= Comma ( (lv_workload_14_0= ruleWorkload ) ) )* this_END_15= RULE_END )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==Workload_1) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalMyCsmParser.g:1114:4: otherlv_10= Workload_1 this_BEGIN_11= RULE_BEGIN ( (lv_workload_12_0= ruleWorkload ) ) (otherlv_13= Comma ( (lv_workload_14_0= ruleWorkload ) ) )* this_END_15= RULE_END
                    {
                    otherlv_10=(Token)match(input,Workload_1,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getStopAccess().getWorkloadKeyword_7_0());
                      			
                    }
                    this_BEGIN_11=(Token)match(input,RULE_BEGIN,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_BEGIN_11, grammarAccess.getStopAccess().getBEGINTerminalRuleCall_7_1());
                      			
                    }
                    // InternalMyCsmParser.g:1122:4: ( (lv_workload_12_0= ruleWorkload ) )
                    // InternalMyCsmParser.g:1123:5: (lv_workload_12_0= ruleWorkload )
                    {
                    // InternalMyCsmParser.g:1123:5: (lv_workload_12_0= ruleWorkload )
                    // InternalMyCsmParser.g:1124:6: lv_workload_12_0= ruleWorkload
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStopAccess().getWorkloadWorkloadParserRuleCall_7_2_0());
                      					
                    }
                    pushFollow(FOLLOW_6);
                    lv_workload_12_0=ruleWorkload();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStopRule());
                      						}
                      						add(
                      							current,
                      							"workload",
                      							lv_workload_12_0,
                      							"org.xtext.mycsm.MyCsm.Workload");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:1141:4: (otherlv_13= Comma ( (lv_workload_14_0= ruleWorkload ) ) )*
                    loop23:
                    do {
                        int alt23=2;
                        int LA23_0 = input.LA(1);

                        if ( (LA23_0==Comma) ) {
                            alt23=1;
                        }


                        switch (alt23) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:1142:5: otherlv_13= Comma ( (lv_workload_14_0= ruleWorkload ) )
                    	    {
                    	    otherlv_13=(Token)match(input,Comma,FOLLOW_26); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_13, grammarAccess.getStopAccess().getCommaKeyword_7_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:1146:5: ( (lv_workload_14_0= ruleWorkload ) )
                    	    // InternalMyCsmParser.g:1147:6: (lv_workload_14_0= ruleWorkload )
                    	    {
                    	    // InternalMyCsmParser.g:1147:6: (lv_workload_14_0= ruleWorkload )
                    	    // InternalMyCsmParser.g:1148:7: lv_workload_14_0= ruleWorkload
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getStopAccess().getWorkloadWorkloadParserRuleCall_7_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_6);
                    	    lv_workload_14_0=ruleWorkload();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getStopRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"workload",
                    	      								lv_workload_14_0,
                    	      								"org.xtext.mycsm.MyCsm.Workload");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop23;
                        }
                    } while (true);

                    this_END_15=(Token)match(input,RULE_END,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_END_15, grammarAccess.getStopAccess().getENDTerminalRuleCall_7_4());
                      			
                    }

                    }
                    break;

            }

            this_END_16=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_16, grammarAccess.getStopAccess().getENDTerminalRuleCall_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStop"


    // $ANTLR start "entryRuleResourceAcquire"
    // InternalMyCsmParser.g:1179:1: entryRuleResourceAcquire returns [EObject current=null] : iv_ruleResourceAcquire= ruleResourceAcquire EOF ;
    public final EObject entryRuleResourceAcquire() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleResourceAcquire = null;


        try {
            // InternalMyCsmParser.g:1179:56: (iv_ruleResourceAcquire= ruleResourceAcquire EOF )
            // InternalMyCsmParser.g:1180:2: iv_ruleResourceAcquire= ruleResourceAcquire EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getResourceAcquireRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleResourceAcquire=ruleResourceAcquire();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleResourceAcquire; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleResourceAcquire"


    // $ANTLR start "ruleResourceAcquire"
    // InternalMyCsmParser.g:1186:1: ruleResourceAcquire returns [EObject current=null] : ( () otherlv_1= ResourceAcquire ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= PostPath ( ( ruleEString ) ) )? (otherlv_6= PrePath ( ( ruleEString ) ) )? (otherlv_8= ActiveResource ( ( ruleEString ) ) )? (otherlv_10= GeneralResource ( ( ruleEString ) ) )? (otherlv_12= Workload_1 this_BEGIN_13= RULE_BEGIN ( (lv_workload_14_0= ruleWorkload ) ) (otherlv_15= Comma ( (lv_workload_16_0= ruleWorkload ) ) )* this_END_17= RULE_END )? this_END_18= RULE_END ) ;
    public final EObject ruleResourceAcquire() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token this_BEGIN_13=null;
        Token otherlv_15=null;
        Token this_END_17=null;
        Token this_END_18=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_workload_14_0 = null;

        EObject lv_workload_16_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:1192:2: ( ( () otherlv_1= ResourceAcquire ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= PostPath ( ( ruleEString ) ) )? (otherlv_6= PrePath ( ( ruleEString ) ) )? (otherlv_8= ActiveResource ( ( ruleEString ) ) )? (otherlv_10= GeneralResource ( ( ruleEString ) ) )? (otherlv_12= Workload_1 this_BEGIN_13= RULE_BEGIN ( (lv_workload_14_0= ruleWorkload ) ) (otherlv_15= Comma ( (lv_workload_16_0= ruleWorkload ) ) )* this_END_17= RULE_END )? this_END_18= RULE_END ) )
            // InternalMyCsmParser.g:1193:2: ( () otherlv_1= ResourceAcquire ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= PostPath ( ( ruleEString ) ) )? (otherlv_6= PrePath ( ( ruleEString ) ) )? (otherlv_8= ActiveResource ( ( ruleEString ) ) )? (otherlv_10= GeneralResource ( ( ruleEString ) ) )? (otherlv_12= Workload_1 this_BEGIN_13= RULE_BEGIN ( (lv_workload_14_0= ruleWorkload ) ) (otherlv_15= Comma ( (lv_workload_16_0= ruleWorkload ) ) )* this_END_17= RULE_END )? this_END_18= RULE_END )
            {
            // InternalMyCsmParser.g:1193:2: ( () otherlv_1= ResourceAcquire ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= PostPath ( ( ruleEString ) ) )? (otherlv_6= PrePath ( ( ruleEString ) ) )? (otherlv_8= ActiveResource ( ( ruleEString ) ) )? (otherlv_10= GeneralResource ( ( ruleEString ) ) )? (otherlv_12= Workload_1 this_BEGIN_13= RULE_BEGIN ( (lv_workload_14_0= ruleWorkload ) ) (otherlv_15= Comma ( (lv_workload_16_0= ruleWorkload ) ) )* this_END_17= RULE_END )? this_END_18= RULE_END )
            // InternalMyCsmParser.g:1194:3: () otherlv_1= ResourceAcquire ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= PostPath ( ( ruleEString ) ) )? (otherlv_6= PrePath ( ( ruleEString ) ) )? (otherlv_8= ActiveResource ( ( ruleEString ) ) )? (otherlv_10= GeneralResource ( ( ruleEString ) ) )? (otherlv_12= Workload_1 this_BEGIN_13= RULE_BEGIN ( (lv_workload_14_0= ruleWorkload ) ) (otherlv_15= Comma ( (lv_workload_16_0= ruleWorkload ) ) )* this_END_17= RULE_END )? this_END_18= RULE_END
            {
            // InternalMyCsmParser.g:1194:3: ()
            // InternalMyCsmParser.g:1195:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getResourceAcquireAccess().getResourceAcquireAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,ResourceAcquire,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getResourceAcquireAccess().getResourceAcquireKeyword_1());
              		
            }
            // InternalMyCsmParser.g:1205:3: ( (lv_name_2_0= ruleEString ) )
            // InternalMyCsmParser.g:1206:4: (lv_name_2_0= ruleEString )
            {
            // InternalMyCsmParser.g:1206:4: (lv_name_2_0= ruleEString )
            // InternalMyCsmParser.g:1207:5: lv_name_2_0= ruleEString
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getResourceAcquireAccess().getNameEStringParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_name_2_0=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getResourceAcquireRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.mycsm.MyCsm.EString");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            this_BEGIN_3=(Token)match(input,RULE_BEGIN,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_3, grammarAccess.getResourceAcquireAccess().getBEGINTerminalRuleCall_3());
              		
            }
            // InternalMyCsmParser.g:1228:3: (otherlv_4= PostPath ( ( ruleEString ) ) )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==PostPath) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalMyCsmParser.g:1229:4: otherlv_4= PostPath ( ( ruleEString ) )
                    {
                    otherlv_4=(Token)match(input,PostPath,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getResourceAcquireAccess().getPostPathKeyword_4_0());
                      			
                    }
                    // InternalMyCsmParser.g:1233:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:1234:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:1234:5: ( ruleEString )
                    // InternalMyCsmParser.g:1235:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getResourceAcquireRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getResourceAcquireAccess().getPostPathPathConnectionCrossReference_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_28);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:1250:3: (otherlv_6= PrePath ( ( ruleEString ) ) )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==PrePath) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalMyCsmParser.g:1251:4: otherlv_6= PrePath ( ( ruleEString ) )
                    {
                    otherlv_6=(Token)match(input,PrePath,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getResourceAcquireAccess().getPrePathKeyword_5_0());
                      			
                    }
                    // InternalMyCsmParser.g:1255:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:1256:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:1256:5: ( ruleEString )
                    // InternalMyCsmParser.g:1257:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getResourceAcquireRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getResourceAcquireAccess().getPrePathPathConnectionCrossReference_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_29);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:1272:3: (otherlv_8= ActiveResource ( ( ruleEString ) ) )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==ActiveResource) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalMyCsmParser.g:1273:4: otherlv_8= ActiveResource ( ( ruleEString ) )
                    {
                    otherlv_8=(Token)match(input,ActiveResource,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getResourceAcquireAccess().getActiveResourceKeyword_6_0());
                      			
                    }
                    // InternalMyCsmParser.g:1277:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:1278:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:1278:5: ( ruleEString )
                    // InternalMyCsmParser.g:1279:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getResourceAcquireRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getResourceAcquireAccess().getActiveResourceActiveResourceCrossReference_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_30);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:1294:3: (otherlv_10= GeneralResource ( ( ruleEString ) ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==GeneralResource) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalMyCsmParser.g:1295:4: otherlv_10= GeneralResource ( ( ruleEString ) )
                    {
                    otherlv_10=(Token)match(input,GeneralResource,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getResourceAcquireAccess().getGeneralResourceKeyword_7_0());
                      			
                    }
                    // InternalMyCsmParser.g:1299:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:1300:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:1300:5: ( ruleEString )
                    // InternalMyCsmParser.g:1301:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getResourceAcquireRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getResourceAcquireAccess().getGeneralResourceGeneralResourceCrossReference_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:1316:3: (otherlv_12= Workload_1 this_BEGIN_13= RULE_BEGIN ( (lv_workload_14_0= ruleWorkload ) ) (otherlv_15= Comma ( (lv_workload_16_0= ruleWorkload ) ) )* this_END_17= RULE_END )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==Workload_1) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalMyCsmParser.g:1317:4: otherlv_12= Workload_1 this_BEGIN_13= RULE_BEGIN ( (lv_workload_14_0= ruleWorkload ) ) (otherlv_15= Comma ( (lv_workload_16_0= ruleWorkload ) ) )* this_END_17= RULE_END
                    {
                    otherlv_12=(Token)match(input,Workload_1,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getResourceAcquireAccess().getWorkloadKeyword_8_0());
                      			
                    }
                    this_BEGIN_13=(Token)match(input,RULE_BEGIN,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_BEGIN_13, grammarAccess.getResourceAcquireAccess().getBEGINTerminalRuleCall_8_1());
                      			
                    }
                    // InternalMyCsmParser.g:1325:4: ( (lv_workload_14_0= ruleWorkload ) )
                    // InternalMyCsmParser.g:1326:5: (lv_workload_14_0= ruleWorkload )
                    {
                    // InternalMyCsmParser.g:1326:5: (lv_workload_14_0= ruleWorkload )
                    // InternalMyCsmParser.g:1327:6: lv_workload_14_0= ruleWorkload
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getResourceAcquireAccess().getWorkloadWorkloadParserRuleCall_8_2_0());
                      					
                    }
                    pushFollow(FOLLOW_6);
                    lv_workload_14_0=ruleWorkload();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getResourceAcquireRule());
                      						}
                      						add(
                      							current,
                      							"workload",
                      							lv_workload_14_0,
                      							"org.xtext.mycsm.MyCsm.Workload");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:1344:4: (otherlv_15= Comma ( (lv_workload_16_0= ruleWorkload ) ) )*
                    loop29:
                    do {
                        int alt29=2;
                        int LA29_0 = input.LA(1);

                        if ( (LA29_0==Comma) ) {
                            alt29=1;
                        }


                        switch (alt29) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:1345:5: otherlv_15= Comma ( (lv_workload_16_0= ruleWorkload ) )
                    	    {
                    	    otherlv_15=(Token)match(input,Comma,FOLLOW_26); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_15, grammarAccess.getResourceAcquireAccess().getCommaKeyword_8_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:1349:5: ( (lv_workload_16_0= ruleWorkload ) )
                    	    // InternalMyCsmParser.g:1350:6: (lv_workload_16_0= ruleWorkload )
                    	    {
                    	    // InternalMyCsmParser.g:1350:6: (lv_workload_16_0= ruleWorkload )
                    	    // InternalMyCsmParser.g:1351:7: lv_workload_16_0= ruleWorkload
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getResourceAcquireAccess().getWorkloadWorkloadParserRuleCall_8_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_6);
                    	    lv_workload_16_0=ruleWorkload();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getResourceAcquireRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"workload",
                    	      								lv_workload_16_0,
                    	      								"org.xtext.mycsm.MyCsm.Workload");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop29;
                        }
                    } while (true);

                    this_END_17=(Token)match(input,RULE_END,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_END_17, grammarAccess.getResourceAcquireAccess().getENDTerminalRuleCall_8_4());
                      			
                    }

                    }
                    break;

            }

            this_END_18=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_18, grammarAccess.getResourceAcquireAccess().getENDTerminalRuleCall_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleResourceAcquire"


    // $ANTLR start "entryRuleResourceRelease"
    // InternalMyCsmParser.g:1382:1: entryRuleResourceRelease returns [EObject current=null] : iv_ruleResourceRelease= ruleResourceRelease EOF ;
    public final EObject entryRuleResourceRelease() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleResourceRelease = null;


        try {
            // InternalMyCsmParser.g:1382:56: (iv_ruleResourceRelease= ruleResourceRelease EOF )
            // InternalMyCsmParser.g:1383:2: iv_ruleResourceRelease= ruleResourceRelease EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getResourceReleaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleResourceRelease=ruleResourceRelease();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleResourceRelease; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleResourceRelease"


    // $ANTLR start "ruleResourceRelease"
    // InternalMyCsmParser.g:1389:1: ruleResourceRelease returns [EObject current=null] : ( () otherlv_1= ResourceRelease ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= PostPath ( ( ruleEString ) ) )? (otherlv_6= PrePath ( ( ruleEString ) ) )? (otherlv_8= ActiveResource ( ( ruleEString ) ) )? (otherlv_10= GeneralResource ( ( ruleEString ) ) )? (otherlv_12= Workload_1 this_BEGIN_13= RULE_BEGIN ( (lv_workload_14_0= ruleWorkload ) ) (otherlv_15= Comma ( (lv_workload_16_0= ruleWorkload ) ) )* this_END_17= RULE_END )? this_END_18= RULE_END ) ;
    public final EObject ruleResourceRelease() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token this_BEGIN_13=null;
        Token otherlv_15=null;
        Token this_END_17=null;
        Token this_END_18=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_workload_14_0 = null;

        EObject lv_workload_16_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:1395:2: ( ( () otherlv_1= ResourceRelease ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= PostPath ( ( ruleEString ) ) )? (otherlv_6= PrePath ( ( ruleEString ) ) )? (otherlv_8= ActiveResource ( ( ruleEString ) ) )? (otherlv_10= GeneralResource ( ( ruleEString ) ) )? (otherlv_12= Workload_1 this_BEGIN_13= RULE_BEGIN ( (lv_workload_14_0= ruleWorkload ) ) (otherlv_15= Comma ( (lv_workload_16_0= ruleWorkload ) ) )* this_END_17= RULE_END )? this_END_18= RULE_END ) )
            // InternalMyCsmParser.g:1396:2: ( () otherlv_1= ResourceRelease ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= PostPath ( ( ruleEString ) ) )? (otherlv_6= PrePath ( ( ruleEString ) ) )? (otherlv_8= ActiveResource ( ( ruleEString ) ) )? (otherlv_10= GeneralResource ( ( ruleEString ) ) )? (otherlv_12= Workload_1 this_BEGIN_13= RULE_BEGIN ( (lv_workload_14_0= ruleWorkload ) ) (otherlv_15= Comma ( (lv_workload_16_0= ruleWorkload ) ) )* this_END_17= RULE_END )? this_END_18= RULE_END )
            {
            // InternalMyCsmParser.g:1396:2: ( () otherlv_1= ResourceRelease ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= PostPath ( ( ruleEString ) ) )? (otherlv_6= PrePath ( ( ruleEString ) ) )? (otherlv_8= ActiveResource ( ( ruleEString ) ) )? (otherlv_10= GeneralResource ( ( ruleEString ) ) )? (otherlv_12= Workload_1 this_BEGIN_13= RULE_BEGIN ( (lv_workload_14_0= ruleWorkload ) ) (otherlv_15= Comma ( (lv_workload_16_0= ruleWorkload ) ) )* this_END_17= RULE_END )? this_END_18= RULE_END )
            // InternalMyCsmParser.g:1397:3: () otherlv_1= ResourceRelease ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= PostPath ( ( ruleEString ) ) )? (otherlv_6= PrePath ( ( ruleEString ) ) )? (otherlv_8= ActiveResource ( ( ruleEString ) ) )? (otherlv_10= GeneralResource ( ( ruleEString ) ) )? (otherlv_12= Workload_1 this_BEGIN_13= RULE_BEGIN ( (lv_workload_14_0= ruleWorkload ) ) (otherlv_15= Comma ( (lv_workload_16_0= ruleWorkload ) ) )* this_END_17= RULE_END )? this_END_18= RULE_END
            {
            // InternalMyCsmParser.g:1397:3: ()
            // InternalMyCsmParser.g:1398:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getResourceReleaseAccess().getResourceReleaseAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,ResourceRelease,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getResourceReleaseAccess().getResourceReleaseKeyword_1());
              		
            }
            // InternalMyCsmParser.g:1408:3: ( (lv_name_2_0= ruleEString ) )
            // InternalMyCsmParser.g:1409:4: (lv_name_2_0= ruleEString )
            {
            // InternalMyCsmParser.g:1409:4: (lv_name_2_0= ruleEString )
            // InternalMyCsmParser.g:1410:5: lv_name_2_0= ruleEString
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getResourceReleaseAccess().getNameEStringParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_name_2_0=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getResourceReleaseRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.mycsm.MyCsm.EString");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            this_BEGIN_3=(Token)match(input,RULE_BEGIN,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_3, grammarAccess.getResourceReleaseAccess().getBEGINTerminalRuleCall_3());
              		
            }
            // InternalMyCsmParser.g:1431:3: (otherlv_4= PostPath ( ( ruleEString ) ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==PostPath) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalMyCsmParser.g:1432:4: otherlv_4= PostPath ( ( ruleEString ) )
                    {
                    otherlv_4=(Token)match(input,PostPath,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getResourceReleaseAccess().getPostPathKeyword_4_0());
                      			
                    }
                    // InternalMyCsmParser.g:1436:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:1437:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:1437:5: ( ruleEString )
                    // InternalMyCsmParser.g:1438:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getResourceReleaseRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getResourceReleaseAccess().getPostPathPathConnectionCrossReference_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_28);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:1453:3: (otherlv_6= PrePath ( ( ruleEString ) ) )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==PrePath) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // InternalMyCsmParser.g:1454:4: otherlv_6= PrePath ( ( ruleEString ) )
                    {
                    otherlv_6=(Token)match(input,PrePath,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getResourceReleaseAccess().getPrePathKeyword_5_0());
                      			
                    }
                    // InternalMyCsmParser.g:1458:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:1459:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:1459:5: ( ruleEString )
                    // InternalMyCsmParser.g:1460:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getResourceReleaseRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getResourceReleaseAccess().getPrePathPathConnectionCrossReference_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_29);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:1475:3: (otherlv_8= ActiveResource ( ( ruleEString ) ) )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==ActiveResource) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // InternalMyCsmParser.g:1476:4: otherlv_8= ActiveResource ( ( ruleEString ) )
                    {
                    otherlv_8=(Token)match(input,ActiveResource,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getResourceReleaseAccess().getActiveResourceKeyword_6_0());
                      			
                    }
                    // InternalMyCsmParser.g:1480:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:1481:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:1481:5: ( ruleEString )
                    // InternalMyCsmParser.g:1482:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getResourceReleaseRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getResourceReleaseAccess().getActiveResourceActiveResourceCrossReference_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_30);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:1497:3: (otherlv_10= GeneralResource ( ( ruleEString ) ) )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==GeneralResource) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalMyCsmParser.g:1498:4: otherlv_10= GeneralResource ( ( ruleEString ) )
                    {
                    otherlv_10=(Token)match(input,GeneralResource,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getResourceReleaseAccess().getGeneralResourceKeyword_7_0());
                      			
                    }
                    // InternalMyCsmParser.g:1502:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:1503:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:1503:5: ( ruleEString )
                    // InternalMyCsmParser.g:1504:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getResourceReleaseRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getResourceReleaseAccess().getGeneralResourceGeneralResourceCrossReference_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:1519:3: (otherlv_12= Workload_1 this_BEGIN_13= RULE_BEGIN ( (lv_workload_14_0= ruleWorkload ) ) (otherlv_15= Comma ( (lv_workload_16_0= ruleWorkload ) ) )* this_END_17= RULE_END )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==Workload_1) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalMyCsmParser.g:1520:4: otherlv_12= Workload_1 this_BEGIN_13= RULE_BEGIN ( (lv_workload_14_0= ruleWorkload ) ) (otherlv_15= Comma ( (lv_workload_16_0= ruleWorkload ) ) )* this_END_17= RULE_END
                    {
                    otherlv_12=(Token)match(input,Workload_1,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getResourceReleaseAccess().getWorkloadKeyword_8_0());
                      			
                    }
                    this_BEGIN_13=(Token)match(input,RULE_BEGIN,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_BEGIN_13, grammarAccess.getResourceReleaseAccess().getBEGINTerminalRuleCall_8_1());
                      			
                    }
                    // InternalMyCsmParser.g:1528:4: ( (lv_workload_14_0= ruleWorkload ) )
                    // InternalMyCsmParser.g:1529:5: (lv_workload_14_0= ruleWorkload )
                    {
                    // InternalMyCsmParser.g:1529:5: (lv_workload_14_0= ruleWorkload )
                    // InternalMyCsmParser.g:1530:6: lv_workload_14_0= ruleWorkload
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getResourceReleaseAccess().getWorkloadWorkloadParserRuleCall_8_2_0());
                      					
                    }
                    pushFollow(FOLLOW_6);
                    lv_workload_14_0=ruleWorkload();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getResourceReleaseRule());
                      						}
                      						add(
                      							current,
                      							"workload",
                      							lv_workload_14_0,
                      							"org.xtext.mycsm.MyCsm.Workload");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:1547:4: (otherlv_15= Comma ( (lv_workload_16_0= ruleWorkload ) ) )*
                    loop35:
                    do {
                        int alt35=2;
                        int LA35_0 = input.LA(1);

                        if ( (LA35_0==Comma) ) {
                            alt35=1;
                        }


                        switch (alt35) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:1548:5: otherlv_15= Comma ( (lv_workload_16_0= ruleWorkload ) )
                    	    {
                    	    otherlv_15=(Token)match(input,Comma,FOLLOW_26); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_15, grammarAccess.getResourceReleaseAccess().getCommaKeyword_8_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:1552:5: ( (lv_workload_16_0= ruleWorkload ) )
                    	    // InternalMyCsmParser.g:1553:6: (lv_workload_16_0= ruleWorkload )
                    	    {
                    	    // InternalMyCsmParser.g:1553:6: (lv_workload_16_0= ruleWorkload )
                    	    // InternalMyCsmParser.g:1554:7: lv_workload_16_0= ruleWorkload
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getResourceReleaseAccess().getWorkloadWorkloadParserRuleCall_8_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_6);
                    	    lv_workload_16_0=ruleWorkload();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getResourceReleaseRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"workload",
                    	      								lv_workload_16_0,
                    	      								"org.xtext.mycsm.MyCsm.Workload");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop35;
                        }
                    } while (true);

                    this_END_17=(Token)match(input,RULE_END,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_END_17, grammarAccess.getResourceReleaseAccess().getENDTerminalRuleCall_8_4());
                      			
                    }

                    }
                    break;

            }

            this_END_18=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_18, grammarAccess.getResourceReleaseAccess().getENDTerminalRuleCall_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleResourceRelease"


    // $ANTLR start "entryRuleJoin"
    // InternalMyCsmParser.g:1585:1: entryRuleJoin returns [EObject current=null] : iv_ruleJoin= ruleJoin EOF ;
    public final EObject entryRuleJoin() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJoin = null;


        try {
            // InternalMyCsmParser.g:1585:45: (iv_ruleJoin= ruleJoin EOF )
            // InternalMyCsmParser.g:1586:2: iv_ruleJoin= ruleJoin EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJoinRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJoin=ruleJoin();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJoin; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJoin"


    // $ANTLR start "ruleJoin"
    // InternalMyCsmParser.g:1592:1: ruleJoin returns [EObject current=null] : ( () otherlv_1= Join ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END ) ;
    public final EObject ruleJoin() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token this_END_18=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:1598:2: ( ( () otherlv_1= Join ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END ) )
            // InternalMyCsmParser.g:1599:2: ( () otherlv_1= Join ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END )
            {
            // InternalMyCsmParser.g:1599:2: ( () otherlv_1= Join ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END )
            // InternalMyCsmParser.g:1600:3: () otherlv_1= Join ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END
            {
            // InternalMyCsmParser.g:1600:3: ()
            // InternalMyCsmParser.g:1601:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJoinAccess().getJoinAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Join,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJoinAccess().getJoinKeyword_1());
              		
            }
            // InternalMyCsmParser.g:1611:3: ( (lv_name_2_0= ruleEString ) )
            // InternalMyCsmParser.g:1612:4: (lv_name_2_0= ruleEString )
            {
            // InternalMyCsmParser.g:1612:4: (lv_name_2_0= ruleEString )
            // InternalMyCsmParser.g:1613:5: lv_name_2_0= ruleEString
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJoinAccess().getNameEStringParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_name_2_0=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJoinRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.mycsm.MyCsm.EString");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            this_BEGIN_3=(Token)match(input,RULE_BEGIN,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_3, grammarAccess.getJoinAccess().getBEGINTerminalRuleCall_3());
              		
            }
            // InternalMyCsmParser.g:1634:3: (otherlv_4= Message_1 ( ( ruleEString ) ) )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==Message_1) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalMyCsmParser.g:1635:4: otherlv_4= Message_1 ( ( ruleEString ) )
                    {
                    otherlv_4=(Token)match(input,Message_1,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getJoinAccess().getMessageKeyword_4_0());
                      			
                    }
                    // InternalMyCsmParser.g:1639:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:1640:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:1640:5: ( ruleEString )
                    // InternalMyCsmParser.g:1641:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getJoinRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJoinAccess().getMessageMessageCrossReference_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_32);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:1656:3: (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==Post) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalMyCsmParser.g:1657:4: otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis
                    {
                    otherlv_6=(Token)match(input,Post,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getJoinAccess().getPostKeyword_5_0());
                      			
                    }
                    otherlv_7=(Token)match(input,LeftParenthesis,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getJoinAccess().getLeftParenthesisKeyword_5_1());
                      			
                    }
                    // InternalMyCsmParser.g:1665:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:1666:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:1666:5: ( ruleEString )
                    // InternalMyCsmParser.g:1667:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getJoinRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJoinAccess().getPostStepCrossReference_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:1681:4: (otherlv_9= Comma ( ( ruleEString ) ) )*
                    loop38:
                    do {
                        int alt38=2;
                        int LA38_0 = input.LA(1);

                        if ( (LA38_0==Comma) ) {
                            alt38=1;
                        }


                        switch (alt38) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:1682:5: otherlv_9= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_9=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getJoinAccess().getCommaKeyword_5_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:1686:5: ( ( ruleEString ) )
                    	    // InternalMyCsmParser.g:1687:6: ( ruleEString )
                    	    {
                    	    // InternalMyCsmParser.g:1687:6: ( ruleEString )
                    	    // InternalMyCsmParser.g:1688:7: ruleEString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getJoinRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJoinAccess().getPostStepCrossReference_5_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    ruleEString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop38;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,RightParenthesis,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getJoinAccess().getRightParenthesisKeyword_5_4());
                      			
                    }

                    }
                    break;

            }

            // InternalMyCsmParser.g:1708:3: (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==Pre) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalMyCsmParser.g:1709:4: otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis
                    {
                    otherlv_12=(Token)match(input,Pre,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getJoinAccess().getPreKeyword_6_0());
                      			
                    }
                    otherlv_13=(Token)match(input,LeftParenthesis,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getJoinAccess().getLeftParenthesisKeyword_6_1());
                      			
                    }
                    // InternalMyCsmParser.g:1717:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:1718:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:1718:5: ( ruleEString )
                    // InternalMyCsmParser.g:1719:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getJoinRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJoinAccess().getPreStepCrossReference_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:1733:4: (otherlv_15= Comma ( ( ruleEString ) ) )*
                    loop40:
                    do {
                        int alt40=2;
                        int LA40_0 = input.LA(1);

                        if ( (LA40_0==Comma) ) {
                            alt40=1;
                        }


                        switch (alt40) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:1734:5: otherlv_15= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_15=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_15, grammarAccess.getJoinAccess().getCommaKeyword_6_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:1738:5: ( ( ruleEString ) )
                    	    // InternalMyCsmParser.g:1739:6: ( ruleEString )
                    	    {
                    	    // InternalMyCsmParser.g:1739:6: ( ruleEString )
                    	    // InternalMyCsmParser.g:1740:7: ruleEString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getJoinRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJoinAccess().getPreStepCrossReference_6_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    ruleEString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop40;
                        }
                    } while (true);

                    otherlv_17=(Token)match(input,RightParenthesis,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getJoinAccess().getRightParenthesisKeyword_6_4());
                      			
                    }

                    }
                    break;

            }

            this_END_18=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_18, grammarAccess.getJoinAccess().getENDTerminalRuleCall_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJoin"


    // $ANTLR start "entryRuleFork"
    // InternalMyCsmParser.g:1768:1: entryRuleFork returns [EObject current=null] : iv_ruleFork= ruleFork EOF ;
    public final EObject entryRuleFork() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFork = null;


        try {
            // InternalMyCsmParser.g:1768:45: (iv_ruleFork= ruleFork EOF )
            // InternalMyCsmParser.g:1769:2: iv_ruleFork= ruleFork EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForkRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFork=ruleFork();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFork; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFork"


    // $ANTLR start "ruleFork"
    // InternalMyCsmParser.g:1775:1: ruleFork returns [EObject current=null] : ( () otherlv_1= Fork ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END ) ;
    public final EObject ruleFork() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token this_END_18=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:1781:2: ( ( () otherlv_1= Fork ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END ) )
            // InternalMyCsmParser.g:1782:2: ( () otherlv_1= Fork ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END )
            {
            // InternalMyCsmParser.g:1782:2: ( () otherlv_1= Fork ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END )
            // InternalMyCsmParser.g:1783:3: () otherlv_1= Fork ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END
            {
            // InternalMyCsmParser.g:1783:3: ()
            // InternalMyCsmParser.g:1784:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getForkAccess().getForkAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Fork,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getForkAccess().getForkKeyword_1());
              		
            }
            // InternalMyCsmParser.g:1794:3: ( (lv_name_2_0= ruleEString ) )
            // InternalMyCsmParser.g:1795:4: (lv_name_2_0= ruleEString )
            {
            // InternalMyCsmParser.g:1795:4: (lv_name_2_0= ruleEString )
            // InternalMyCsmParser.g:1796:5: lv_name_2_0= ruleEString
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForkAccess().getNameEStringParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_name_2_0=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForkRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.mycsm.MyCsm.EString");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            this_BEGIN_3=(Token)match(input,RULE_BEGIN,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_3, grammarAccess.getForkAccess().getBEGINTerminalRuleCall_3());
              		
            }
            // InternalMyCsmParser.g:1817:3: (otherlv_4= Message_1 ( ( ruleEString ) ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==Message_1) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalMyCsmParser.g:1818:4: otherlv_4= Message_1 ( ( ruleEString ) )
                    {
                    otherlv_4=(Token)match(input,Message_1,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getForkAccess().getMessageKeyword_4_0());
                      			
                    }
                    // InternalMyCsmParser.g:1822:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:1823:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:1823:5: ( ruleEString )
                    // InternalMyCsmParser.g:1824:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getForkRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForkAccess().getMessageMessageCrossReference_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_32);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:1839:3: (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==Post) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalMyCsmParser.g:1840:4: otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis
                    {
                    otherlv_6=(Token)match(input,Post,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getForkAccess().getPostKeyword_5_0());
                      			
                    }
                    otherlv_7=(Token)match(input,LeftParenthesis,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getForkAccess().getLeftParenthesisKeyword_5_1());
                      			
                    }
                    // InternalMyCsmParser.g:1848:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:1849:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:1849:5: ( ruleEString )
                    // InternalMyCsmParser.g:1850:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getForkRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForkAccess().getPostStepCrossReference_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:1864:4: (otherlv_9= Comma ( ( ruleEString ) ) )*
                    loop43:
                    do {
                        int alt43=2;
                        int LA43_0 = input.LA(1);

                        if ( (LA43_0==Comma) ) {
                            alt43=1;
                        }


                        switch (alt43) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:1865:5: otherlv_9= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_9=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getForkAccess().getCommaKeyword_5_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:1869:5: ( ( ruleEString ) )
                    	    // InternalMyCsmParser.g:1870:6: ( ruleEString )
                    	    {
                    	    // InternalMyCsmParser.g:1870:6: ( ruleEString )
                    	    // InternalMyCsmParser.g:1871:7: ruleEString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getForkRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getForkAccess().getPostStepCrossReference_5_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    ruleEString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop43;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,RightParenthesis,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getForkAccess().getRightParenthesisKeyword_5_4());
                      			
                    }

                    }
                    break;

            }

            // InternalMyCsmParser.g:1891:3: (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==Pre) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalMyCsmParser.g:1892:4: otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis
                    {
                    otherlv_12=(Token)match(input,Pre,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getForkAccess().getPreKeyword_6_0());
                      			
                    }
                    otherlv_13=(Token)match(input,LeftParenthesis,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getForkAccess().getLeftParenthesisKeyword_6_1());
                      			
                    }
                    // InternalMyCsmParser.g:1900:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:1901:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:1901:5: ( ruleEString )
                    // InternalMyCsmParser.g:1902:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getForkRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForkAccess().getPreStepCrossReference_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:1916:4: (otherlv_15= Comma ( ( ruleEString ) ) )*
                    loop45:
                    do {
                        int alt45=2;
                        int LA45_0 = input.LA(1);

                        if ( (LA45_0==Comma) ) {
                            alt45=1;
                        }


                        switch (alt45) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:1917:5: otherlv_15= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_15=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_15, grammarAccess.getForkAccess().getCommaKeyword_6_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:1921:5: ( ( ruleEString ) )
                    	    // InternalMyCsmParser.g:1922:6: ( ruleEString )
                    	    {
                    	    // InternalMyCsmParser.g:1922:6: ( ruleEString )
                    	    // InternalMyCsmParser.g:1923:7: ruleEString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getForkRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getForkAccess().getPreStepCrossReference_6_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    ruleEString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop45;
                        }
                    } while (true);

                    otherlv_17=(Token)match(input,RightParenthesis,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getForkAccess().getRightParenthesisKeyword_6_4());
                      			
                    }

                    }
                    break;

            }

            this_END_18=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_18, grammarAccess.getForkAccess().getENDTerminalRuleCall_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFork"


    // $ANTLR start "entryRuleMerge"
    // InternalMyCsmParser.g:1951:1: entryRuleMerge returns [EObject current=null] : iv_ruleMerge= ruleMerge EOF ;
    public final EObject entryRuleMerge() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMerge = null;


        try {
            // InternalMyCsmParser.g:1951:46: (iv_ruleMerge= ruleMerge EOF )
            // InternalMyCsmParser.g:1952:2: iv_ruleMerge= ruleMerge EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMergeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMerge=ruleMerge();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMerge; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMerge"


    // $ANTLR start "ruleMerge"
    // InternalMyCsmParser.g:1958:1: ruleMerge returns [EObject current=null] : ( () otherlv_1= Merge ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END ) ;
    public final EObject ruleMerge() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token this_END_18=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:1964:2: ( ( () otherlv_1= Merge ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END ) )
            // InternalMyCsmParser.g:1965:2: ( () otherlv_1= Merge ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END )
            {
            // InternalMyCsmParser.g:1965:2: ( () otherlv_1= Merge ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END )
            // InternalMyCsmParser.g:1966:3: () otherlv_1= Merge ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END
            {
            // InternalMyCsmParser.g:1966:3: ()
            // InternalMyCsmParser.g:1967:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMergeAccess().getMergeAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Merge,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMergeAccess().getMergeKeyword_1());
              		
            }
            // InternalMyCsmParser.g:1977:3: ( (lv_name_2_0= ruleEString ) )
            // InternalMyCsmParser.g:1978:4: (lv_name_2_0= ruleEString )
            {
            // InternalMyCsmParser.g:1978:4: (lv_name_2_0= ruleEString )
            // InternalMyCsmParser.g:1979:5: lv_name_2_0= ruleEString
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMergeAccess().getNameEStringParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_name_2_0=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMergeRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.mycsm.MyCsm.EString");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            this_BEGIN_3=(Token)match(input,RULE_BEGIN,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_3, grammarAccess.getMergeAccess().getBEGINTerminalRuleCall_3());
              		
            }
            // InternalMyCsmParser.g:2000:3: (otherlv_4= Message_1 ( ( ruleEString ) ) )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==Message_1) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalMyCsmParser.g:2001:4: otherlv_4= Message_1 ( ( ruleEString ) )
                    {
                    otherlv_4=(Token)match(input,Message_1,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getMergeAccess().getMessageKeyword_4_0());
                      			
                    }
                    // InternalMyCsmParser.g:2005:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:2006:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:2006:5: ( ruleEString )
                    // InternalMyCsmParser.g:2007:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getMergeRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMergeAccess().getMessageMessageCrossReference_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_32);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:2022:3: (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==Post) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalMyCsmParser.g:2023:4: otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis
                    {
                    otherlv_6=(Token)match(input,Post,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getMergeAccess().getPostKeyword_5_0());
                      			
                    }
                    otherlv_7=(Token)match(input,LeftParenthesis,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getMergeAccess().getLeftParenthesisKeyword_5_1());
                      			
                    }
                    // InternalMyCsmParser.g:2031:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:2032:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:2032:5: ( ruleEString )
                    // InternalMyCsmParser.g:2033:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getMergeRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMergeAccess().getPostStepCrossReference_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:2047:4: (otherlv_9= Comma ( ( ruleEString ) ) )*
                    loop48:
                    do {
                        int alt48=2;
                        int LA48_0 = input.LA(1);

                        if ( (LA48_0==Comma) ) {
                            alt48=1;
                        }


                        switch (alt48) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:2048:5: otherlv_9= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_9=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getMergeAccess().getCommaKeyword_5_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:2052:5: ( ( ruleEString ) )
                    	    // InternalMyCsmParser.g:2053:6: ( ruleEString )
                    	    {
                    	    // InternalMyCsmParser.g:2053:6: ( ruleEString )
                    	    // InternalMyCsmParser.g:2054:7: ruleEString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getMergeRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMergeAccess().getPostStepCrossReference_5_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    ruleEString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop48;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,RightParenthesis,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getMergeAccess().getRightParenthesisKeyword_5_4());
                      			
                    }

                    }
                    break;

            }

            // InternalMyCsmParser.g:2074:3: (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==Pre) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalMyCsmParser.g:2075:4: otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis
                    {
                    otherlv_12=(Token)match(input,Pre,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getMergeAccess().getPreKeyword_6_0());
                      			
                    }
                    otherlv_13=(Token)match(input,LeftParenthesis,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getMergeAccess().getLeftParenthesisKeyword_6_1());
                      			
                    }
                    // InternalMyCsmParser.g:2083:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:2084:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:2084:5: ( ruleEString )
                    // InternalMyCsmParser.g:2085:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getMergeRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMergeAccess().getPreStepCrossReference_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:2099:4: (otherlv_15= Comma ( ( ruleEString ) ) )*
                    loop50:
                    do {
                        int alt50=2;
                        int LA50_0 = input.LA(1);

                        if ( (LA50_0==Comma) ) {
                            alt50=1;
                        }


                        switch (alt50) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:2100:5: otherlv_15= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_15=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_15, grammarAccess.getMergeAccess().getCommaKeyword_6_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:2104:5: ( ( ruleEString ) )
                    	    // InternalMyCsmParser.g:2105:6: ( ruleEString )
                    	    {
                    	    // InternalMyCsmParser.g:2105:6: ( ruleEString )
                    	    // InternalMyCsmParser.g:2106:7: ruleEString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getMergeRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMergeAccess().getPreStepCrossReference_6_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    ruleEString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop50;
                        }
                    } while (true);

                    otherlv_17=(Token)match(input,RightParenthesis,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getMergeAccess().getRightParenthesisKeyword_6_4());
                      			
                    }

                    }
                    break;

            }

            this_END_18=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_18, grammarAccess.getMergeAccess().getENDTerminalRuleCall_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMerge"


    // $ANTLR start "entryRuleBranch"
    // InternalMyCsmParser.g:2134:1: entryRuleBranch returns [EObject current=null] : iv_ruleBranch= ruleBranch EOF ;
    public final EObject entryRuleBranch() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBranch = null;


        try {
            // InternalMyCsmParser.g:2134:47: (iv_ruleBranch= ruleBranch EOF )
            // InternalMyCsmParser.g:2135:2: iv_ruleBranch= ruleBranch EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBranchRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBranch=ruleBranch();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBranch; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBranch"


    // $ANTLR start "ruleBranch"
    // InternalMyCsmParser.g:2141:1: ruleBranch returns [EObject current=null] : ( () otherlv_1= Branch ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END ) ;
    public final EObject ruleBranch() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token this_END_18=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:2147:2: ( ( () otherlv_1= Branch ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END ) )
            // InternalMyCsmParser.g:2148:2: ( () otherlv_1= Branch ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END )
            {
            // InternalMyCsmParser.g:2148:2: ( () otherlv_1= Branch ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END )
            // InternalMyCsmParser.g:2149:3: () otherlv_1= Branch ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END
            {
            // InternalMyCsmParser.g:2149:3: ()
            // InternalMyCsmParser.g:2150:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getBranchAccess().getBranchAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Branch,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBranchAccess().getBranchKeyword_1());
              		
            }
            // InternalMyCsmParser.g:2160:3: ( (lv_name_2_0= ruleEString ) )
            // InternalMyCsmParser.g:2161:4: (lv_name_2_0= ruleEString )
            {
            // InternalMyCsmParser.g:2161:4: (lv_name_2_0= ruleEString )
            // InternalMyCsmParser.g:2162:5: lv_name_2_0= ruleEString
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBranchAccess().getNameEStringParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_name_2_0=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBranchRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.mycsm.MyCsm.EString");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            this_BEGIN_3=(Token)match(input,RULE_BEGIN,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_3, grammarAccess.getBranchAccess().getBEGINTerminalRuleCall_3());
              		
            }
            // InternalMyCsmParser.g:2183:3: (otherlv_4= Message_1 ( ( ruleEString ) ) )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==Message_1) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalMyCsmParser.g:2184:4: otherlv_4= Message_1 ( ( ruleEString ) )
                    {
                    otherlv_4=(Token)match(input,Message_1,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getBranchAccess().getMessageKeyword_4_0());
                      			
                    }
                    // InternalMyCsmParser.g:2188:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:2189:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:2189:5: ( ruleEString )
                    // InternalMyCsmParser.g:2190:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getBranchRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBranchAccess().getMessageMessageCrossReference_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_32);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:2205:3: (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==Post) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalMyCsmParser.g:2206:4: otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis
                    {
                    otherlv_6=(Token)match(input,Post,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getBranchAccess().getPostKeyword_5_0());
                      			
                    }
                    otherlv_7=(Token)match(input,LeftParenthesis,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getBranchAccess().getLeftParenthesisKeyword_5_1());
                      			
                    }
                    // InternalMyCsmParser.g:2214:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:2215:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:2215:5: ( ruleEString )
                    // InternalMyCsmParser.g:2216:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getBranchRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBranchAccess().getPostStepCrossReference_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:2230:4: (otherlv_9= Comma ( ( ruleEString ) ) )*
                    loop53:
                    do {
                        int alt53=2;
                        int LA53_0 = input.LA(1);

                        if ( (LA53_0==Comma) ) {
                            alt53=1;
                        }


                        switch (alt53) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:2231:5: otherlv_9= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_9=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getBranchAccess().getCommaKeyword_5_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:2235:5: ( ( ruleEString ) )
                    	    // InternalMyCsmParser.g:2236:6: ( ruleEString )
                    	    {
                    	    // InternalMyCsmParser.g:2236:6: ( ruleEString )
                    	    // InternalMyCsmParser.g:2237:7: ruleEString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getBranchRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBranchAccess().getPostStepCrossReference_5_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    ruleEString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop53;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,RightParenthesis,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getBranchAccess().getRightParenthesisKeyword_5_4());
                      			
                    }

                    }
                    break;

            }

            // InternalMyCsmParser.g:2257:3: (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==Pre) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalMyCsmParser.g:2258:4: otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis
                    {
                    otherlv_12=(Token)match(input,Pre,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getBranchAccess().getPreKeyword_6_0());
                      			
                    }
                    otherlv_13=(Token)match(input,LeftParenthesis,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getBranchAccess().getLeftParenthesisKeyword_6_1());
                      			
                    }
                    // InternalMyCsmParser.g:2266:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:2267:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:2267:5: ( ruleEString )
                    // InternalMyCsmParser.g:2268:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getBranchRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBranchAccess().getPreStepCrossReference_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:2282:4: (otherlv_15= Comma ( ( ruleEString ) ) )*
                    loop55:
                    do {
                        int alt55=2;
                        int LA55_0 = input.LA(1);

                        if ( (LA55_0==Comma) ) {
                            alt55=1;
                        }


                        switch (alt55) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:2283:5: otherlv_15= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_15=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_15, grammarAccess.getBranchAccess().getCommaKeyword_6_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:2287:5: ( ( ruleEString ) )
                    	    // InternalMyCsmParser.g:2288:6: ( ruleEString )
                    	    {
                    	    // InternalMyCsmParser.g:2288:6: ( ruleEString )
                    	    // InternalMyCsmParser.g:2289:7: ruleEString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getBranchRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBranchAccess().getPreStepCrossReference_6_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    ruleEString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop55;
                        }
                    } while (true);

                    otherlv_17=(Token)match(input,RightParenthesis,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getBranchAccess().getRightParenthesisKeyword_6_4());
                      			
                    }

                    }
                    break;

            }

            this_END_18=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_18, grammarAccess.getBranchAccess().getENDTerminalRuleCall_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBranch"


    // $ANTLR start "entryRuleSeqence"
    // InternalMyCsmParser.g:2317:1: entryRuleSeqence returns [EObject current=null] : iv_ruleSeqence= ruleSeqence EOF ;
    public final EObject entryRuleSeqence() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSeqence = null;


        try {
            // InternalMyCsmParser.g:2317:48: (iv_ruleSeqence= ruleSeqence EOF )
            // InternalMyCsmParser.g:2318:2: iv_ruleSeqence= ruleSeqence EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSeqenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSeqence=ruleSeqence();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSeqence; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSeqence"


    // $ANTLR start "ruleSeqence"
    // InternalMyCsmParser.g:2324:1: ruleSeqence returns [EObject current=null] : ( () otherlv_1= Seqence ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END ) ;
    public final EObject ruleSeqence() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token this_END_18=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:2330:2: ( ( () otherlv_1= Seqence ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END ) )
            // InternalMyCsmParser.g:2331:2: ( () otherlv_1= Seqence ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END )
            {
            // InternalMyCsmParser.g:2331:2: ( () otherlv_1= Seqence ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END )
            // InternalMyCsmParser.g:2332:3: () otherlv_1= Seqence ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= Message_1 ( ( ruleEString ) ) )? (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )? (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )? this_END_18= RULE_END
            {
            // InternalMyCsmParser.g:2332:3: ()
            // InternalMyCsmParser.g:2333:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSeqenceAccess().getSeqenceAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Seqence,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSeqenceAccess().getSeqenceKeyword_1());
              		
            }
            // InternalMyCsmParser.g:2343:3: ( (lv_name_2_0= ruleEString ) )
            // InternalMyCsmParser.g:2344:4: (lv_name_2_0= ruleEString )
            {
            // InternalMyCsmParser.g:2344:4: (lv_name_2_0= ruleEString )
            // InternalMyCsmParser.g:2345:5: lv_name_2_0= ruleEString
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSeqenceAccess().getNameEStringParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_name_2_0=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSeqenceRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.mycsm.MyCsm.EString");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            this_BEGIN_3=(Token)match(input,RULE_BEGIN,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_3, grammarAccess.getSeqenceAccess().getBEGINTerminalRuleCall_3());
              		
            }
            // InternalMyCsmParser.g:2366:3: (otherlv_4= Message_1 ( ( ruleEString ) ) )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==Message_1) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalMyCsmParser.g:2367:4: otherlv_4= Message_1 ( ( ruleEString ) )
                    {
                    otherlv_4=(Token)match(input,Message_1,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSeqenceAccess().getMessageKeyword_4_0());
                      			
                    }
                    // InternalMyCsmParser.g:2371:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:2372:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:2372:5: ( ruleEString )
                    // InternalMyCsmParser.g:2373:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSeqenceRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSeqenceAccess().getMessageMessageCrossReference_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_32);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:2388:3: (otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==Post) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalMyCsmParser.g:2389:4: otherlv_6= Post otherlv_7= LeftParenthesis ( ( ruleEString ) ) (otherlv_9= Comma ( ( ruleEString ) ) )* otherlv_11= RightParenthesis
                    {
                    otherlv_6=(Token)match(input,Post,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getSeqenceAccess().getPostKeyword_5_0());
                      			
                    }
                    otherlv_7=(Token)match(input,LeftParenthesis,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getSeqenceAccess().getLeftParenthesisKeyword_5_1());
                      			
                    }
                    // InternalMyCsmParser.g:2397:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:2398:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:2398:5: ( ruleEString )
                    // InternalMyCsmParser.g:2399:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSeqenceRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSeqenceAccess().getPostStepCrossReference_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:2413:4: (otherlv_9= Comma ( ( ruleEString ) ) )*
                    loop58:
                    do {
                        int alt58=2;
                        int LA58_0 = input.LA(1);

                        if ( (LA58_0==Comma) ) {
                            alt58=1;
                        }


                        switch (alt58) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:2414:5: otherlv_9= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_9=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getSeqenceAccess().getCommaKeyword_5_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:2418:5: ( ( ruleEString ) )
                    	    // InternalMyCsmParser.g:2419:6: ( ruleEString )
                    	    {
                    	    // InternalMyCsmParser.g:2419:6: ( ruleEString )
                    	    // InternalMyCsmParser.g:2420:7: ruleEString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getSeqenceRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSeqenceAccess().getPostStepCrossReference_5_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    ruleEString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop58;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,RightParenthesis,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getSeqenceAccess().getRightParenthesisKeyword_5_4());
                      			
                    }

                    }
                    break;

            }

            // InternalMyCsmParser.g:2440:3: (otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==Pre) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalMyCsmParser.g:2441:4: otherlv_12= Pre otherlv_13= LeftParenthesis ( ( ruleEString ) ) (otherlv_15= Comma ( ( ruleEString ) ) )* otherlv_17= RightParenthesis
                    {
                    otherlv_12=(Token)match(input,Pre,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getSeqenceAccess().getPreKeyword_6_0());
                      			
                    }
                    otherlv_13=(Token)match(input,LeftParenthesis,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getSeqenceAccess().getLeftParenthesisKeyword_6_1());
                      			
                    }
                    // InternalMyCsmParser.g:2449:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:2450:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:2450:5: ( ruleEString )
                    // InternalMyCsmParser.g:2451:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSeqenceRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSeqenceAccess().getPreStepCrossReference_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:2465:4: (otherlv_15= Comma ( ( ruleEString ) ) )*
                    loop60:
                    do {
                        int alt60=2;
                        int LA60_0 = input.LA(1);

                        if ( (LA60_0==Comma) ) {
                            alt60=1;
                        }


                        switch (alt60) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:2466:5: otherlv_15= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_15=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_15, grammarAccess.getSeqenceAccess().getCommaKeyword_6_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:2470:5: ( ( ruleEString ) )
                    	    // InternalMyCsmParser.g:2471:6: ( ruleEString )
                    	    {
                    	    // InternalMyCsmParser.g:2471:6: ( ruleEString )
                    	    // InternalMyCsmParser.g:2472:7: ruleEString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getSeqenceRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSeqenceAccess().getPreStepCrossReference_6_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    ruleEString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop60;
                        }
                    } while (true);

                    otherlv_17=(Token)match(input,RightParenthesis,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getSeqenceAccess().getRightParenthesisKeyword_6_4());
                      			
                    }

                    }
                    break;

            }

            this_END_18=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_18, grammarAccess.getSeqenceAccess().getENDTerminalRuleCall_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSeqence"


    // $ANTLR start "entryRuleProcessingResource"
    // InternalMyCsmParser.g:2500:1: entryRuleProcessingResource returns [EObject current=null] : iv_ruleProcessingResource= ruleProcessingResource EOF ;
    public final EObject entryRuleProcessingResource() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProcessingResource = null;


        try {
            // InternalMyCsmParser.g:2500:59: (iv_ruleProcessingResource= ruleProcessingResource EOF )
            // InternalMyCsmParser.g:2501:2: iv_ruleProcessingResource= ruleProcessingResource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProcessingResourceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleProcessingResource=ruleProcessingResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProcessingResource; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProcessingResource"


    // $ANTLR start "ruleProcessingResource"
    // InternalMyCsmParser.g:2507:1: ruleProcessingResource returns [EObject current=null] : ( () otherlv_1= ProcessingResource ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= ResourceAcquire_1 otherlv_5= LeftParenthesis ( ( ruleEString ) ) (otherlv_7= Comma ( ( ruleEString ) ) )* otherlv_9= RightParenthesis )? (otherlv_10= ResourceRelease_1 otherlv_11= LeftParenthesis ( ( ruleEString ) ) (otherlv_13= Comma ( ( ruleEString ) ) )* otherlv_15= RightParenthesis )? (otherlv_16= Step otherlv_17= LeftParenthesis ( ( ruleEString ) ) (otherlv_19= Comma ( ( ruleEString ) ) )* otherlv_21= RightParenthesis )? this_END_22= RULE_END ) ;
    public final EObject ruleProcessingResource() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_END_22=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:2513:2: ( ( () otherlv_1= ProcessingResource ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= ResourceAcquire_1 otherlv_5= LeftParenthesis ( ( ruleEString ) ) (otherlv_7= Comma ( ( ruleEString ) ) )* otherlv_9= RightParenthesis )? (otherlv_10= ResourceRelease_1 otherlv_11= LeftParenthesis ( ( ruleEString ) ) (otherlv_13= Comma ( ( ruleEString ) ) )* otherlv_15= RightParenthesis )? (otherlv_16= Step otherlv_17= LeftParenthesis ( ( ruleEString ) ) (otherlv_19= Comma ( ( ruleEString ) ) )* otherlv_21= RightParenthesis )? this_END_22= RULE_END ) )
            // InternalMyCsmParser.g:2514:2: ( () otherlv_1= ProcessingResource ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= ResourceAcquire_1 otherlv_5= LeftParenthesis ( ( ruleEString ) ) (otherlv_7= Comma ( ( ruleEString ) ) )* otherlv_9= RightParenthesis )? (otherlv_10= ResourceRelease_1 otherlv_11= LeftParenthesis ( ( ruleEString ) ) (otherlv_13= Comma ( ( ruleEString ) ) )* otherlv_15= RightParenthesis )? (otherlv_16= Step otherlv_17= LeftParenthesis ( ( ruleEString ) ) (otherlv_19= Comma ( ( ruleEString ) ) )* otherlv_21= RightParenthesis )? this_END_22= RULE_END )
            {
            // InternalMyCsmParser.g:2514:2: ( () otherlv_1= ProcessingResource ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= ResourceAcquire_1 otherlv_5= LeftParenthesis ( ( ruleEString ) ) (otherlv_7= Comma ( ( ruleEString ) ) )* otherlv_9= RightParenthesis )? (otherlv_10= ResourceRelease_1 otherlv_11= LeftParenthesis ( ( ruleEString ) ) (otherlv_13= Comma ( ( ruleEString ) ) )* otherlv_15= RightParenthesis )? (otherlv_16= Step otherlv_17= LeftParenthesis ( ( ruleEString ) ) (otherlv_19= Comma ( ( ruleEString ) ) )* otherlv_21= RightParenthesis )? this_END_22= RULE_END )
            // InternalMyCsmParser.g:2515:3: () otherlv_1= ProcessingResource ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= ResourceAcquire_1 otherlv_5= LeftParenthesis ( ( ruleEString ) ) (otherlv_7= Comma ( ( ruleEString ) ) )* otherlv_9= RightParenthesis )? (otherlv_10= ResourceRelease_1 otherlv_11= LeftParenthesis ( ( ruleEString ) ) (otherlv_13= Comma ( ( ruleEString ) ) )* otherlv_15= RightParenthesis )? (otherlv_16= Step otherlv_17= LeftParenthesis ( ( ruleEString ) ) (otherlv_19= Comma ( ( ruleEString ) ) )* otherlv_21= RightParenthesis )? this_END_22= RULE_END
            {
            // InternalMyCsmParser.g:2515:3: ()
            // InternalMyCsmParser.g:2516:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getProcessingResourceAccess().getProcessingResourceAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,ProcessingResource,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getProcessingResourceAccess().getProcessingResourceKeyword_1());
              		
            }
            // InternalMyCsmParser.g:2526:3: ( (lv_name_2_0= ruleEString ) )
            // InternalMyCsmParser.g:2527:4: (lv_name_2_0= ruleEString )
            {
            // InternalMyCsmParser.g:2527:4: (lv_name_2_0= ruleEString )
            // InternalMyCsmParser.g:2528:5: lv_name_2_0= ruleEString
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getProcessingResourceAccess().getNameEStringParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_name_2_0=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getProcessingResourceRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.mycsm.MyCsm.EString");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            this_BEGIN_3=(Token)match(input,RULE_BEGIN,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_3, grammarAccess.getProcessingResourceAccess().getBEGINTerminalRuleCall_3());
              		
            }
            // InternalMyCsmParser.g:2549:3: (otherlv_4= ResourceAcquire_1 otherlv_5= LeftParenthesis ( ( ruleEString ) ) (otherlv_7= Comma ( ( ruleEString ) ) )* otherlv_9= RightParenthesis )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==ResourceAcquire_1) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalMyCsmParser.g:2550:4: otherlv_4= ResourceAcquire_1 otherlv_5= LeftParenthesis ( ( ruleEString ) ) (otherlv_7= Comma ( ( ruleEString ) ) )* otherlv_9= RightParenthesis
                    {
                    otherlv_4=(Token)match(input,ResourceAcquire_1,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getProcessingResourceAccess().getResourceAcquireKeyword_4_0());
                      			
                    }
                    otherlv_5=(Token)match(input,LeftParenthesis,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getProcessingResourceAccess().getLeftParenthesisKeyword_4_1());
                      			
                    }
                    // InternalMyCsmParser.g:2558:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:2559:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:2559:5: ( ruleEString )
                    // InternalMyCsmParser.g:2560:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getProcessingResourceRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getProcessingResourceAccess().getResourceAcquireResourceAcquireCrossReference_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:2574:4: (otherlv_7= Comma ( ( ruleEString ) ) )*
                    loop62:
                    do {
                        int alt62=2;
                        int LA62_0 = input.LA(1);

                        if ( (LA62_0==Comma) ) {
                            alt62=1;
                        }


                        switch (alt62) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:2575:5: otherlv_7= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getProcessingResourceAccess().getCommaKeyword_4_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:2579:5: ( ( ruleEString ) )
                    	    // InternalMyCsmParser.g:2580:6: ( ruleEString )
                    	    {
                    	    // InternalMyCsmParser.g:2580:6: ( ruleEString )
                    	    // InternalMyCsmParser.g:2581:7: ruleEString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getProcessingResourceRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getProcessingResourceAccess().getResourceAcquireResourceAcquireCrossReference_4_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    ruleEString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop62;
                        }
                    } while (true);

                    otherlv_9=(Token)match(input,RightParenthesis,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getProcessingResourceAccess().getRightParenthesisKeyword_4_4());
                      			
                    }

                    }
                    break;

            }

            // InternalMyCsmParser.g:2601:3: (otherlv_10= ResourceRelease_1 otherlv_11= LeftParenthesis ( ( ruleEString ) ) (otherlv_13= Comma ( ( ruleEString ) ) )* otherlv_15= RightParenthesis )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==ResourceRelease_1) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalMyCsmParser.g:2602:4: otherlv_10= ResourceRelease_1 otherlv_11= LeftParenthesis ( ( ruleEString ) ) (otherlv_13= Comma ( ( ruleEString ) ) )* otherlv_15= RightParenthesis
                    {
                    otherlv_10=(Token)match(input,ResourceRelease_1,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getProcessingResourceAccess().getResourceReleaseKeyword_5_0());
                      			
                    }
                    otherlv_11=(Token)match(input,LeftParenthesis,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getProcessingResourceAccess().getLeftParenthesisKeyword_5_1());
                      			
                    }
                    // InternalMyCsmParser.g:2610:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:2611:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:2611:5: ( ruleEString )
                    // InternalMyCsmParser.g:2612:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getProcessingResourceRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getProcessingResourceAccess().getResourceReleaseResourceReleaseCrossReference_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:2626:4: (otherlv_13= Comma ( ( ruleEString ) ) )*
                    loop64:
                    do {
                        int alt64=2;
                        int LA64_0 = input.LA(1);

                        if ( (LA64_0==Comma) ) {
                            alt64=1;
                        }


                        switch (alt64) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:2627:5: otherlv_13= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_13=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_13, grammarAccess.getProcessingResourceAccess().getCommaKeyword_5_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:2631:5: ( ( ruleEString ) )
                    	    // InternalMyCsmParser.g:2632:6: ( ruleEString )
                    	    {
                    	    // InternalMyCsmParser.g:2632:6: ( ruleEString )
                    	    // InternalMyCsmParser.g:2633:7: ruleEString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getProcessingResourceRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getProcessingResourceAccess().getResourceReleaseResourceReleaseCrossReference_5_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    ruleEString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop64;
                        }
                    } while (true);

                    otherlv_15=(Token)match(input,RightParenthesis,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getProcessingResourceAccess().getRightParenthesisKeyword_5_4());
                      			
                    }

                    }
                    break;

            }

            // InternalMyCsmParser.g:2653:3: (otherlv_16= Step otherlv_17= LeftParenthesis ( ( ruleEString ) ) (otherlv_19= Comma ( ( ruleEString ) ) )* otherlv_21= RightParenthesis )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==Step) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalMyCsmParser.g:2654:4: otherlv_16= Step otherlv_17= LeftParenthesis ( ( ruleEString ) ) (otherlv_19= Comma ( ( ruleEString ) ) )* otherlv_21= RightParenthesis
                    {
                    otherlv_16=(Token)match(input,Step,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getProcessingResourceAccess().getStepKeyword_6_0());
                      			
                    }
                    otherlv_17=(Token)match(input,LeftParenthesis,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getProcessingResourceAccess().getLeftParenthesisKeyword_6_1());
                      			
                    }
                    // InternalMyCsmParser.g:2662:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:2663:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:2663:5: ( ruleEString )
                    // InternalMyCsmParser.g:2664:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getProcessingResourceRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getProcessingResourceAccess().getStepStepCrossReference_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:2678:4: (otherlv_19= Comma ( ( ruleEString ) ) )*
                    loop66:
                    do {
                        int alt66=2;
                        int LA66_0 = input.LA(1);

                        if ( (LA66_0==Comma) ) {
                            alt66=1;
                        }


                        switch (alt66) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:2679:5: otherlv_19= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_19=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_19, grammarAccess.getProcessingResourceAccess().getCommaKeyword_6_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:2683:5: ( ( ruleEString ) )
                    	    // InternalMyCsmParser.g:2684:6: ( ruleEString )
                    	    {
                    	    // InternalMyCsmParser.g:2684:6: ( ruleEString )
                    	    // InternalMyCsmParser.g:2685:7: ruleEString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getProcessingResourceRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getProcessingResourceAccess().getStepStepCrossReference_6_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    ruleEString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop66;
                        }
                    } while (true);

                    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_21, grammarAccess.getProcessingResourceAccess().getRightParenthesisKeyword_6_4());
                      			
                    }

                    }
                    break;

            }

            this_END_22=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_22, grammarAccess.getProcessingResourceAccess().getENDTerminalRuleCall_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProcessingResource"


    // $ANTLR start "entryRuleExternalService"
    // InternalMyCsmParser.g:2713:1: entryRuleExternalService returns [EObject current=null] : iv_ruleExternalService= ruleExternalService EOF ;
    public final EObject entryRuleExternalService() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExternalService = null;


        try {
            // InternalMyCsmParser.g:2713:56: (iv_ruleExternalService= ruleExternalService EOF )
            // InternalMyCsmParser.g:2714:2: iv_ruleExternalService= ruleExternalService EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExternalServiceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExternalService=ruleExternalService();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExternalService; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExternalService"


    // $ANTLR start "ruleExternalService"
    // InternalMyCsmParser.g:2720:1: ruleExternalService returns [EObject current=null] : ( () otherlv_1= ExternalService ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= ResourceAcquire_1 otherlv_5= LeftParenthesis ( ( ruleEString ) ) (otherlv_7= Comma ( ( ruleEString ) ) )* otherlv_9= RightParenthesis )? (otherlv_10= ResourceRelease_1 otherlv_11= LeftParenthesis ( ( ruleEString ) ) (otherlv_13= Comma ( ( ruleEString ) ) )* otherlv_15= RightParenthesis )? (otherlv_16= Step otherlv_17= LeftParenthesis ( ( ruleEString ) ) (otherlv_19= Comma ( ( ruleEString ) ) )* otherlv_21= RightParenthesis )? this_END_22= RULE_END ) ;
    public final EObject ruleExternalService() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token this_END_22=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:2726:2: ( ( () otherlv_1= ExternalService ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= ResourceAcquire_1 otherlv_5= LeftParenthesis ( ( ruleEString ) ) (otherlv_7= Comma ( ( ruleEString ) ) )* otherlv_9= RightParenthesis )? (otherlv_10= ResourceRelease_1 otherlv_11= LeftParenthesis ( ( ruleEString ) ) (otherlv_13= Comma ( ( ruleEString ) ) )* otherlv_15= RightParenthesis )? (otherlv_16= Step otherlv_17= LeftParenthesis ( ( ruleEString ) ) (otherlv_19= Comma ( ( ruleEString ) ) )* otherlv_21= RightParenthesis )? this_END_22= RULE_END ) )
            // InternalMyCsmParser.g:2727:2: ( () otherlv_1= ExternalService ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= ResourceAcquire_1 otherlv_5= LeftParenthesis ( ( ruleEString ) ) (otherlv_7= Comma ( ( ruleEString ) ) )* otherlv_9= RightParenthesis )? (otherlv_10= ResourceRelease_1 otherlv_11= LeftParenthesis ( ( ruleEString ) ) (otherlv_13= Comma ( ( ruleEString ) ) )* otherlv_15= RightParenthesis )? (otherlv_16= Step otherlv_17= LeftParenthesis ( ( ruleEString ) ) (otherlv_19= Comma ( ( ruleEString ) ) )* otherlv_21= RightParenthesis )? this_END_22= RULE_END )
            {
            // InternalMyCsmParser.g:2727:2: ( () otherlv_1= ExternalService ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= ResourceAcquire_1 otherlv_5= LeftParenthesis ( ( ruleEString ) ) (otherlv_7= Comma ( ( ruleEString ) ) )* otherlv_9= RightParenthesis )? (otherlv_10= ResourceRelease_1 otherlv_11= LeftParenthesis ( ( ruleEString ) ) (otherlv_13= Comma ( ( ruleEString ) ) )* otherlv_15= RightParenthesis )? (otherlv_16= Step otherlv_17= LeftParenthesis ( ( ruleEString ) ) (otherlv_19= Comma ( ( ruleEString ) ) )* otherlv_21= RightParenthesis )? this_END_22= RULE_END )
            // InternalMyCsmParser.g:2728:3: () otherlv_1= ExternalService ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= ResourceAcquire_1 otherlv_5= LeftParenthesis ( ( ruleEString ) ) (otherlv_7= Comma ( ( ruleEString ) ) )* otherlv_9= RightParenthesis )? (otherlv_10= ResourceRelease_1 otherlv_11= LeftParenthesis ( ( ruleEString ) ) (otherlv_13= Comma ( ( ruleEString ) ) )* otherlv_15= RightParenthesis )? (otherlv_16= Step otherlv_17= LeftParenthesis ( ( ruleEString ) ) (otherlv_19= Comma ( ( ruleEString ) ) )* otherlv_21= RightParenthesis )? this_END_22= RULE_END
            {
            // InternalMyCsmParser.g:2728:3: ()
            // InternalMyCsmParser.g:2729:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExternalServiceAccess().getExternalServiceAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,ExternalService,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExternalServiceAccess().getExternalServiceKeyword_1());
              		
            }
            // InternalMyCsmParser.g:2739:3: ( (lv_name_2_0= ruleEString ) )
            // InternalMyCsmParser.g:2740:4: (lv_name_2_0= ruleEString )
            {
            // InternalMyCsmParser.g:2740:4: (lv_name_2_0= ruleEString )
            // InternalMyCsmParser.g:2741:5: lv_name_2_0= ruleEString
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExternalServiceAccess().getNameEStringParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_name_2_0=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExternalServiceRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.mycsm.MyCsm.EString");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            this_BEGIN_3=(Token)match(input,RULE_BEGIN,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_3, grammarAccess.getExternalServiceAccess().getBEGINTerminalRuleCall_3());
              		
            }
            // InternalMyCsmParser.g:2762:3: (otherlv_4= ResourceAcquire_1 otherlv_5= LeftParenthesis ( ( ruleEString ) ) (otherlv_7= Comma ( ( ruleEString ) ) )* otherlv_9= RightParenthesis )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==ResourceAcquire_1) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalMyCsmParser.g:2763:4: otherlv_4= ResourceAcquire_1 otherlv_5= LeftParenthesis ( ( ruleEString ) ) (otherlv_7= Comma ( ( ruleEString ) ) )* otherlv_9= RightParenthesis
                    {
                    otherlv_4=(Token)match(input,ResourceAcquire_1,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getExternalServiceAccess().getResourceAcquireKeyword_4_0());
                      			
                    }
                    otherlv_5=(Token)match(input,LeftParenthesis,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getExternalServiceAccess().getLeftParenthesisKeyword_4_1());
                      			
                    }
                    // InternalMyCsmParser.g:2771:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:2772:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:2772:5: ( ruleEString )
                    // InternalMyCsmParser.g:2773:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExternalServiceRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExternalServiceAccess().getResourceAcquireResourceAcquireCrossReference_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:2787:4: (otherlv_7= Comma ( ( ruleEString ) ) )*
                    loop68:
                    do {
                        int alt68=2;
                        int LA68_0 = input.LA(1);

                        if ( (LA68_0==Comma) ) {
                            alt68=1;
                        }


                        switch (alt68) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:2788:5: otherlv_7= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getExternalServiceAccess().getCommaKeyword_4_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:2792:5: ( ( ruleEString ) )
                    	    // InternalMyCsmParser.g:2793:6: ( ruleEString )
                    	    {
                    	    // InternalMyCsmParser.g:2793:6: ( ruleEString )
                    	    // InternalMyCsmParser.g:2794:7: ruleEString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getExternalServiceRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getExternalServiceAccess().getResourceAcquireResourceAcquireCrossReference_4_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    ruleEString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop68;
                        }
                    } while (true);

                    otherlv_9=(Token)match(input,RightParenthesis,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getExternalServiceAccess().getRightParenthesisKeyword_4_4());
                      			
                    }

                    }
                    break;

            }

            // InternalMyCsmParser.g:2814:3: (otherlv_10= ResourceRelease_1 otherlv_11= LeftParenthesis ( ( ruleEString ) ) (otherlv_13= Comma ( ( ruleEString ) ) )* otherlv_15= RightParenthesis )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==ResourceRelease_1) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalMyCsmParser.g:2815:4: otherlv_10= ResourceRelease_1 otherlv_11= LeftParenthesis ( ( ruleEString ) ) (otherlv_13= Comma ( ( ruleEString ) ) )* otherlv_15= RightParenthesis
                    {
                    otherlv_10=(Token)match(input,ResourceRelease_1,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getExternalServiceAccess().getResourceReleaseKeyword_5_0());
                      			
                    }
                    otherlv_11=(Token)match(input,LeftParenthesis,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getExternalServiceAccess().getLeftParenthesisKeyword_5_1());
                      			
                    }
                    // InternalMyCsmParser.g:2823:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:2824:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:2824:5: ( ruleEString )
                    // InternalMyCsmParser.g:2825:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExternalServiceRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExternalServiceAccess().getResourceReleaseResourceReleaseCrossReference_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:2839:4: (otherlv_13= Comma ( ( ruleEString ) ) )*
                    loop70:
                    do {
                        int alt70=2;
                        int LA70_0 = input.LA(1);

                        if ( (LA70_0==Comma) ) {
                            alt70=1;
                        }


                        switch (alt70) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:2840:5: otherlv_13= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_13=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_13, grammarAccess.getExternalServiceAccess().getCommaKeyword_5_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:2844:5: ( ( ruleEString ) )
                    	    // InternalMyCsmParser.g:2845:6: ( ruleEString )
                    	    {
                    	    // InternalMyCsmParser.g:2845:6: ( ruleEString )
                    	    // InternalMyCsmParser.g:2846:7: ruleEString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getExternalServiceRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getExternalServiceAccess().getResourceReleaseResourceReleaseCrossReference_5_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    ruleEString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop70;
                        }
                    } while (true);

                    otherlv_15=(Token)match(input,RightParenthesis,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getExternalServiceAccess().getRightParenthesisKeyword_5_4());
                      			
                    }

                    }
                    break;

            }

            // InternalMyCsmParser.g:2866:3: (otherlv_16= Step otherlv_17= LeftParenthesis ( ( ruleEString ) ) (otherlv_19= Comma ( ( ruleEString ) ) )* otherlv_21= RightParenthesis )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==Step) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalMyCsmParser.g:2867:4: otherlv_16= Step otherlv_17= LeftParenthesis ( ( ruleEString ) ) (otherlv_19= Comma ( ( ruleEString ) ) )* otherlv_21= RightParenthesis
                    {
                    otherlv_16=(Token)match(input,Step,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getExternalServiceAccess().getStepKeyword_6_0());
                      			
                    }
                    otherlv_17=(Token)match(input,LeftParenthesis,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getExternalServiceAccess().getLeftParenthesisKeyword_6_1());
                      			
                    }
                    // InternalMyCsmParser.g:2875:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:2876:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:2876:5: ( ruleEString )
                    // InternalMyCsmParser.g:2877:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExternalServiceRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExternalServiceAccess().getStepStepCrossReference_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:2891:4: (otherlv_19= Comma ( ( ruleEString ) ) )*
                    loop72:
                    do {
                        int alt72=2;
                        int LA72_0 = input.LA(1);

                        if ( (LA72_0==Comma) ) {
                            alt72=1;
                        }


                        switch (alt72) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:2892:5: otherlv_19= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_19=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_19, grammarAccess.getExternalServiceAccess().getCommaKeyword_6_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:2896:5: ( ( ruleEString ) )
                    	    // InternalMyCsmParser.g:2897:6: ( ruleEString )
                    	    {
                    	    // InternalMyCsmParser.g:2897:6: ( ruleEString )
                    	    // InternalMyCsmParser.g:2898:7: ruleEString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getExternalServiceRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getExternalServiceAccess().getStepStepCrossReference_6_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    ruleEString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop72;
                        }
                    } while (true);

                    otherlv_21=(Token)match(input,RightParenthesis,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_21, grammarAccess.getExternalServiceAccess().getRightParenthesisKeyword_6_4());
                      			
                    }

                    }
                    break;

            }

            this_END_22=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_22, grammarAccess.getExternalServiceAccess().getENDTerminalRuleCall_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExternalService"


    // $ANTLR start "entryRuleEInt"
    // InternalMyCsmParser.g:2926:1: entryRuleEInt returns [String current=null] : iv_ruleEInt= ruleEInt EOF ;
    public final String entryRuleEInt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEInt = null;


        try {
            // InternalMyCsmParser.g:2926:44: (iv_ruleEInt= ruleEInt EOF )
            // InternalMyCsmParser.g:2927:2: iv_ruleEInt= ruleEInt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEIntRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEInt=ruleEInt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEInt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEInt"


    // $ANTLR start "ruleEInt"
    // InternalMyCsmParser.g:2933:1: ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= HyphenMinus )? this_INT_1= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleEInt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;


        	enterRule();

        try {
            // InternalMyCsmParser.g:2939:2: ( ( (kw= HyphenMinus )? this_INT_1= RULE_INT ) )
            // InternalMyCsmParser.g:2940:2: ( (kw= HyphenMinus )? this_INT_1= RULE_INT )
            {
            // InternalMyCsmParser.g:2940:2: ( (kw= HyphenMinus )? this_INT_1= RULE_INT )
            // InternalMyCsmParser.g:2941:3: (kw= HyphenMinus )? this_INT_1= RULE_INT
            {
            // InternalMyCsmParser.g:2941:3: (kw= HyphenMinus )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==HyphenMinus) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalMyCsmParser.g:2942:4: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEInt"


    // $ANTLR start "entryRuleComponent"
    // InternalMyCsmParser.g:2959:1: entryRuleComponent returns [EObject current=null] : iv_ruleComponent= ruleComponent EOF ;
    public final EObject entryRuleComponent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComponent = null;


        try {
            // InternalMyCsmParser.g:2959:50: (iv_ruleComponent= ruleComponent EOF )
            // InternalMyCsmParser.g:2960:2: iv_ruleComponent= ruleComponent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComponentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComponent=ruleComponent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComponent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComponent"


    // $ANTLR start "ruleComponent"
    // InternalMyCsmParser.g:2966:1: ruleComponent returns [EObject current=null] : ( () otherlv_1= Component ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= ResourceAcquire_1 otherlv_5= LeftParenthesis ( ( ruleEString ) ) (otherlv_7= Comma ( ( ruleEString ) ) )* otherlv_9= RightParenthesis )? (otherlv_10= ResourceRelease_1 otherlv_11= LeftParenthesis ( ( ruleEString ) ) (otherlv_13= Comma ( ( ruleEString ) ) )* otherlv_15= RightParenthesis )? this_END_16= RULE_END ) ;
    public final EObject ruleComponent() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_BEGIN_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token this_END_16=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:2972:2: ( ( () otherlv_1= Component ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= ResourceAcquire_1 otherlv_5= LeftParenthesis ( ( ruleEString ) ) (otherlv_7= Comma ( ( ruleEString ) ) )* otherlv_9= RightParenthesis )? (otherlv_10= ResourceRelease_1 otherlv_11= LeftParenthesis ( ( ruleEString ) ) (otherlv_13= Comma ( ( ruleEString ) ) )* otherlv_15= RightParenthesis )? this_END_16= RULE_END ) )
            // InternalMyCsmParser.g:2973:2: ( () otherlv_1= Component ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= ResourceAcquire_1 otherlv_5= LeftParenthesis ( ( ruleEString ) ) (otherlv_7= Comma ( ( ruleEString ) ) )* otherlv_9= RightParenthesis )? (otherlv_10= ResourceRelease_1 otherlv_11= LeftParenthesis ( ( ruleEString ) ) (otherlv_13= Comma ( ( ruleEString ) ) )* otherlv_15= RightParenthesis )? this_END_16= RULE_END )
            {
            // InternalMyCsmParser.g:2973:2: ( () otherlv_1= Component ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= ResourceAcquire_1 otherlv_5= LeftParenthesis ( ( ruleEString ) ) (otherlv_7= Comma ( ( ruleEString ) ) )* otherlv_9= RightParenthesis )? (otherlv_10= ResourceRelease_1 otherlv_11= LeftParenthesis ( ( ruleEString ) ) (otherlv_13= Comma ( ( ruleEString ) ) )* otherlv_15= RightParenthesis )? this_END_16= RULE_END )
            // InternalMyCsmParser.g:2974:3: () otherlv_1= Component ( (lv_name_2_0= ruleEString ) ) this_BEGIN_3= RULE_BEGIN (otherlv_4= ResourceAcquire_1 otherlv_5= LeftParenthesis ( ( ruleEString ) ) (otherlv_7= Comma ( ( ruleEString ) ) )* otherlv_9= RightParenthesis )? (otherlv_10= ResourceRelease_1 otherlv_11= LeftParenthesis ( ( ruleEString ) ) (otherlv_13= Comma ( ( ruleEString ) ) )* otherlv_15= RightParenthesis )? this_END_16= RULE_END
            {
            // InternalMyCsmParser.g:2974:3: ()
            // InternalMyCsmParser.g:2975:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getComponentAccess().getComponentAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Component,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getComponentAccess().getComponentKeyword_1());
              		
            }
            // InternalMyCsmParser.g:2985:3: ( (lv_name_2_0= ruleEString ) )
            // InternalMyCsmParser.g:2986:4: (lv_name_2_0= ruleEString )
            {
            // InternalMyCsmParser.g:2986:4: (lv_name_2_0= ruleEString )
            // InternalMyCsmParser.g:2987:5: lv_name_2_0= ruleEString
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getComponentAccess().getNameEStringParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_name_2_0=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getComponentRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.mycsm.MyCsm.EString");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            this_BEGIN_3=(Token)match(input,RULE_BEGIN,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_3, grammarAccess.getComponentAccess().getBEGINTerminalRuleCall_3());
              		
            }
            // InternalMyCsmParser.g:3008:3: (otherlv_4= ResourceAcquire_1 otherlv_5= LeftParenthesis ( ( ruleEString ) ) (otherlv_7= Comma ( ( ruleEString ) ) )* otherlv_9= RightParenthesis )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==ResourceAcquire_1) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalMyCsmParser.g:3009:4: otherlv_4= ResourceAcquire_1 otherlv_5= LeftParenthesis ( ( ruleEString ) ) (otherlv_7= Comma ( ( ruleEString ) ) )* otherlv_9= RightParenthesis
                    {
                    otherlv_4=(Token)match(input,ResourceAcquire_1,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getComponentAccess().getResourceAcquireKeyword_4_0());
                      			
                    }
                    otherlv_5=(Token)match(input,LeftParenthesis,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getComponentAccess().getLeftParenthesisKeyword_4_1());
                      			
                    }
                    // InternalMyCsmParser.g:3017:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:3018:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:3018:5: ( ruleEString )
                    // InternalMyCsmParser.g:3019:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getComponentRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getComponentAccess().getResourceAcquireResourceAcquireCrossReference_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:3033:4: (otherlv_7= Comma ( ( ruleEString ) ) )*
                    loop75:
                    do {
                        int alt75=2;
                        int LA75_0 = input.LA(1);

                        if ( (LA75_0==Comma) ) {
                            alt75=1;
                        }


                        switch (alt75) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:3034:5: otherlv_7= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_7=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getComponentAccess().getCommaKeyword_4_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:3038:5: ( ( ruleEString ) )
                    	    // InternalMyCsmParser.g:3039:6: ( ruleEString )
                    	    {
                    	    // InternalMyCsmParser.g:3039:6: ( ruleEString )
                    	    // InternalMyCsmParser.g:3040:7: ruleEString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getComponentRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getComponentAccess().getResourceAcquireResourceAcquireCrossReference_4_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    ruleEString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop75;
                        }
                    } while (true);

                    otherlv_9=(Token)match(input,RightParenthesis,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getComponentAccess().getRightParenthesisKeyword_4_4());
                      			
                    }

                    }
                    break;

            }

            // InternalMyCsmParser.g:3060:3: (otherlv_10= ResourceRelease_1 otherlv_11= LeftParenthesis ( ( ruleEString ) ) (otherlv_13= Comma ( ( ruleEString ) ) )* otherlv_15= RightParenthesis )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==ResourceRelease_1) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalMyCsmParser.g:3061:4: otherlv_10= ResourceRelease_1 otherlv_11= LeftParenthesis ( ( ruleEString ) ) (otherlv_13= Comma ( ( ruleEString ) ) )* otherlv_15= RightParenthesis
                    {
                    otherlv_10=(Token)match(input,ResourceRelease_1,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getComponentAccess().getResourceReleaseKeyword_5_0());
                      			
                    }
                    otherlv_11=(Token)match(input,LeftParenthesis,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getComponentAccess().getLeftParenthesisKeyword_5_1());
                      			
                    }
                    // InternalMyCsmParser.g:3069:4: ( ( ruleEString ) )
                    // InternalMyCsmParser.g:3070:5: ( ruleEString )
                    {
                    // InternalMyCsmParser.g:3070:5: ( ruleEString )
                    // InternalMyCsmParser.g:3071:6: ruleEString
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getComponentRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getComponentAccess().getResourceReleaseResourceReleaseCrossReference_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    ruleEString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:3085:4: (otherlv_13= Comma ( ( ruleEString ) ) )*
                    loop77:
                    do {
                        int alt77=2;
                        int LA77_0 = input.LA(1);

                        if ( (LA77_0==Comma) ) {
                            alt77=1;
                        }


                        switch (alt77) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:3086:5: otherlv_13= Comma ( ( ruleEString ) )
                    	    {
                    	    otherlv_13=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_13, grammarAccess.getComponentAccess().getCommaKeyword_5_3_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:3090:5: ( ( ruleEString ) )
                    	    // InternalMyCsmParser.g:3091:6: ( ruleEString )
                    	    {
                    	    // InternalMyCsmParser.g:3091:6: ( ruleEString )
                    	    // InternalMyCsmParser.g:3092:7: ruleEString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getComponentRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getComponentAccess().getResourceReleaseResourceReleaseCrossReference_5_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    ruleEString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop77;
                        }
                    } while (true);

                    otherlv_15=(Token)match(input,RightParenthesis,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getComponentAccess().getRightParenthesisKeyword_5_4());
                      			
                    }

                    }
                    break;

            }

            this_END_16=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_16, grammarAccess.getComponentAccess().getENDTerminalRuleCall_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComponent"


    // $ANTLR start "entryRuleXBlockExpression"
    // InternalMyCsmParser.g:3120:1: entryRuleXBlockExpression returns [EObject current=null] : iv_ruleXBlockExpression= ruleXBlockExpression EOF ;
    public final EObject entryRuleXBlockExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBlockExpression = null;


        try {
            // InternalMyCsmParser.g:3120:57: (iv_ruleXBlockExpression= ruleXBlockExpression EOF )
            // InternalMyCsmParser.g:3121:2: iv_ruleXBlockExpression= ruleXBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBlockExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBlockExpression=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBlockExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBlockExpression"


    // $ANTLR start "ruleXBlockExpression"
    // InternalMyCsmParser.g:3127:1: ruleXBlockExpression returns [EObject current=null] : ( () this_BEGIN_1= RULE_BEGIN ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )* this_END_4= RULE_END ) ;
    public final EObject ruleXBlockExpression() throws RecognitionException {
        EObject current = null;

        Token this_BEGIN_1=null;
        Token otherlv_3=null;
        Token this_END_4=null;
        EObject lv_expressions_2_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:3133:2: ( ( () this_BEGIN_1= RULE_BEGIN ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )* this_END_4= RULE_END ) )
            // InternalMyCsmParser.g:3134:2: ( () this_BEGIN_1= RULE_BEGIN ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )* this_END_4= RULE_END )
            {
            // InternalMyCsmParser.g:3134:2: ( () this_BEGIN_1= RULE_BEGIN ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )* this_END_4= RULE_END )
            // InternalMyCsmParser.g:3135:3: () this_BEGIN_1= RULE_BEGIN ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )* this_END_4= RULE_END
            {
            // InternalMyCsmParser.g:3135:3: ()
            // InternalMyCsmParser.g:3136:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
              					current);
              			
            }

            }

            this_BEGIN_1=(Token)match(input,RULE_BEGIN,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_BEGIN_1, grammarAccess.getXBlockExpressionAccess().getBEGINTerminalRuleCall_1());
              		
            }
            // InternalMyCsmParser.g:3146:3: ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )? )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==Synchronized||LA80_0==Extension||LA80_0==Extends||(LA80_0>=Import && LA80_0<=Typeof)||(LA80_0>=False && LA80_0<=Throw)||LA80_0==While||LA80_0==Null||LA80_0==True||(LA80_0>=For && LA80_0<=New)||(LA80_0>=Try && LA80_0<=Var)||(LA80_0>=Do && LA80_0<=If)||(LA80_0>=ExclamationMark && LA80_0<=NumberSign)||LA80_0==LeftParenthesis||LA80_0==PlusSign||LA80_0==HyphenMinus||LA80_0==LessThanSign||LA80_0==LeftSquareBracket||LA80_0==RULE_BEGIN||(LA80_0>=RULE_HEX && LA80_0<=RULE_STRING)) ) {
                    alt80=1;
                }


                switch (alt80) {
            	case 1 :
            	    // InternalMyCsmParser.g:3147:4: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= Semicolon )?
            	    {
            	    // InternalMyCsmParser.g:3147:4: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalMyCsmParser.g:3148:5: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalMyCsmParser.g:3148:5: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    // InternalMyCsmParser.g:3149:6: lv_expressions_2_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_41);
            	    lv_expressions_2_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expressions",
            	      							lv_expressions_2_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalMyCsmParser.g:3166:4: (otherlv_3= Semicolon )?
            	    int alt79=2;
            	    int LA79_0 = input.LA(1);

            	    if ( (LA79_0==Semicolon) ) {
            	        alt79=1;
            	    }
            	    switch (alt79) {
            	        case 1 :
            	            // InternalMyCsmParser.g:3167:5: otherlv_3= Semicolon
            	            {
            	            otherlv_3=(Token)match(input,Semicolon,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

            this_END_4=(Token)match(input,RULE_END,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_END_4, grammarAccess.getXBlockExpressionAccess().getENDTerminalRuleCall_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBlockExpression"


    // $ANTLR start "entryRuleXExpression"
    // InternalMyCsmParser.g:3181:1: entryRuleXExpression returns [EObject current=null] : iv_ruleXExpression= ruleXExpression EOF ;
    public final EObject entryRuleXExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpression = null;


        try {
            // InternalMyCsmParser.g:3181:52: (iv_ruleXExpression= ruleXExpression EOF )
            // InternalMyCsmParser.g:3182:2: iv_ruleXExpression= ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpression=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // InternalMyCsmParser.g:3188:1: ruleXExpression returns [EObject current=null] : this_XAssignment_0= ruleXAssignment ;
    public final EObject ruleXExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAssignment_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:3194:2: (this_XAssignment_0= ruleXAssignment )
            // InternalMyCsmParser.g:3195:2: this_XAssignment_0= ruleXAssignment
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_XAssignment_0=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_XAssignment_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleXAssignment"
    // InternalMyCsmParser.g:3206:1: entryRuleXAssignment returns [EObject current=null] : iv_ruleXAssignment= ruleXAssignment EOF ;
    public final EObject entryRuleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAssignment = null;


        try {
            // InternalMyCsmParser.g:3206:52: (iv_ruleXAssignment= ruleXAssignment EOF )
            // InternalMyCsmParser.g:3207:2: iv_ruleXAssignment= ruleXAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAssignment=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAssignment"


    // $ANTLR start "ruleXAssignment"
    // InternalMyCsmParser.g:3213:1: ruleXAssignment returns [EObject current=null] : ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) ;
    public final EObject ruleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject lv_value_3_0 = null;

        EObject this_XOrExpression_4 = null;

        EObject lv_rightOperand_7_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:3219:2: ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) )
            // InternalMyCsmParser.g:3220:2: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            {
            // InternalMyCsmParser.g:3220:2: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            int alt82=2;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA82_1 = input.LA(2);

                if ( (LA82_1==EOF||(LA82_1>=Synchronized && LA82_1<=Instanceof)||LA82_1==Extension||(LA82_1>=Default && LA82_1<=Finally)||(LA82_1>=Import && LA82_1<=Typeof)||(LA82_1>=Catch && LA82_1<=Throw)||LA82_1==While||(LA82_1>=Case && LA82_1<=Null)||(LA82_1>=True && LA82_1<=EqualsSignEqualsSignEqualsSign)||(LA82_1>=For && LA82_1<=New)||(LA82_1>=Try && LA82_1<=PercentSign)||(LA82_1>=LeftParenthesis && LA82_1<=LessThanSign)||LA82_1==GreaterThanSign||(LA82_1>=LeftSquareBracket && LA82_1<=LeftCurlyBracket)||(LA82_1>=RightCurlyBracket && LA82_1<=RULE_STRING)) ) {
                    alt82=2;
                }
                else if ( (LA82_1==EqualsSign) ) {
                    alt82=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 82, 1, input);

                    throw nvae;
                }
                }
                break;
            case Extends:
                {
                int LA82_2 = input.LA(2);

                if ( (LA82_2==EOF||(LA82_2>=Synchronized && LA82_2<=Instanceof)||LA82_2==Extension||(LA82_2>=Default && LA82_2<=Finally)||(LA82_2>=Import && LA82_2<=Typeof)||(LA82_2>=Catch && LA82_2<=Throw)||LA82_2==While||(LA82_2>=Case && LA82_2<=Null)||(LA82_2>=True && LA82_2<=EqualsSignEqualsSignEqualsSign)||(LA82_2>=For && LA82_2<=New)||(LA82_2>=Try && LA82_2<=PercentSign)||(LA82_2>=LeftParenthesis && LA82_2<=LessThanSign)||LA82_2==GreaterThanSign||(LA82_2>=LeftSquareBracket && LA82_2<=LeftCurlyBracket)||(LA82_2>=RightCurlyBracket && LA82_2<=RULE_STRING)) ) {
                    alt82=2;
                }
                else if ( (LA82_2==EqualsSign) ) {
                    alt82=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 82, 2, input);

                    throw nvae;
                }
                }
                break;
            case Static:
                {
                int LA82_3 = input.LA(2);

                if ( (LA82_3==EOF||(LA82_3>=Synchronized && LA82_3<=Instanceof)||LA82_3==Extension||(LA82_3>=Default && LA82_3<=Finally)||(LA82_3>=Import && LA82_3<=Typeof)||(LA82_3>=Catch && LA82_3<=Throw)||LA82_3==While||(LA82_3>=Case && LA82_3<=Null)||(LA82_3>=True && LA82_3<=EqualsSignEqualsSignEqualsSign)||(LA82_3>=For && LA82_3<=New)||(LA82_3>=Try && LA82_3<=PercentSign)||(LA82_3>=LeftParenthesis && LA82_3<=LessThanSign)||LA82_3==GreaterThanSign||(LA82_3>=LeftSquareBracket && LA82_3<=LeftCurlyBracket)||(LA82_3>=RightCurlyBracket && LA82_3<=RULE_STRING)) ) {
                    alt82=2;
                }
                else if ( (LA82_3==EqualsSign) ) {
                    alt82=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 82, 3, input);

                    throw nvae;
                }
                }
                break;
            case Import:
                {
                int LA82_4 = input.LA(2);

                if ( (LA82_4==EqualsSign) ) {
                    alt82=1;
                }
                else if ( (LA82_4==EOF||(LA82_4>=Synchronized && LA82_4<=Instanceof)||LA82_4==Extension||(LA82_4>=Default && LA82_4<=Finally)||(LA82_4>=Import && LA82_4<=Typeof)||(LA82_4>=Catch && LA82_4<=Throw)||LA82_4==While||(LA82_4>=Case && LA82_4<=Null)||(LA82_4>=True && LA82_4<=EqualsSignEqualsSignEqualsSign)||(LA82_4>=For && LA82_4<=New)||(LA82_4>=Try && LA82_4<=PercentSign)||(LA82_4>=LeftParenthesis && LA82_4<=LessThanSign)||LA82_4==GreaterThanSign||(LA82_4>=LeftSquareBracket && LA82_4<=LeftCurlyBracket)||(LA82_4>=RightCurlyBracket && LA82_4<=RULE_STRING)) ) {
                    alt82=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 82, 4, input);

                    throw nvae;
                }
                }
                break;
            case Extension:
                {
                int LA82_5 = input.LA(2);

                if ( (LA82_5==EOF||(LA82_5>=Synchronized && LA82_5<=Instanceof)||LA82_5==Extension||(LA82_5>=Default && LA82_5<=Finally)||(LA82_5>=Import && LA82_5<=Typeof)||(LA82_5>=Catch && LA82_5<=Throw)||LA82_5==While||(LA82_5>=Case && LA82_5<=Null)||(LA82_5>=True && LA82_5<=EqualsSignEqualsSignEqualsSign)||(LA82_5>=For && LA82_5<=New)||(LA82_5>=Try && LA82_5<=PercentSign)||(LA82_5>=LeftParenthesis && LA82_5<=LessThanSign)||LA82_5==GreaterThanSign||(LA82_5>=LeftSquareBracket && LA82_5<=LeftCurlyBracket)||(LA82_5>=RightCurlyBracket && LA82_5<=RULE_STRING)) ) {
                    alt82=2;
                }
                else if ( (LA82_5==EqualsSign) ) {
                    alt82=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 82, 5, input);

                    throw nvae;
                }
                }
                break;
            case Synchronized:
            case Return:
            case Switch:
            case Typeof:
            case False:
            case Super:
            case Throw:
            case While:
            case Null:
            case True:
            case For:
            case New:
            case Try:
            case Do:
            case If:
            case ExclamationMark:
            case NumberSign:
            case LeftParenthesis:
            case PlusSign:
            case HyphenMinus:
            case LessThanSign:
            case LeftSquareBracket:
            case RULE_BEGIN:
            case RULE_HEX:
            case RULE_INT:
            case RULE_DECIMAL:
            case RULE_STRING:
                {
                alt82=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 82, 0, input);

                throw nvae;
            }

            switch (alt82) {
                case 1 :
                    // InternalMyCsmParser.g:3221:3: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    {
                    // InternalMyCsmParser.g:3221:3: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    // InternalMyCsmParser.g:3222:4: () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) )
                    {
                    // InternalMyCsmParser.g:3222:4: ()
                    // InternalMyCsmParser.g:3223:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalMyCsmParser.g:3229:4: ( ( ruleFeatureCallID ) )
                    // InternalMyCsmParser.g:3230:5: ( ruleFeatureCallID )
                    {
                    // InternalMyCsmParser.g:3230:5: ( ruleFeatureCallID )
                    // InternalMyCsmParser.g:3231:6: ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXAssignmentRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_42);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2());
                      			
                    }
                    pushFollow(FOLLOW_43);
                    ruleOpSingleAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalMyCsmParser.g:3252:4: ( (lv_value_3_0= ruleXAssignment ) )
                    // InternalMyCsmParser.g:3253:5: (lv_value_3_0= ruleXAssignment )
                    {
                    // InternalMyCsmParser.g:3253:5: (lv_value_3_0= ruleXAssignment )
                    // InternalMyCsmParser.g:3254:6: lv_value_3_0= ruleXAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=ruleXAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:3273:3: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    {
                    // InternalMyCsmParser.g:3273:3: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    // InternalMyCsmParser.g:3274:4: this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_44);
                    this_XOrExpression_4=ruleXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XOrExpression_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalMyCsmParser.g:3282:4: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    int alt81=2;
                    alt81 = dfa81.predict(input);
                    switch (alt81) {
                        case 1 :
                            // InternalMyCsmParser.g:3283:5: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            {
                            // InternalMyCsmParser.g:3283:5: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) )
                            // InternalMyCsmParser.g:3284:6: ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) )
                            {
                            // InternalMyCsmParser.g:3294:6: ( () ( ( ruleOpMultiAssign ) ) )
                            // InternalMyCsmParser.g:3295:7: () ( ( ruleOpMultiAssign ) )
                            {
                            // InternalMyCsmParser.g:3295:7: ()
                            // InternalMyCsmParser.g:3296:8: 
                            {
                            if ( state.backtracking==0 ) {

                              								current = forceCreateModelElementAndSet(
                              									grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
                              									current);
                              							
                            }

                            }

                            // InternalMyCsmParser.g:3302:7: ( ( ruleOpMultiAssign ) )
                            // InternalMyCsmParser.g:3303:8: ( ruleOpMultiAssign )
                            {
                            // InternalMyCsmParser.g:3303:8: ( ruleOpMultiAssign )
                            // InternalMyCsmParser.g:3304:9: ruleOpMultiAssign
                            {
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getXAssignmentRule());
                              									}
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
                              								
                            }
                            pushFollow(FOLLOW_43);
                            ruleOpMultiAssign();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }


                            }


                            }

                            // InternalMyCsmParser.g:3320:5: ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            // InternalMyCsmParser.g:3321:6: (lv_rightOperand_7_0= ruleXAssignment )
                            {
                            // InternalMyCsmParser.g:3321:6: (lv_rightOperand_7_0= ruleXAssignment )
                            // InternalMyCsmParser.g:3322:7: lv_rightOperand_7_0= ruleXAssignment
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_rightOperand_7_0=ruleXAssignment();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              							}
                              							set(
                              								current,
                              								"rightOperand",
                              								lv_rightOperand_7_0,
                              								"org.eclipse.xtext.xbase.Xbase.XAssignment");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAssignment"


    // $ANTLR start "entryRuleOpSingleAssign"
    // InternalMyCsmParser.g:3345:1: entryRuleOpSingleAssign returns [String current=null] : iv_ruleOpSingleAssign= ruleOpSingleAssign EOF ;
    public final String entryRuleOpSingleAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpSingleAssign = null;


        try {
            // InternalMyCsmParser.g:3345:54: (iv_ruleOpSingleAssign= ruleOpSingleAssign EOF )
            // InternalMyCsmParser.g:3346:2: iv_ruleOpSingleAssign= ruleOpSingleAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpSingleAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpSingleAssign=ruleOpSingleAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpSingleAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpSingleAssign"


    // $ANTLR start "ruleOpSingleAssign"
    // InternalMyCsmParser.g:3352:1: ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= EqualsSign ;
    public final AntlrDatatypeRuleToken ruleOpSingleAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyCsmParser.g:3358:2: (kw= EqualsSign )
            // InternalMyCsmParser.g:3359:2: kw= EqualsSign
            {
            kw=(Token)match(input,EqualsSign,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpSingleAssign"


    // $ANTLR start "entryRuleOpMultiAssign"
    // InternalMyCsmParser.g:3367:1: entryRuleOpMultiAssign returns [String current=null] : iv_ruleOpMultiAssign= ruleOpMultiAssign EOF ;
    public final String entryRuleOpMultiAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMultiAssign = null;


        try {
            // InternalMyCsmParser.g:3367:53: (iv_ruleOpMultiAssign= ruleOpMultiAssign EOF )
            // InternalMyCsmParser.g:3368:2: iv_ruleOpMultiAssign= ruleOpMultiAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMultiAssign=ruleOpMultiAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMultiAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMultiAssign"


    // $ANTLR start "ruleOpMultiAssign"
    // InternalMyCsmParser.g:3374:1: ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= PlusSignEqualsSign | kw= HyphenMinusEqualsSign | kw= AsteriskEqualsSign | kw= SolidusEqualsSign | kw= PercentSignEqualsSign | (kw= LessThanSign kw= LessThanSign kw= EqualsSign ) | (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign ) ) ;
    public final AntlrDatatypeRuleToken ruleOpMultiAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyCsmParser.g:3380:2: ( (kw= PlusSignEqualsSign | kw= HyphenMinusEqualsSign | kw= AsteriskEqualsSign | kw= SolidusEqualsSign | kw= PercentSignEqualsSign | (kw= LessThanSign kw= LessThanSign kw= EqualsSign ) | (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign ) ) )
            // InternalMyCsmParser.g:3381:2: (kw= PlusSignEqualsSign | kw= HyphenMinusEqualsSign | kw= AsteriskEqualsSign | kw= SolidusEqualsSign | kw= PercentSignEqualsSign | (kw= LessThanSign kw= LessThanSign kw= EqualsSign ) | (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign ) )
            {
            // InternalMyCsmParser.g:3381:2: (kw= PlusSignEqualsSign | kw= HyphenMinusEqualsSign | kw= AsteriskEqualsSign | kw= SolidusEqualsSign | kw= PercentSignEqualsSign | (kw= LessThanSign kw= LessThanSign kw= EqualsSign ) | (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign ) )
            int alt84=7;
            switch ( input.LA(1) ) {
            case PlusSignEqualsSign:
                {
                alt84=1;
                }
                break;
            case HyphenMinusEqualsSign:
                {
                alt84=2;
                }
                break;
            case AsteriskEqualsSign:
                {
                alt84=3;
                }
                break;
            case SolidusEqualsSign:
                {
                alt84=4;
                }
                break;
            case PercentSignEqualsSign:
                {
                alt84=5;
                }
                break;
            case LessThanSign:
                {
                alt84=6;
                }
                break;
            case GreaterThanSign:
                {
                alt84=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }

            switch (alt84) {
                case 1 :
                    // InternalMyCsmParser.g:3382:3: kw= PlusSignEqualsSign
                    {
                    kw=(Token)match(input,PlusSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:3388:3: kw= HyphenMinusEqualsSign
                    {
                    kw=(Token)match(input,HyphenMinusEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyCsmParser.g:3394:3: kw= AsteriskEqualsSign
                    {
                    kw=(Token)match(input,AsteriskEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyCsmParser.g:3400:3: kw= SolidusEqualsSign
                    {
                    kw=(Token)match(input,SolidusEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMyCsmParser.g:3406:3: kw= PercentSignEqualsSign
                    {
                    kw=(Token)match(input,PercentSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalMyCsmParser.g:3412:3: (kw= LessThanSign kw= LessThanSign kw= EqualsSign )
                    {
                    // InternalMyCsmParser.g:3412:3: (kw= LessThanSign kw= LessThanSign kw= EqualsSign )
                    // InternalMyCsmParser.g:3413:4: kw= LessThanSign kw= LessThanSign kw= EqualsSign
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_0());
                      			
                    }
                    kw=(Token)match(input,LessThanSign,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_1());
                      			
                    }
                    kw=(Token)match(input,EqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_5_2());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalMyCsmParser.g:3430:3: (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign )
                    {
                    // InternalMyCsmParser.g:3430:3: (kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign )
                    // InternalMyCsmParser.g:3431:4: kw= GreaterThanSign (kw= GreaterThanSign )? kw= GreaterThanSignEqualsSign
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_0());
                      			
                    }
                    // InternalMyCsmParser.g:3436:4: (kw= GreaterThanSign )?
                    int alt83=2;
                    int LA83_0 = input.LA(1);

                    if ( (LA83_0==GreaterThanSign) ) {
                        alt83=1;
                    }
                    switch (alt83) {
                        case 1 :
                            // InternalMyCsmParser.g:3437:5: kw= GreaterThanSign
                            {
                            kw=(Token)match(input,GreaterThanSign,FOLLOW_47); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_1());
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_6_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMultiAssign"


    // $ANTLR start "entryRuleXOrExpression"
    // InternalMyCsmParser.g:3453:1: entryRuleXOrExpression returns [EObject current=null] : iv_ruleXOrExpression= ruleXOrExpression EOF ;
    public final EObject entryRuleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOrExpression = null;


        try {
            // InternalMyCsmParser.g:3453:54: (iv_ruleXOrExpression= ruleXOrExpression EOF )
            // InternalMyCsmParser.g:3454:2: iv_ruleXOrExpression= ruleXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOrExpression=ruleXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOrExpression"


    // $ANTLR start "ruleXOrExpression"
    // InternalMyCsmParser.g:3460:1: ruleXOrExpression returns [EObject current=null] : (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) ;
    public final EObject ruleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAndExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:3466:2: ( (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) )
            // InternalMyCsmParser.g:3467:2: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            {
            // InternalMyCsmParser.g:3467:2: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            // InternalMyCsmParser.g:3468:3: this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_48);
            this_XAndExpression_0=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyCsmParser.g:3476:3: ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==VerticalLineVerticalLine) ) {
                    int LA85_2 = input.LA(2);

                    if ( (synpred2_InternalMyCsmParser()) ) {
                        alt85=1;
                    }


                }


                switch (alt85) {
            	case 1 :
            	    // InternalMyCsmParser.g:3477:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    {
            	    // InternalMyCsmParser.g:3477:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) )
            	    // InternalMyCsmParser.g:3478:5: ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) )
            	    {
            	    // InternalMyCsmParser.g:3488:5: ( () ( ( ruleOpOr ) ) )
            	    // InternalMyCsmParser.g:3489:6: () ( ( ruleOpOr ) )
            	    {
            	    // InternalMyCsmParser.g:3489:6: ()
            	    // InternalMyCsmParser.g:3490:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalMyCsmParser.g:3496:6: ( ( ruleOpOr ) )
            	    // InternalMyCsmParser.g:3497:7: ( ruleOpOr )
            	    {
            	    // InternalMyCsmParser.g:3497:7: ( ruleOpOr )
            	    // InternalMyCsmParser.g:3498:8: ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXOrExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_43);
            	    ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalMyCsmParser.g:3514:4: ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    // InternalMyCsmParser.g:3515:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    {
            	    // InternalMyCsmParser.g:3515:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    // InternalMyCsmParser.g:3516:6: lv_rightOperand_3_0= ruleXAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_48);
            	    lv_rightOperand_3_0=ruleXAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XAndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOrExpression"


    // $ANTLR start "entryRuleOpOr"
    // InternalMyCsmParser.g:3538:1: entryRuleOpOr returns [String current=null] : iv_ruleOpOr= ruleOpOr EOF ;
    public final String entryRuleOpOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOr = null;


        try {
            // InternalMyCsmParser.g:3538:44: (iv_ruleOpOr= ruleOpOr EOF )
            // InternalMyCsmParser.g:3539:2: iv_ruleOpOr= ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // InternalMyCsmParser.g:3545:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= VerticalLineVerticalLine ;
    public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyCsmParser.g:3551:2: (kw= VerticalLineVerticalLine )
            // InternalMyCsmParser.g:3552:2: kw= VerticalLineVerticalLine
            {
            kw=(Token)match(input,VerticalLineVerticalLine,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleXAndExpression"
    // InternalMyCsmParser.g:3560:1: entryRuleXAndExpression returns [EObject current=null] : iv_ruleXAndExpression= ruleXAndExpression EOF ;
    public final EObject entryRuleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAndExpression = null;


        try {
            // InternalMyCsmParser.g:3560:55: (iv_ruleXAndExpression= ruleXAndExpression EOF )
            // InternalMyCsmParser.g:3561:2: iv_ruleXAndExpression= ruleXAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAndExpression=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAndExpression"


    // $ANTLR start "ruleXAndExpression"
    // InternalMyCsmParser.g:3567:1: ruleXAndExpression returns [EObject current=null] : (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) ;
    public final EObject ruleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XEqualityExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:3573:2: ( (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) )
            // InternalMyCsmParser.g:3574:2: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            {
            // InternalMyCsmParser.g:3574:2: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            // InternalMyCsmParser.g:3575:3: this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_49);
            this_XEqualityExpression_0=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XEqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyCsmParser.g:3583:3: ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==AmpersandAmpersand) ) {
                    int LA86_2 = input.LA(2);

                    if ( (synpred3_InternalMyCsmParser()) ) {
                        alt86=1;
                    }


                }


                switch (alt86) {
            	case 1 :
            	    // InternalMyCsmParser.g:3584:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    {
            	    // InternalMyCsmParser.g:3584:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) )
            	    // InternalMyCsmParser.g:3585:5: ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) )
            	    {
            	    // InternalMyCsmParser.g:3595:5: ( () ( ( ruleOpAnd ) ) )
            	    // InternalMyCsmParser.g:3596:6: () ( ( ruleOpAnd ) )
            	    {
            	    // InternalMyCsmParser.g:3596:6: ()
            	    // InternalMyCsmParser.g:3597:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalMyCsmParser.g:3603:6: ( ( ruleOpAnd ) )
            	    // InternalMyCsmParser.g:3604:7: ( ruleOpAnd )
            	    {
            	    // InternalMyCsmParser.g:3604:7: ( ruleOpAnd )
            	    // InternalMyCsmParser.g:3605:8: ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXAndExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_43);
            	    ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalMyCsmParser.g:3621:4: ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    // InternalMyCsmParser.g:3622:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    {
            	    // InternalMyCsmParser.g:3622:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    // InternalMyCsmParser.g:3623:6: lv_rightOperand_3_0= ruleXEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_49);
            	    lv_rightOperand_3_0=ruleXEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XEqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAndExpression"


    // $ANTLR start "entryRuleOpAnd"
    // InternalMyCsmParser.g:3645:1: entryRuleOpAnd returns [String current=null] : iv_ruleOpAnd= ruleOpAnd EOF ;
    public final String entryRuleOpAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAnd = null;


        try {
            // InternalMyCsmParser.g:3645:45: (iv_ruleOpAnd= ruleOpAnd EOF )
            // InternalMyCsmParser.g:3646:2: iv_ruleOpAnd= ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // InternalMyCsmParser.g:3652:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= AmpersandAmpersand ;
    public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyCsmParser.g:3658:2: (kw= AmpersandAmpersand )
            // InternalMyCsmParser.g:3659:2: kw= AmpersandAmpersand
            {
            kw=(Token)match(input,AmpersandAmpersand,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleXEqualityExpression"
    // InternalMyCsmParser.g:3667:1: entryRuleXEqualityExpression returns [EObject current=null] : iv_ruleXEqualityExpression= ruleXEqualityExpression EOF ;
    public final EObject entryRuleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXEqualityExpression = null;


        try {
            // InternalMyCsmParser.g:3667:60: (iv_ruleXEqualityExpression= ruleXEqualityExpression EOF )
            // InternalMyCsmParser.g:3668:2: iv_ruleXEqualityExpression= ruleXEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXEqualityExpression=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXEqualityExpression"


    // $ANTLR start "ruleXEqualityExpression"
    // InternalMyCsmParser.g:3674:1: ruleXEqualityExpression returns [EObject current=null] : (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) ;
    public final EObject ruleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XRelationalExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:3680:2: ( (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) )
            // InternalMyCsmParser.g:3681:2: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            {
            // InternalMyCsmParser.g:3681:2: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            // InternalMyCsmParser.g:3682:3: this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_50);
            this_XRelationalExpression_0=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XRelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyCsmParser.g:3690:3: ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            loop87:
            do {
                int alt87=2;
                switch ( input.LA(1) ) {
                case EqualsSignEqualsSign:
                    {
                    int LA87_2 = input.LA(2);

                    if ( (synpred4_InternalMyCsmParser()) ) {
                        alt87=1;
                    }


                    }
                    break;
                case ExclamationMarkEqualsSign:
                    {
                    int LA87_3 = input.LA(2);

                    if ( (synpred4_InternalMyCsmParser()) ) {
                        alt87=1;
                    }


                    }
                    break;
                case EqualsSignEqualsSignEqualsSign:
                    {
                    int LA87_4 = input.LA(2);

                    if ( (synpred4_InternalMyCsmParser()) ) {
                        alt87=1;
                    }


                    }
                    break;
                case ExclamationMarkEqualsSignEqualsSign:
                    {
                    int LA87_5 = input.LA(2);

                    if ( (synpred4_InternalMyCsmParser()) ) {
                        alt87=1;
                    }


                    }
                    break;

                }

                switch (alt87) {
            	case 1 :
            	    // InternalMyCsmParser.g:3691:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    {
            	    // InternalMyCsmParser.g:3691:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) )
            	    // InternalMyCsmParser.g:3692:5: ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) )
            	    {
            	    // InternalMyCsmParser.g:3702:5: ( () ( ( ruleOpEquality ) ) )
            	    // InternalMyCsmParser.g:3703:6: () ( ( ruleOpEquality ) )
            	    {
            	    // InternalMyCsmParser.g:3703:6: ()
            	    // InternalMyCsmParser.g:3704:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalMyCsmParser.g:3710:6: ( ( ruleOpEquality ) )
            	    // InternalMyCsmParser.g:3711:7: ( ruleOpEquality )
            	    {
            	    // InternalMyCsmParser.g:3711:7: ( ruleOpEquality )
            	    // InternalMyCsmParser.g:3712:8: ruleOpEquality
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXEqualityExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_43);
            	    ruleOpEquality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalMyCsmParser.g:3728:4: ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    // InternalMyCsmParser.g:3729:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    {
            	    // InternalMyCsmParser.g:3729:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    // InternalMyCsmParser.g:3730:6: lv_rightOperand_3_0= ruleXRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_50);
            	    lv_rightOperand_3_0=ruleXRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XRelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXEqualityExpression"


    // $ANTLR start "entryRuleOpEquality"
    // InternalMyCsmParser.g:3752:1: entryRuleOpEquality returns [String current=null] : iv_ruleOpEquality= ruleOpEquality EOF ;
    public final String entryRuleOpEquality() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpEquality = null;


        try {
            // InternalMyCsmParser.g:3752:50: (iv_ruleOpEquality= ruleOpEquality EOF )
            // InternalMyCsmParser.g:3753:2: iv_ruleOpEquality= ruleOpEquality EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpEqualityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpEquality=ruleOpEquality();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpEquality.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpEquality"


    // $ANTLR start "ruleOpEquality"
    // InternalMyCsmParser.g:3759:1: ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSignEqualsSignEqualsSign | kw= ExclamationMarkEqualsSignEqualsSign ) ;
    public final AntlrDatatypeRuleToken ruleOpEquality() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyCsmParser.g:3765:2: ( (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSignEqualsSignEqualsSign | kw= ExclamationMarkEqualsSignEqualsSign ) )
            // InternalMyCsmParser.g:3766:2: (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSignEqualsSignEqualsSign | kw= ExclamationMarkEqualsSignEqualsSign )
            {
            // InternalMyCsmParser.g:3766:2: (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSignEqualsSignEqualsSign | kw= ExclamationMarkEqualsSignEqualsSign )
            int alt88=4;
            switch ( input.LA(1) ) {
            case EqualsSignEqualsSign:
                {
                alt88=1;
                }
                break;
            case ExclamationMarkEqualsSign:
                {
                alt88=2;
                }
                break;
            case EqualsSignEqualsSignEqualsSign:
                {
                alt88=3;
                }
                break;
            case ExclamationMarkEqualsSignEqualsSign:
                {
                alt88=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;
            }

            switch (alt88) {
                case 1 :
                    // InternalMyCsmParser.g:3767:3: kw= EqualsSignEqualsSign
                    {
                    kw=(Token)match(input,EqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:3773:3: kw= ExclamationMarkEqualsSign
                    {
                    kw=(Token)match(input,ExclamationMarkEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyCsmParser.g:3779:3: kw= EqualsSignEqualsSignEqualsSign
                    {
                    kw=(Token)match(input,EqualsSignEqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyCsmParser.g:3785:3: kw= ExclamationMarkEqualsSignEqualsSign
                    {
                    kw=(Token)match(input,ExclamationMarkEqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpEquality"


    // $ANTLR start "entryRuleXRelationalExpression"
    // InternalMyCsmParser.g:3794:1: entryRuleXRelationalExpression returns [EObject current=null] : iv_ruleXRelationalExpression= ruleXRelationalExpression EOF ;
    public final EObject entryRuleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXRelationalExpression = null;


        try {
            // InternalMyCsmParser.g:3794:62: (iv_ruleXRelationalExpression= ruleXRelationalExpression EOF )
            // InternalMyCsmParser.g:3795:2: iv_ruleXRelationalExpression= ruleXRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXRelationalExpression=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXRelationalExpression"


    // $ANTLR start "ruleXRelationalExpression"
    // InternalMyCsmParser.g:3801:1: ruleXRelationalExpression returns [EObject current=null] : (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) ;
    public final EObject ruleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XOtherOperatorExpression_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_rightOperand_6_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:3807:2: ( (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) )
            // InternalMyCsmParser.g:3808:2: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            {
            // InternalMyCsmParser.g:3808:2: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            // InternalMyCsmParser.g:3809:3: this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_51);
            this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XOtherOperatorExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyCsmParser.g:3817:3: ( ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            loop89:
            do {
                int alt89=3;
                switch ( input.LA(1) ) {
                case LessThanSign:
                    {
                    int LA89_2 = input.LA(2);

                    if ( (synpred6_InternalMyCsmParser()) ) {
                        alt89=2;
                    }


                    }
                    break;
                case GreaterThanSign:
                    {
                    int LA89_3 = input.LA(2);

                    if ( (synpred6_InternalMyCsmParser()) ) {
                        alt89=2;
                    }


                    }
                    break;
                case Instanceof:
                    {
                    int LA89_4 = input.LA(2);

                    if ( (synpred5_InternalMyCsmParser()) ) {
                        alt89=1;
                    }


                    }
                    break;
                case GreaterThanSignEqualsSign:
                    {
                    int LA89_5 = input.LA(2);

                    if ( (synpred6_InternalMyCsmParser()) ) {
                        alt89=2;
                    }


                    }
                    break;

                }

                switch (alt89) {
            	case 1 :
            	    // InternalMyCsmParser.g:3818:4: ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    {
            	    // InternalMyCsmParser.g:3818:4: ( ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    // InternalMyCsmParser.g:3819:5: ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalMyCsmParser.g:3819:5: ( ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof ) )
            	    // InternalMyCsmParser.g:3820:6: ( ( () Instanceof ) )=> ( () otherlv_2= Instanceof )
            	    {
            	    // InternalMyCsmParser.g:3826:6: ( () otherlv_2= Instanceof )
            	    // InternalMyCsmParser.g:3827:7: () otherlv_2= Instanceof
            	    {
            	    // InternalMyCsmParser.g:3827:7: ()
            	    // InternalMyCsmParser.g:3828:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    otherlv_2=(Token)match(input,Instanceof,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
            	      						
            	    }

            	    }


            	    }

            	    // InternalMyCsmParser.g:3840:5: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalMyCsmParser.g:3841:6: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalMyCsmParser.g:3841:6: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalMyCsmParser.g:3842:7: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_51);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"type",
            	      								lv_type_3_0,
            	      								"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMyCsmParser.g:3861:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    {
            	    // InternalMyCsmParser.g:3861:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    // InternalMyCsmParser.g:3862:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    {
            	    // InternalMyCsmParser.g:3862:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) )
            	    // InternalMyCsmParser.g:3863:6: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) )
            	    {
            	    // InternalMyCsmParser.g:3873:6: ( () ( ( ruleOpCompare ) ) )
            	    // InternalMyCsmParser.g:3874:7: () ( ( ruleOpCompare ) )
            	    {
            	    // InternalMyCsmParser.g:3874:7: ()
            	    // InternalMyCsmParser.g:3875:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalMyCsmParser.g:3881:7: ( ( ruleOpCompare ) )
            	    // InternalMyCsmParser.g:3882:8: ( ruleOpCompare )
            	    {
            	    // InternalMyCsmParser.g:3882:8: ( ruleOpCompare )
            	    // InternalMyCsmParser.g:3883:9: ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getXRelationalExpressionRule());
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_43);
            	    ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalMyCsmParser.g:3899:5: ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    // InternalMyCsmParser.g:3900:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    {
            	    // InternalMyCsmParser.g:3900:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    // InternalMyCsmParser.g:3901:7: lv_rightOperand_6_0= ruleXOtherOperatorExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_51);
            	    lv_rightOperand_6_0=ruleXOtherOperatorExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"rightOperand",
            	      								lv_rightOperand_6_0,
            	      								"org.eclipse.xtext.xbase.Xbase.XOtherOperatorExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXRelationalExpression"


    // $ANTLR start "entryRuleOpCompare"
    // InternalMyCsmParser.g:3924:1: entryRuleOpCompare returns [String current=null] : iv_ruleOpCompare= ruleOpCompare EOF ;
    public final String entryRuleOpCompare() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpCompare = null;


        try {
            // InternalMyCsmParser.g:3924:49: (iv_ruleOpCompare= ruleOpCompare EOF )
            // InternalMyCsmParser.g:3925:2: iv_ruleOpCompare= ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpCompareRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // InternalMyCsmParser.g:3931:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= GreaterThanSignEqualsSign | (kw= LessThanSign kw= EqualsSign ) | kw= GreaterThanSign | kw= LessThanSign ) ;
    public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyCsmParser.g:3937:2: ( (kw= GreaterThanSignEqualsSign | (kw= LessThanSign kw= EqualsSign ) | kw= GreaterThanSign | kw= LessThanSign ) )
            // InternalMyCsmParser.g:3938:2: (kw= GreaterThanSignEqualsSign | (kw= LessThanSign kw= EqualsSign ) | kw= GreaterThanSign | kw= LessThanSign )
            {
            // InternalMyCsmParser.g:3938:2: (kw= GreaterThanSignEqualsSign | (kw= LessThanSign kw= EqualsSign ) | kw= GreaterThanSign | kw= LessThanSign )
            int alt90=4;
            switch ( input.LA(1) ) {
            case GreaterThanSignEqualsSign:
                {
                alt90=1;
                }
                break;
            case LessThanSign:
                {
                int LA90_2 = input.LA(2);

                if ( (LA90_2==EOF||LA90_2==Synchronized||LA90_2==Extension||LA90_2==Extends||(LA90_2>=Import && LA90_2<=Typeof)||(LA90_2>=False && LA90_2<=Throw)||LA90_2==While||LA90_2==Null||LA90_2==True||(LA90_2>=For && LA90_2<=New)||LA90_2==Try||(LA90_2>=Do && LA90_2<=If)||(LA90_2>=ExclamationMark && LA90_2<=NumberSign)||LA90_2==LeftParenthesis||LA90_2==PlusSign||LA90_2==HyphenMinus||LA90_2==LessThanSign||LA90_2==LeftSquareBracket||LA90_2==RULE_BEGIN||(LA90_2>=RULE_HEX && LA90_2<=RULE_STRING)) ) {
                    alt90=4;
                }
                else if ( (LA90_2==EqualsSign) ) {
                    alt90=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 90, 2, input);

                    throw nvae;
                }
                }
                break;
            case GreaterThanSign:
                {
                alt90=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 90, 0, input);

                throw nvae;
            }

            switch (alt90) {
                case 1 :
                    // InternalMyCsmParser.g:3939:3: kw= GreaterThanSignEqualsSign
                    {
                    kw=(Token)match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:3945:3: (kw= LessThanSign kw= EqualsSign )
                    {
                    // InternalMyCsmParser.g:3945:3: (kw= LessThanSign kw= EqualsSign )
                    // InternalMyCsmParser.g:3946:4: kw= LessThanSign kw= EqualsSign
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0());
                      			
                    }
                    kw=(Token)match(input,EqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyCsmParser.g:3958:3: kw= GreaterThanSign
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyCsmParser.g:3964:3: kw= LessThanSign
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleXOtherOperatorExpression"
    // InternalMyCsmParser.g:3973:1: entryRuleXOtherOperatorExpression returns [EObject current=null] : iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF ;
    public final EObject entryRuleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOtherOperatorExpression = null;


        try {
            // InternalMyCsmParser.g:3973:65: (iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF )
            // InternalMyCsmParser.g:3974:2: iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOtherOperatorExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOtherOperatorExpression"


    // $ANTLR start "ruleXOtherOperatorExpression"
    // InternalMyCsmParser.g:3980:1: ruleXOtherOperatorExpression returns [EObject current=null] : (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) ;
    public final EObject ruleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAdditiveExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:3986:2: ( (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) )
            // InternalMyCsmParser.g:3987:2: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            {
            // InternalMyCsmParser.g:3987:2: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            // InternalMyCsmParser.g:3988:3: this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_53);
            this_XAdditiveExpression_0=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAdditiveExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyCsmParser.g:3996:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            loop91:
            do {
                int alt91=2;
                alt91 = dfa91.predict(input);
                switch (alt91) {
            	case 1 :
            	    // InternalMyCsmParser.g:3997:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    {
            	    // InternalMyCsmParser.g:3997:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) )
            	    // InternalMyCsmParser.g:3998:5: ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) )
            	    {
            	    // InternalMyCsmParser.g:4008:5: ( () ( ( ruleOpOther ) ) )
            	    // InternalMyCsmParser.g:4009:6: () ( ( ruleOpOther ) )
            	    {
            	    // InternalMyCsmParser.g:4009:6: ()
            	    // InternalMyCsmParser.g:4010:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalMyCsmParser.g:4016:6: ( ( ruleOpOther ) )
            	    // InternalMyCsmParser.g:4017:7: ( ruleOpOther )
            	    {
            	    // InternalMyCsmParser.g:4017:7: ( ruleOpOther )
            	    // InternalMyCsmParser.g:4018:8: ruleOpOther
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_43);
            	    ruleOpOther();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalMyCsmParser.g:4034:4: ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    // InternalMyCsmParser.g:4035:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    {
            	    // InternalMyCsmParser.g:4035:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    // InternalMyCsmParser.g:4036:6: lv_rightOperand_3_0= ruleXAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_53);
            	    lv_rightOperand_3_0=ruleXAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XAdditiveExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOtherOperatorExpression"


    // $ANTLR start "entryRuleOpOther"
    // InternalMyCsmParser.g:4058:1: entryRuleOpOther returns [String current=null] : iv_ruleOpOther= ruleOpOther EOF ;
    public final String entryRuleOpOther() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOther = null;


        try {
            // InternalMyCsmParser.g:4058:47: (iv_ruleOpOther= ruleOpOther EOF )
            // InternalMyCsmParser.g:4059:2: iv_ruleOpOther= ruleOpOther EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOtherRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOther=ruleOpOther();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOther.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOther"


    // $ANTLR start "ruleOpOther"
    // InternalMyCsmParser.g:4065:1: ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= HyphenMinusGreaterThanSign | kw= FullStopFullStopLessThanSign | (kw= GreaterThanSign kw= FullStopFullStop ) | kw= FullStopFullStop | kw= EqualsSignGreaterThanSign | (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) ) | (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) ) | kw= LessThanSignGreaterThanSign | kw= QuestionMarkColon ) ;
    public final AntlrDatatypeRuleToken ruleOpOther() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyCsmParser.g:4071:2: ( (kw= HyphenMinusGreaterThanSign | kw= FullStopFullStopLessThanSign | (kw= GreaterThanSign kw= FullStopFullStop ) | kw= FullStopFullStop | kw= EqualsSignGreaterThanSign | (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) ) | (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) ) | kw= LessThanSignGreaterThanSign | kw= QuestionMarkColon ) )
            // InternalMyCsmParser.g:4072:2: (kw= HyphenMinusGreaterThanSign | kw= FullStopFullStopLessThanSign | (kw= GreaterThanSign kw= FullStopFullStop ) | kw= FullStopFullStop | kw= EqualsSignGreaterThanSign | (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) ) | (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) ) | kw= LessThanSignGreaterThanSign | kw= QuestionMarkColon )
            {
            // InternalMyCsmParser.g:4072:2: (kw= HyphenMinusGreaterThanSign | kw= FullStopFullStopLessThanSign | (kw= GreaterThanSign kw= FullStopFullStop ) | kw= FullStopFullStop | kw= EqualsSignGreaterThanSign | (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) ) | (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) ) | kw= LessThanSignGreaterThanSign | kw= QuestionMarkColon )
            int alt94=9;
            alt94 = dfa94.predict(input);
            switch (alt94) {
                case 1 :
                    // InternalMyCsmParser.g:4073:3: kw= HyphenMinusGreaterThanSign
                    {
                    kw=(Token)match(input,HyphenMinusGreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:4079:3: kw= FullStopFullStopLessThanSign
                    {
                    kw=(Token)match(input,FullStopFullStopLessThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyCsmParser.g:4085:3: (kw= GreaterThanSign kw= FullStopFullStop )
                    {
                    // InternalMyCsmParser.g:4085:3: (kw= GreaterThanSign kw= FullStopFullStop )
                    // InternalMyCsmParser.g:4086:4: kw= GreaterThanSign kw= FullStopFullStop
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0());
                      			
                    }
                    kw=(Token)match(input,FullStopFullStop,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMyCsmParser.g:4098:3: kw= FullStopFullStop
                    {
                    kw=(Token)match(input,FullStopFullStop,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMyCsmParser.g:4104:3: kw= EqualsSignGreaterThanSign
                    {
                    kw=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalMyCsmParser.g:4110:3: (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) )
                    {
                    // InternalMyCsmParser.g:4110:3: (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) )
                    // InternalMyCsmParser.g:4111:4: kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign )
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0());
                      			
                    }
                    // InternalMyCsmParser.g:4116:4: ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign )
                    int alt92=2;
                    int LA92_0 = input.LA(1);

                    if ( (LA92_0==GreaterThanSign) ) {
                        int LA92_1 = input.LA(2);

                        if ( (LA92_1==EOF||LA92_1==Synchronized||LA92_1==Extension||LA92_1==Extends||(LA92_1>=Import && LA92_1<=Typeof)||(LA92_1>=False && LA92_1<=Throw)||LA92_1==While||LA92_1==Null||LA92_1==True||(LA92_1>=For && LA92_1<=New)||LA92_1==Try||(LA92_1>=Do && LA92_1<=If)||(LA92_1>=ExclamationMark && LA92_1<=NumberSign)||LA92_1==LeftParenthesis||LA92_1==PlusSign||LA92_1==HyphenMinus||LA92_1==LessThanSign||LA92_1==LeftSquareBracket||LA92_1==RULE_BEGIN||(LA92_1>=RULE_HEX && LA92_1<=RULE_STRING)) ) {
                            alt92=2;
                        }
                        else if ( (LA92_1==GreaterThanSign) && (synpred8_InternalMyCsmParser())) {
                            alt92=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 92, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 92, 0, input);

                        throw nvae;
                    }
                    switch (alt92) {
                        case 1 :
                            // InternalMyCsmParser.g:4117:5: ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) )
                            {
                            // InternalMyCsmParser.g:4117:5: ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) )
                            // InternalMyCsmParser.g:4118:6: ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign )
                            {
                            // InternalMyCsmParser.g:4123:6: (kw= GreaterThanSign kw= GreaterThanSign )
                            // InternalMyCsmParser.g:4124:7: kw= GreaterThanSign kw= GreaterThanSign
                            {
                            kw=(Token)match(input,GreaterThanSign,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0());
                              						
                            }
                            kw=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1());
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMyCsmParser.g:4137:5: kw= GreaterThanSign
                            {
                            kw=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalMyCsmParser.g:4145:3: (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) )
                    {
                    // InternalMyCsmParser.g:4145:3: (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) )
                    // InternalMyCsmParser.g:4146:4: kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign )
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0());
                      			
                    }
                    // InternalMyCsmParser.g:4151:4: ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign )
                    int alt93=3;
                    int LA93_0 = input.LA(1);

                    if ( (LA93_0==LessThanSign) ) {
                        int LA93_1 = input.LA(2);

                        if ( (synpred9_InternalMyCsmParser()) ) {
                            alt93=1;
                        }
                        else if ( (true) ) {
                            alt93=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 93, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA93_0==EqualsSignGreaterThanSign) ) {
                        alt93=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 93, 0, input);

                        throw nvae;
                    }
                    switch (alt93) {
                        case 1 :
                            // InternalMyCsmParser.g:4152:5: ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) )
                            {
                            // InternalMyCsmParser.g:4152:5: ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) )
                            // InternalMyCsmParser.g:4153:6: ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign )
                            {
                            // InternalMyCsmParser.g:4158:6: (kw= LessThanSign kw= LessThanSign )
                            // InternalMyCsmParser.g:4159:7: kw= LessThanSign kw= LessThanSign
                            {
                            kw=(Token)match(input,LessThanSign,FOLLOW_45); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0());
                              						
                            }
                            kw=(Token)match(input,LessThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1());
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMyCsmParser.g:4172:5: kw= LessThanSign
                            {
                            kw=(Token)match(input,LessThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalMyCsmParser.g:4178:5: kw= EqualsSignGreaterThanSign
                            {
                            kw=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_6_1_2());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalMyCsmParser.g:4186:3: kw= LessThanSignGreaterThanSign
                    {
                    kw=(Token)match(input,LessThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalMyCsmParser.g:4192:3: kw= QuestionMarkColon
                    {
                    kw=(Token)match(input,QuestionMarkColon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOther"


    // $ANTLR start "entryRuleXAdditiveExpression"
    // InternalMyCsmParser.g:4201:1: entryRuleXAdditiveExpression returns [EObject current=null] : iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF ;
    public final EObject entryRuleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAdditiveExpression = null;


        try {
            // InternalMyCsmParser.g:4201:60: (iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF )
            // InternalMyCsmParser.g:4202:2: iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAdditiveExpression=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAdditiveExpression"


    // $ANTLR start "ruleXAdditiveExpression"
    // InternalMyCsmParser.g:4208:1: ruleXAdditiveExpression returns [EObject current=null] : (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XMultiplicativeExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:4214:2: ( (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) )
            // InternalMyCsmParser.g:4215:2: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            {
            // InternalMyCsmParser.g:4215:2: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            // InternalMyCsmParser.g:4216:3: this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_57);
            this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XMultiplicativeExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyCsmParser.g:4224:3: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==PlusSign) ) {
                    int LA95_2 = input.LA(2);

                    if ( (synpred10_InternalMyCsmParser()) ) {
                        alt95=1;
                    }


                }
                else if ( (LA95_0==HyphenMinus) ) {
                    int LA95_3 = input.LA(2);

                    if ( (synpred10_InternalMyCsmParser()) ) {
                        alt95=1;
                    }


                }


                switch (alt95) {
            	case 1 :
            	    // InternalMyCsmParser.g:4225:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    {
            	    // InternalMyCsmParser.g:4225:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) )
            	    // InternalMyCsmParser.g:4226:5: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) )
            	    {
            	    // InternalMyCsmParser.g:4236:5: ( () ( ( ruleOpAdd ) ) )
            	    // InternalMyCsmParser.g:4237:6: () ( ( ruleOpAdd ) )
            	    {
            	    // InternalMyCsmParser.g:4237:6: ()
            	    // InternalMyCsmParser.g:4238:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalMyCsmParser.g:4244:6: ( ( ruleOpAdd ) )
            	    // InternalMyCsmParser.g:4245:7: ( ruleOpAdd )
            	    {
            	    // InternalMyCsmParser.g:4245:7: ( ruleOpAdd )
            	    // InternalMyCsmParser.g:4246:8: ruleOpAdd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_43);
            	    ruleOpAdd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalMyCsmParser.g:4262:4: ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    // InternalMyCsmParser.g:4263:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    {
            	    // InternalMyCsmParser.g:4263:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    // InternalMyCsmParser.g:4264:6: lv_rightOperand_3_0= ruleXMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_57);
            	    lv_rightOperand_3_0=ruleXMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XMultiplicativeExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAdditiveExpression"


    // $ANTLR start "entryRuleOpAdd"
    // InternalMyCsmParser.g:4286:1: entryRuleOpAdd returns [String current=null] : iv_ruleOpAdd= ruleOpAdd EOF ;
    public final String entryRuleOpAdd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAdd = null;


        try {
            // InternalMyCsmParser.g:4286:45: (iv_ruleOpAdd= ruleOpAdd EOF )
            // InternalMyCsmParser.g:4287:2: iv_ruleOpAdd= ruleOpAdd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAddRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAdd=ruleOpAdd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAdd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAdd"


    // $ANTLR start "ruleOpAdd"
    // InternalMyCsmParser.g:4293:1: ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= PlusSign | kw= HyphenMinus ) ;
    public final AntlrDatatypeRuleToken ruleOpAdd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyCsmParser.g:4299:2: ( (kw= PlusSign | kw= HyphenMinus ) )
            // InternalMyCsmParser.g:4300:2: (kw= PlusSign | kw= HyphenMinus )
            {
            // InternalMyCsmParser.g:4300:2: (kw= PlusSign | kw= HyphenMinus )
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==PlusSign) ) {
                alt96=1;
            }
            else if ( (LA96_0==HyphenMinus) ) {
                alt96=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 96, 0, input);

                throw nvae;
            }
            switch (alt96) {
                case 1 :
                    // InternalMyCsmParser.g:4301:3: kw= PlusSign
                    {
                    kw=(Token)match(input,PlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:4307:3: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAdd"


    // $ANTLR start "entryRuleXMultiplicativeExpression"
    // InternalMyCsmParser.g:4316:1: entryRuleXMultiplicativeExpression returns [EObject current=null] : iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF ;
    public final EObject entryRuleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMultiplicativeExpression = null;


        try {
            // InternalMyCsmParser.g:4316:66: (iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF )
            // InternalMyCsmParser.g:4317:2: iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMultiplicativeExpression"


    // $ANTLR start "ruleXMultiplicativeExpression"
    // InternalMyCsmParser.g:4323:1: ruleXMultiplicativeExpression returns [EObject current=null] : (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) ;
    public final EObject ruleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XUnaryOperation_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:4329:2: ( (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) )
            // InternalMyCsmParser.g:4330:2: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            {
            // InternalMyCsmParser.g:4330:2: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            // InternalMyCsmParser.g:4331:3: this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_58);
            this_XUnaryOperation_0=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XUnaryOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyCsmParser.g:4339:3: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            loop97:
            do {
                int alt97=2;
                switch ( input.LA(1) ) {
                case Asterisk:
                    {
                    int LA97_2 = input.LA(2);

                    if ( (synpred11_InternalMyCsmParser()) ) {
                        alt97=1;
                    }


                    }
                    break;
                case AsteriskAsterisk:
                    {
                    int LA97_3 = input.LA(2);

                    if ( (synpred11_InternalMyCsmParser()) ) {
                        alt97=1;
                    }


                    }
                    break;
                case Solidus:
                    {
                    int LA97_4 = input.LA(2);

                    if ( (synpred11_InternalMyCsmParser()) ) {
                        alt97=1;
                    }


                    }
                    break;
                case PercentSign:
                    {
                    int LA97_5 = input.LA(2);

                    if ( (synpred11_InternalMyCsmParser()) ) {
                        alt97=1;
                    }


                    }
                    break;

                }

                switch (alt97) {
            	case 1 :
            	    // InternalMyCsmParser.g:4340:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    {
            	    // InternalMyCsmParser.g:4340:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) )
            	    // InternalMyCsmParser.g:4341:5: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) )
            	    {
            	    // InternalMyCsmParser.g:4351:5: ( () ( ( ruleOpMulti ) ) )
            	    // InternalMyCsmParser.g:4352:6: () ( ( ruleOpMulti ) )
            	    {
            	    // InternalMyCsmParser.g:4352:6: ()
            	    // InternalMyCsmParser.g:4353:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalMyCsmParser.g:4359:6: ( ( ruleOpMulti ) )
            	    // InternalMyCsmParser.g:4360:7: ( ruleOpMulti )
            	    {
            	    // InternalMyCsmParser.g:4360:7: ( ruleOpMulti )
            	    // InternalMyCsmParser.g:4361:8: ruleOpMulti
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_43);
            	    ruleOpMulti();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalMyCsmParser.g:4377:4: ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    // InternalMyCsmParser.g:4378:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    {
            	    // InternalMyCsmParser.g:4378:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    // InternalMyCsmParser.g:4379:6: lv_rightOperand_3_0= ruleXUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_58);
            	    lv_rightOperand_3_0=ruleXUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMultiplicativeExpression"


    // $ANTLR start "entryRuleOpMulti"
    // InternalMyCsmParser.g:4401:1: entryRuleOpMulti returns [String current=null] : iv_ruleOpMulti= ruleOpMulti EOF ;
    public final String entryRuleOpMulti() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMulti = null;


        try {
            // InternalMyCsmParser.g:4401:47: (iv_ruleOpMulti= ruleOpMulti EOF )
            // InternalMyCsmParser.g:4402:2: iv_ruleOpMulti= ruleOpMulti EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMulti=ruleOpMulti();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMulti.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMulti"


    // $ANTLR start "ruleOpMulti"
    // InternalMyCsmParser.g:4408:1: ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Asterisk | kw= AsteriskAsterisk | kw= Solidus | kw= PercentSign ) ;
    public final AntlrDatatypeRuleToken ruleOpMulti() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyCsmParser.g:4414:2: ( (kw= Asterisk | kw= AsteriskAsterisk | kw= Solidus | kw= PercentSign ) )
            // InternalMyCsmParser.g:4415:2: (kw= Asterisk | kw= AsteriskAsterisk | kw= Solidus | kw= PercentSign )
            {
            // InternalMyCsmParser.g:4415:2: (kw= Asterisk | kw= AsteriskAsterisk | kw= Solidus | kw= PercentSign )
            int alt98=4;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt98=1;
                }
                break;
            case AsteriskAsterisk:
                {
                alt98=2;
                }
                break;
            case Solidus:
                {
                alt98=3;
                }
                break;
            case PercentSign:
                {
                alt98=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 98, 0, input);

                throw nvae;
            }

            switch (alt98) {
                case 1 :
                    // InternalMyCsmParser.g:4416:3: kw= Asterisk
                    {
                    kw=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:4422:3: kw= AsteriskAsterisk
                    {
                    kw=(Token)match(input,AsteriskAsterisk,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyCsmParser.g:4428:3: kw= Solidus
                    {
                    kw=(Token)match(input,Solidus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyCsmParser.g:4434:3: kw= PercentSign
                    {
                    kw=(Token)match(input,PercentSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMulti"


    // $ANTLR start "entryRuleXUnaryOperation"
    // InternalMyCsmParser.g:4443:1: entryRuleXUnaryOperation returns [EObject current=null] : iv_ruleXUnaryOperation= ruleXUnaryOperation EOF ;
    public final EObject entryRuleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXUnaryOperation = null;


        try {
            // InternalMyCsmParser.g:4443:56: (iv_ruleXUnaryOperation= ruleXUnaryOperation EOF )
            // InternalMyCsmParser.g:4444:2: iv_ruleXUnaryOperation= ruleXUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXUnaryOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXUnaryOperation=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXUnaryOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXUnaryOperation"


    // $ANTLR start "ruleXUnaryOperation"
    // InternalMyCsmParser.g:4450:1: ruleXUnaryOperation returns [EObject current=null] : ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) ;
    public final EObject ruleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject lv_operand_2_0 = null;

        EObject this_XCastedExpression_3 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:4456:2: ( ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) )
            // InternalMyCsmParser.g:4457:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            {
            // InternalMyCsmParser.g:4457:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==ExclamationMark||LA99_0==PlusSign||LA99_0==HyphenMinus) ) {
                alt99=1;
            }
            else if ( (LA99_0==Synchronized||LA99_0==Extension||LA99_0==Extends||(LA99_0>=Import && LA99_0<=Typeof)||(LA99_0>=False && LA99_0<=Throw)||LA99_0==While||LA99_0==Null||LA99_0==True||(LA99_0>=For && LA99_0<=New)||LA99_0==Try||(LA99_0>=Do && LA99_0<=If)||LA99_0==NumberSign||LA99_0==LeftParenthesis||LA99_0==LessThanSign||LA99_0==LeftSquareBracket||LA99_0==RULE_BEGIN||(LA99_0>=RULE_HEX && LA99_0<=RULE_STRING)) ) {
                alt99=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 99, 0, input);

                throw nvae;
            }
            switch (alt99) {
                case 1 :
                    // InternalMyCsmParser.g:4458:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    {
                    // InternalMyCsmParser.g:4458:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    // InternalMyCsmParser.g:4459:4: () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    {
                    // InternalMyCsmParser.g:4459:4: ()
                    // InternalMyCsmParser.g:4460:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalMyCsmParser.g:4466:4: ( ( ruleOpUnary ) )
                    // InternalMyCsmParser.g:4467:5: ( ruleOpUnary )
                    {
                    // InternalMyCsmParser.g:4467:5: ( ruleOpUnary )
                    // InternalMyCsmParser.g:4468:6: ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXUnaryOperationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:4482:4: ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    // InternalMyCsmParser.g:4483:5: (lv_operand_2_0= ruleXUnaryOperation )
                    {
                    // InternalMyCsmParser.g:4483:5: (lv_operand_2_0= ruleXUnaryOperation )
                    // InternalMyCsmParser.g:4484:6: lv_operand_2_0= ruleXUnaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_2_0=ruleXUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operand",
                      							lv_operand_2_0,
                      							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:4503:3: this_XCastedExpression_3= ruleXCastedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCastedExpression_3=ruleXCastedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCastedExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXUnaryOperation"


    // $ANTLR start "entryRuleOpUnary"
    // InternalMyCsmParser.g:4515:1: entryRuleOpUnary returns [String current=null] : iv_ruleOpUnary= ruleOpUnary EOF ;
    public final String entryRuleOpUnary() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpUnary = null;


        try {
            // InternalMyCsmParser.g:4515:47: (iv_ruleOpUnary= ruleOpUnary EOF )
            // InternalMyCsmParser.g:4516:2: iv_ruleOpUnary= ruleOpUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpUnaryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpUnary=ruleOpUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpUnary.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpUnary"


    // $ANTLR start "ruleOpUnary"
    // InternalMyCsmParser.g:4522:1: ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= ExclamationMark | kw= HyphenMinus | kw= PlusSign ) ;
    public final AntlrDatatypeRuleToken ruleOpUnary() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyCsmParser.g:4528:2: ( (kw= ExclamationMark | kw= HyphenMinus | kw= PlusSign ) )
            // InternalMyCsmParser.g:4529:2: (kw= ExclamationMark | kw= HyphenMinus | kw= PlusSign )
            {
            // InternalMyCsmParser.g:4529:2: (kw= ExclamationMark | kw= HyphenMinus | kw= PlusSign )
            int alt100=3;
            switch ( input.LA(1) ) {
            case ExclamationMark:
                {
                alt100=1;
                }
                break;
            case HyphenMinus:
                {
                alt100=2;
                }
                break;
            case PlusSign:
                {
                alt100=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;
            }

            switch (alt100) {
                case 1 :
                    // InternalMyCsmParser.g:4530:3: kw= ExclamationMark
                    {
                    kw=(Token)match(input,ExclamationMark,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:4536:3: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyCsmParser.g:4542:3: kw= PlusSign
                    {
                    kw=(Token)match(input,PlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpUnary"


    // $ANTLR start "entryRuleXCastedExpression"
    // InternalMyCsmParser.g:4551:1: entryRuleXCastedExpression returns [EObject current=null] : iv_ruleXCastedExpression= ruleXCastedExpression EOF ;
    public final EObject entryRuleXCastedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCastedExpression = null;


        try {
            // InternalMyCsmParser.g:4551:58: (iv_ruleXCastedExpression= ruleXCastedExpression EOF )
            // InternalMyCsmParser.g:4552:2: iv_ruleXCastedExpression= ruleXCastedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCastedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCastedExpression=ruleXCastedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCastedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCastedExpression"


    // $ANTLR start "ruleXCastedExpression"
    // InternalMyCsmParser.g:4558:1: ruleXCastedExpression returns [EObject current=null] : (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) ;
    public final EObject ruleXCastedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XPostfixOperation_0 = null;

        EObject lv_type_3_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:4564:2: ( (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) )
            // InternalMyCsmParser.g:4565:2: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            {
            // InternalMyCsmParser.g:4565:2: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            // InternalMyCsmParser.g:4566:3: this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_59);
            this_XPostfixOperation_0=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XPostfixOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyCsmParser.g:4574:3: ( ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( (LA101_0==As) ) {
                    int LA101_2 = input.LA(2);

                    if ( (synpred12_InternalMyCsmParser()) ) {
                        alt101=1;
                    }


                }


                switch (alt101) {
            	case 1 :
            	    // InternalMyCsmParser.g:4575:4: ( ( ( () As ) )=> ( () otherlv_2= As ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalMyCsmParser.g:4575:4: ( ( ( () As ) )=> ( () otherlv_2= As ) )
            	    // InternalMyCsmParser.g:4576:5: ( ( () As ) )=> ( () otherlv_2= As )
            	    {
            	    // InternalMyCsmParser.g:4582:5: ( () otherlv_2= As )
            	    // InternalMyCsmParser.g:4583:6: () otherlv_2= As
            	    {
            	    // InternalMyCsmParser.g:4583:6: ()
            	    // InternalMyCsmParser.g:4584:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    otherlv_2=(Token)match(input,As,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
            	      					
            	    }

            	    }


            	    }

            	    // InternalMyCsmParser.g:4596:4: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalMyCsmParser.g:4597:5: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalMyCsmParser.g:4597:5: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalMyCsmParser.g:4598:6: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_59);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"type",
            	      							lv_type_3_0,
            	      							"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCastedExpression"


    // $ANTLR start "entryRuleXPostfixOperation"
    // InternalMyCsmParser.g:4620:1: entryRuleXPostfixOperation returns [EObject current=null] : iv_ruleXPostfixOperation= ruleXPostfixOperation EOF ;
    public final EObject entryRuleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPostfixOperation = null;


        try {
            // InternalMyCsmParser.g:4620:58: (iv_ruleXPostfixOperation= ruleXPostfixOperation EOF )
            // InternalMyCsmParser.g:4621:2: iv_ruleXPostfixOperation= ruleXPostfixOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPostfixOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPostfixOperation=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPostfixOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPostfixOperation"


    // $ANTLR start "ruleXPostfixOperation"
    // InternalMyCsmParser.g:4627:1: ruleXPostfixOperation returns [EObject current=null] : (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) ;
    public final EObject ruleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject this_XMemberFeatureCall_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:4633:2: ( (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) )
            // InternalMyCsmParser.g:4634:2: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            {
            // InternalMyCsmParser.g:4634:2: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            // InternalMyCsmParser.g:4635:3: this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXPostfixOperationAccess().getXMemberFeatureCallParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_60);
            this_XMemberFeatureCall_0=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XMemberFeatureCall_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyCsmParser.g:4643:3: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==PlusSignPlusSign) ) {
                int LA102_1 = input.LA(2);

                if ( (synpred13_InternalMyCsmParser()) ) {
                    alt102=1;
                }
            }
            else if ( (LA102_0==HyphenMinusHyphenMinus) ) {
                int LA102_2 = input.LA(2);

                if ( (synpred13_InternalMyCsmParser()) ) {
                    alt102=1;
                }
            }
            switch (alt102) {
                case 1 :
                    // InternalMyCsmParser.g:4644:4: ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) )
                    {
                    // InternalMyCsmParser.g:4654:4: ( () ( ( ruleOpPostfix ) ) )
                    // InternalMyCsmParser.g:4655:5: () ( ( ruleOpPostfix ) )
                    {
                    // InternalMyCsmParser.g:4655:5: ()
                    // InternalMyCsmParser.g:4656:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndSet(
                      							grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalMyCsmParser.g:4662:5: ( ( ruleOpPostfix ) )
                    // InternalMyCsmParser.g:4663:6: ( ruleOpPostfix )
                    {
                    // InternalMyCsmParser.g:4663:6: ( ruleOpPostfix )
                    // InternalMyCsmParser.g:4664:7: ruleOpPostfix
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXPostfixOperationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpPostfix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPostfixOperation"


    // $ANTLR start "entryRuleOpPostfix"
    // InternalMyCsmParser.g:4684:1: entryRuleOpPostfix returns [String current=null] : iv_ruleOpPostfix= ruleOpPostfix EOF ;
    public final String entryRuleOpPostfix() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpPostfix = null;


        try {
            // InternalMyCsmParser.g:4684:49: (iv_ruleOpPostfix= ruleOpPostfix EOF )
            // InternalMyCsmParser.g:4685:2: iv_ruleOpPostfix= ruleOpPostfix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpPostfixRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpPostfix=ruleOpPostfix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpPostfix.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpPostfix"


    // $ANTLR start "ruleOpPostfix"
    // InternalMyCsmParser.g:4691:1: ruleOpPostfix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= PlusSignPlusSign | kw= HyphenMinusHyphenMinus ) ;
    public final AntlrDatatypeRuleToken ruleOpPostfix() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyCsmParser.g:4697:2: ( (kw= PlusSignPlusSign | kw= HyphenMinusHyphenMinus ) )
            // InternalMyCsmParser.g:4698:2: (kw= PlusSignPlusSign | kw= HyphenMinusHyphenMinus )
            {
            // InternalMyCsmParser.g:4698:2: (kw= PlusSignPlusSign | kw= HyphenMinusHyphenMinus )
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==PlusSignPlusSign) ) {
                alt103=1;
            }
            else if ( (LA103_0==HyphenMinusHyphenMinus) ) {
                alt103=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 103, 0, input);

                throw nvae;
            }
            switch (alt103) {
                case 1 :
                    // InternalMyCsmParser.g:4699:3: kw= PlusSignPlusSign
                    {
                    kw=(Token)match(input,PlusSignPlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:4705:3: kw= HyphenMinusHyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpPostfix"


    // $ANTLR start "entryRuleXMemberFeatureCall"
    // InternalMyCsmParser.g:4714:1: entryRuleXMemberFeatureCall returns [EObject current=null] : iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF ;
    public final EObject entryRuleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMemberFeatureCall = null;


        try {
            // InternalMyCsmParser.g:4714:59: (iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF )
            // InternalMyCsmParser.g:4715:2: iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMemberFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMemberFeatureCall"


    // $ANTLR start "ruleXMemberFeatureCall"
    // InternalMyCsmParser.g:4721:1: ruleXMemberFeatureCall returns [EObject current=null] : (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) ;
    public final EObject ruleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitStatic_3_0=null;
        Token otherlv_8=null;
        Token lv_nullSafe_9_0=null;
        Token lv_explicitStatic_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_explicitOperationCall_17_0=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject this_XPrimaryExpression_0 = null;

        EObject lv_value_6_0 = null;

        EObject lv_typeArguments_12_0 = null;

        EObject lv_typeArguments_14_0 = null;

        EObject lv_memberCallArguments_18_0 = null;

        EObject lv_memberCallArguments_19_0 = null;

        EObject lv_memberCallArguments_21_0 = null;

        EObject lv_memberCallArguments_23_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:4727:2: ( (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) )
            // InternalMyCsmParser.g:4728:2: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            {
            // InternalMyCsmParser.g:4728:2: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            // InternalMyCsmParser.g:4729:3: this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_61);
            this_XPrimaryExpression_0=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XPrimaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyCsmParser.g:4737:3: ( ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            loop112:
            do {
                int alt112=3;
                switch ( input.LA(1) ) {
                case FullStop:
                    {
                    int LA112_2 = input.LA(2);

                    if ( (synpred14_InternalMyCsmParser()) ) {
                        alt112=1;
                    }
                    else if ( (synpred15_InternalMyCsmParser()) ) {
                        alt112=2;
                    }


                    }
                    break;
                case ColonColon:
                    {
                    int LA112_3 = input.LA(2);

                    if ( (synpred14_InternalMyCsmParser()) ) {
                        alt112=1;
                    }
                    else if ( (synpred15_InternalMyCsmParser()) ) {
                        alt112=2;
                    }


                    }
                    break;
                case QuestionMarkFullStop:
                    {
                    int LA112_4 = input.LA(2);

                    if ( (synpred15_InternalMyCsmParser()) ) {
                        alt112=2;
                    }


                    }
                    break;

                }

                switch (alt112) {
            	case 1 :
            	    // InternalMyCsmParser.g:4738:4: ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    {
            	    // InternalMyCsmParser.g:4738:4: ( ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    // InternalMyCsmParser.g:4739:5: ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) )
            	    {
            	    // InternalMyCsmParser.g:4739:5: ( ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
            	    // InternalMyCsmParser.g:4740:6: ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    {
            	    // InternalMyCsmParser.g:4760:6: ( () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    // InternalMyCsmParser.g:4761:7: () (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
            	    {
            	    // InternalMyCsmParser.g:4761:7: ()
            	    // InternalMyCsmParser.g:4762:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalMyCsmParser.g:4768:7: (otherlv_2= FullStop | ( (lv_explicitStatic_3_0= ColonColon ) ) )
            	    int alt104=2;
            	    int LA104_0 = input.LA(1);

            	    if ( (LA104_0==FullStop) ) {
            	        alt104=1;
            	    }
            	    else if ( (LA104_0==ColonColon) ) {
            	        alt104=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 104, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt104) {
            	        case 1 :
            	            // InternalMyCsmParser.g:4769:8: otherlv_2= FullStop
            	            {
            	            otherlv_2=(Token)match(input,FullStop,FOLLOW_62); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0());
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMyCsmParser.g:4774:8: ( (lv_explicitStatic_3_0= ColonColon ) )
            	            {
            	            // InternalMyCsmParser.g:4774:8: ( (lv_explicitStatic_3_0= ColonColon ) )
            	            // InternalMyCsmParser.g:4775:9: (lv_explicitStatic_3_0= ColonColon )
            	            {
            	            // InternalMyCsmParser.g:4775:9: (lv_explicitStatic_3_0= ColonColon )
            	            // InternalMyCsmParser.g:4776:10: lv_explicitStatic_3_0= ColonColon
            	            {
            	            lv_explicitStatic_3_0=(Token)match(input,ColonColon,FOLLOW_62); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_explicitStatic_3_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "explicitStatic", lv_explicitStatic_3_0 != null, "::");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalMyCsmParser.g:4789:7: ( ( ruleFeatureCallID ) )
            	    // InternalMyCsmParser.g:4790:8: ( ruleFeatureCallID )
            	    {
            	    // InternalMyCsmParser.g:4790:8: ( ruleFeatureCallID )
            	    // InternalMyCsmParser.g:4791:9: ruleFeatureCallID
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_42);
            	    ruleFeatureCallID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3());
            	      						
            	    }
            	    pushFollow(FOLLOW_43);
            	    ruleOpSingleAssign();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalMyCsmParser.g:4814:5: ( (lv_value_6_0= ruleXAssignment ) )
            	    // InternalMyCsmParser.g:4815:6: (lv_value_6_0= ruleXAssignment )
            	    {
            	    // InternalMyCsmParser.g:4815:6: (lv_value_6_0= ruleXAssignment )
            	    // InternalMyCsmParser.g:4816:7: lv_value_6_0= ruleXAssignment
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_61);
            	    lv_value_6_0=ruleXAssignment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	      							}
            	      							set(
            	      								current,
            	      								"value",
            	      								lv_value_6_0,
            	      								"org.eclipse.xtext.xbase.Xbase.XAssignment");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMyCsmParser.g:4835:4: ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    {
            	    // InternalMyCsmParser.g:4835:4: ( ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    // InternalMyCsmParser.g:4836:5: ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) ) (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    {
            	    // InternalMyCsmParser.g:4836:5: ( ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) ) )
            	    // InternalMyCsmParser.g:4837:6: ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )=> ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) )
            	    {
            	    // InternalMyCsmParser.g:4857:6: ( () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) ) )
            	    // InternalMyCsmParser.g:4858:7: () (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) )
            	    {
            	    // InternalMyCsmParser.g:4858:7: ()
            	    // InternalMyCsmParser.g:4859:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalMyCsmParser.g:4865:7: (otherlv_8= FullStop | ( (lv_nullSafe_9_0= QuestionMarkFullStop ) ) | ( (lv_explicitStatic_10_0= ColonColon ) ) )
            	    int alt105=3;
            	    switch ( input.LA(1) ) {
            	    case FullStop:
            	        {
            	        alt105=1;
            	        }
            	        break;
            	    case QuestionMarkFullStop:
            	        {
            	        alt105=2;
            	        }
            	        break;
            	    case ColonColon:
            	        {
            	        alt105=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 105, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt105) {
            	        case 1 :
            	            // InternalMyCsmParser.g:4866:8: otherlv_8= FullStop
            	            {
            	            otherlv_8=(Token)match(input,FullStop,FOLLOW_63); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(otherlv_8, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMyCsmParser.g:4871:8: ( (lv_nullSafe_9_0= QuestionMarkFullStop ) )
            	            {
            	            // InternalMyCsmParser.g:4871:8: ( (lv_nullSafe_9_0= QuestionMarkFullStop ) )
            	            // InternalMyCsmParser.g:4872:9: (lv_nullSafe_9_0= QuestionMarkFullStop )
            	            {
            	            // InternalMyCsmParser.g:4872:9: (lv_nullSafe_9_0= QuestionMarkFullStop )
            	            // InternalMyCsmParser.g:4873:10: lv_nullSafe_9_0= QuestionMarkFullStop
            	            {
            	            lv_nullSafe_9_0=(Token)match(input,QuestionMarkFullStop,FOLLOW_63); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_nullSafe_9_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "nullSafe", lv_nullSafe_9_0 != null, "?.");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalMyCsmParser.g:4886:8: ( (lv_explicitStatic_10_0= ColonColon ) )
            	            {
            	            // InternalMyCsmParser.g:4886:8: ( (lv_explicitStatic_10_0= ColonColon ) )
            	            // InternalMyCsmParser.g:4887:9: (lv_explicitStatic_10_0= ColonColon )
            	            {
            	            // InternalMyCsmParser.g:4887:9: (lv_explicitStatic_10_0= ColonColon )
            	            // InternalMyCsmParser.g:4888:10: lv_explicitStatic_10_0= ColonColon
            	            {
            	            lv_explicitStatic_10_0=(Token)match(input,ColonColon,FOLLOW_63); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_explicitStatic_10_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "explicitStatic", lv_explicitStatic_10_0 != null, "::");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalMyCsmParser.g:4903:5: (otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign )?
            	    int alt107=2;
            	    int LA107_0 = input.LA(1);

            	    if ( (LA107_0==LessThanSign) ) {
            	        alt107=1;
            	    }
            	    switch (alt107) {
            	        case 1 :
            	            // InternalMyCsmParser.g:4904:6: otherlv_11= LessThanSign ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= GreaterThanSign
            	            {
            	            otherlv_11=(Token)match(input,LessThanSign,FOLLOW_64); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_11, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0());
            	              					
            	            }
            	            // InternalMyCsmParser.g:4908:6: ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) )
            	            // InternalMyCsmParser.g:4909:7: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            {
            	            // InternalMyCsmParser.g:4909:7: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            // InternalMyCsmParser.g:4910:8: lv_typeArguments_12_0= ruleJvmArgumentTypeReference
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_65);
            	            lv_typeArguments_12_0=ruleJvmArgumentTypeReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              								}
            	              								add(
            	              									current,
            	              									"typeArguments",
            	              									lv_typeArguments_12_0,
            	              									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalMyCsmParser.g:4927:6: (otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )*
            	            loop106:
            	            do {
            	                int alt106=2;
            	                int LA106_0 = input.LA(1);

            	                if ( (LA106_0==Comma) ) {
            	                    alt106=1;
            	                }


            	                switch (alt106) {
            	            	case 1 :
            	            	    // InternalMyCsmParser.g:4928:7: otherlv_13= Comma ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    {
            	            	    otherlv_13=(Token)match(input,Comma,FOLLOW_64); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      							newLeafNode(otherlv_13, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0());
            	            	      						
            	            	    }
            	            	    // InternalMyCsmParser.g:4932:7: ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    // InternalMyCsmParser.g:4933:8: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    {
            	            	    // InternalMyCsmParser.g:4933:8: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    // InternalMyCsmParser.g:4934:9: lv_typeArguments_14_0= ruleJvmArgumentTypeReference
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0());
            	            	      								
            	            	    }
            	            	    pushFollow(FOLLOW_65);
            	            	    lv_typeArguments_14_0=ruleJvmArgumentTypeReference();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      									if (current==null) {
            	            	      										current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	            	      									}
            	            	      									add(
            	            	      										current,
            	            	      										"typeArguments",
            	            	      										lv_typeArguments_14_0,
            	            	      										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	            	      									afterParserOrEnumRuleCall();
            	            	      								
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop106;
            	                }
            	            } while (true);

            	            otherlv_15=(Token)match(input,GreaterThanSign,FOLLOW_63); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_15, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3());
            	              					
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMyCsmParser.g:4957:5: ( ( ruleIdOrSuper ) )
            	    // InternalMyCsmParser.g:4958:6: ( ruleIdOrSuper )
            	    {
            	    // InternalMyCsmParser.g:4958:6: ( ruleIdOrSuper )
            	    // InternalMyCsmParser.g:4959:7: ruleIdOrSuper
            	    {
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      							}
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_66);
            	    ruleIdOrSuper();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalMyCsmParser.g:4973:5: ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )?
            	    int alt110=2;
            	    alt110 = dfa110.predict(input);
            	    switch (alt110) {
            	        case 1 :
            	            // InternalMyCsmParser.g:4974:6: ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis
            	            {
            	            // InternalMyCsmParser.g:4974:6: ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) )
            	            // InternalMyCsmParser.g:4975:7: ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis )
            	            {
            	            // InternalMyCsmParser.g:4979:7: (lv_explicitOperationCall_17_0= LeftParenthesis )
            	            // InternalMyCsmParser.g:4980:8: lv_explicitOperationCall_17_0= LeftParenthesis
            	            {
            	            lv_explicitOperationCall_17_0=(Token)match(input,LeftParenthesis,FOLLOW_67); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_explicitOperationCall_17_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              								}
            	              								setWithLastConsumed(current, "explicitOperationCall", lv_explicitOperationCall_17_0 != null, "(");
            	              							
            	            }

            	            }


            	            }

            	            // InternalMyCsmParser.g:4992:6: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?
            	            int alt109=3;
            	            alt109 = dfa109.predict(input);
            	            switch (alt109) {
            	                case 1 :
            	                    // InternalMyCsmParser.g:4993:7: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    {
            	                    // InternalMyCsmParser.g:4993:7: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    // InternalMyCsmParser.g:4994:8: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    {
            	                    // InternalMyCsmParser.g:5019:8: (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    // InternalMyCsmParser.g:5020:9: lv_memberCallArguments_18_0= ruleXShortClosure
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0());
            	                      								
            	                    }
            	                    pushFollow(FOLLOW_68);
            	                    lv_memberCallArguments_18_0=ruleXShortClosure();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      									if (current==null) {
            	                      										current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      									}
            	                      									add(
            	                      										current,
            	                      										"memberCallArguments",
            	                      										lv_memberCallArguments_18_0,
            	                      										"org.eclipse.xtext.xbase.Xbase.XShortClosure");
            	                      									afterParserOrEnumRuleCall();
            	                      								
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMyCsmParser.g:5038:7: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    {
            	                    // InternalMyCsmParser.g:5038:7: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    // InternalMyCsmParser.g:5039:8: ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    {
            	                    // InternalMyCsmParser.g:5039:8: ( (lv_memberCallArguments_19_0= ruleXExpression ) )
            	                    // InternalMyCsmParser.g:5040:9: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    {
            	                    // InternalMyCsmParser.g:5040:9: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    // InternalMyCsmParser.g:5041:10: lv_memberCallArguments_19_0= ruleXExpression
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      										newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0());
            	                      									
            	                    }
            	                    pushFollow(FOLLOW_17);
            	                    lv_memberCallArguments_19_0=ruleXExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      										if (current==null) {
            	                      											current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      										}
            	                      										add(
            	                      											current,
            	                      											"memberCallArguments",
            	                      											lv_memberCallArguments_19_0,
            	                      											"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                      										afterParserOrEnumRuleCall();
            	                      									
            	                    }

            	                    }


            	                    }

            	                    // InternalMyCsmParser.g:5058:8: (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    loop108:
            	                    do {
            	                        int alt108=2;
            	                        int LA108_0 = input.LA(1);

            	                        if ( (LA108_0==Comma) ) {
            	                            alt108=1;
            	                        }


            	                        switch (alt108) {
            	                    	case 1 :
            	                    	    // InternalMyCsmParser.g:5059:9: otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    {
            	                    	    otherlv_20=(Token)match(input,Comma,FOLLOW_43); if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      									newLeafNode(otherlv_20, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0());
            	                    	      								
            	                    	    }
            	                    	    // InternalMyCsmParser.g:5063:9: ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    // InternalMyCsmParser.g:5064:10: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    {
            	                    	    // InternalMyCsmParser.g:5064:10: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    // InternalMyCsmParser.g:5065:11: lv_memberCallArguments_21_0= ruleXExpression
            	                    	    {
            	                    	    if ( state.backtracking==0 ) {

            	                    	      											newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0());
            	                    	      										
            	                    	    }
            	                    	    pushFollow(FOLLOW_17);
            	                    	    lv_memberCallArguments_21_0=ruleXExpression();

            	                    	    state._fsp--;
            	                    	    if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      											if (current==null) {
            	                    	      												current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                    	      											}
            	                    	      											add(
            	                    	      												current,
            	                    	      												"memberCallArguments",
            	                    	      												lv_memberCallArguments_21_0,
            	                    	      												"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                    	      											afterParserOrEnumRuleCall();
            	                    	      										
            	                    	    }

            	                    	    }


            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop108;
            	                        }
            	                    } while (true);


            	                    }


            	                    }
            	                    break;

            	            }

            	            otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_69); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_22, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2());
            	              					
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMyCsmParser.g:5090:5: ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    int alt111=2;
            	    alt111 = dfa111.predict(input);
            	    switch (alt111) {
            	        case 1 :
            	            // InternalMyCsmParser.g:5091:6: ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure )
            	            {
            	            // InternalMyCsmParser.g:5097:6: (lv_memberCallArguments_23_0= ruleXClosure )
            	            // InternalMyCsmParser.g:5098:7: lv_memberCallArguments_23_0= ruleXClosure
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_61);
            	            lv_memberCallArguments_23_0=ruleXClosure();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              							}
            	              							add(
            	              								current,
            	              								"memberCallArguments",
            	              								lv_memberCallArguments_23_0,
            	              								"org.eclipse.xtext.xbase.Xbase.XClosure");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop112;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMemberFeatureCall"


    // $ANTLR start "entryRuleXPrimaryExpression"
    // InternalMyCsmParser.g:5121:1: entryRuleXPrimaryExpression returns [EObject current=null] : iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF ;
    public final EObject entryRuleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPrimaryExpression = null;


        try {
            // InternalMyCsmParser.g:5121:59: (iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF )
            // InternalMyCsmParser.g:5122:2: iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPrimaryExpression=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPrimaryExpression"


    // $ANTLR start "ruleXPrimaryExpression"
    // InternalMyCsmParser.g:5128:1: ruleXPrimaryExpression returns [EObject current=null] : (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) ;
    public final EObject ruleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XConstructorCall_0 = null;

        EObject this_XBlockExpression_1 = null;

        EObject this_XSwitchExpression_2 = null;

        EObject this_XSynchronizedExpression_3 = null;

        EObject this_XFeatureCall_4 = null;

        EObject this_XLiteral_5 = null;

        EObject this_XIfExpression_6 = null;

        EObject this_XForLoopExpression_7 = null;

        EObject this_XBasicForLoopExpression_8 = null;

        EObject this_XWhileExpression_9 = null;

        EObject this_XDoWhileExpression_10 = null;

        EObject this_XThrowExpression_11 = null;

        EObject this_XReturnExpression_12 = null;

        EObject this_XTryCatchFinallyExpression_13 = null;

        EObject this_XParenthesizedExpression_14 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:5134:2: ( (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) )
            // InternalMyCsmParser.g:5135:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            {
            // InternalMyCsmParser.g:5135:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            int alt113=15;
            alt113 = dfa113.predict(input);
            switch (alt113) {
                case 1 :
                    // InternalMyCsmParser.g:5136:3: this_XConstructorCall_0= ruleXConstructorCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XConstructorCall_0=ruleXConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XConstructorCall_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:5145:3: this_XBlockExpression_1= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBlockExpression_1=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBlockExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyCsmParser.g:5154:3: this_XSwitchExpression_2= ruleXSwitchExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XSwitchExpression_2=ruleXSwitchExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XSwitchExpression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyCsmParser.g:5163:3: ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    {
                    // InternalMyCsmParser.g:5163:3: ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    // InternalMyCsmParser.g:5164:4: ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSynchronizedExpressionParserRuleCall_3());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XSynchronizedExpression_3=ruleXSynchronizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XSynchronizedExpression_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalMyCsmParser.g:5181:3: this_XFeatureCall_4= ruleXFeatureCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XFeatureCall_4=ruleXFeatureCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XFeatureCall_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalMyCsmParser.g:5190:3: this_XLiteral_5= ruleXLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XLiteral_5=ruleXLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XLiteral_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalMyCsmParser.g:5199:3: this_XIfExpression_6= ruleXIfExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XIfExpression_6=ruleXIfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XIfExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalMyCsmParser.g:5208:3: ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    {
                    // InternalMyCsmParser.g:5208:3: ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    // InternalMyCsmParser.g:5209:4: ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_7());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XForLoopExpression_7=ruleXForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XForLoopExpression_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalMyCsmParser.g:5232:3: this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBasicForLoopExpressionParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBasicForLoopExpression_8=ruleXBasicForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBasicForLoopExpression_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalMyCsmParser.g:5241:3: this_XWhileExpression_9= ruleXWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XWhileExpression_9=ruleXWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XWhileExpression_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalMyCsmParser.g:5250:3: this_XDoWhileExpression_10= ruleXDoWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_10());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XDoWhileExpression_10=ruleXDoWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XDoWhileExpression_10;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalMyCsmParser.g:5259:3: this_XThrowExpression_11= ruleXThrowExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_11());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XThrowExpression_11=ruleXThrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XThrowExpression_11;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalMyCsmParser.g:5268:3: this_XReturnExpression_12= ruleXReturnExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_12());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XReturnExpression_12=ruleXReturnExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XReturnExpression_12;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalMyCsmParser.g:5277:3: this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_13());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XTryCatchFinallyExpression_13=ruleXTryCatchFinallyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XTryCatchFinallyExpression_13;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 15 :
                    // InternalMyCsmParser.g:5286:3: this_XParenthesizedExpression_14= ruleXParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_14());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XParenthesizedExpression_14=ruleXParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XParenthesizedExpression_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPrimaryExpression"


    // $ANTLR start "entryRuleXLiteral"
    // InternalMyCsmParser.g:5298:1: entryRuleXLiteral returns [EObject current=null] : iv_ruleXLiteral= ruleXLiteral EOF ;
    public final EObject entryRuleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXLiteral = null;


        try {
            // InternalMyCsmParser.g:5298:49: (iv_ruleXLiteral= ruleXLiteral EOF )
            // InternalMyCsmParser.g:5299:2: iv_ruleXLiteral= ruleXLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXLiteral=ruleXLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXLiteral"


    // $ANTLR start "ruleXLiteral"
    // InternalMyCsmParser.g:5305:1: ruleXLiteral returns [EObject current=null] : (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) ;
    public final EObject ruleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XCollectionLiteral_0 = null;

        EObject this_XClosure_1 = null;

        EObject this_XBooleanLiteral_2 = null;

        EObject this_XNumberLiteral_3 = null;

        EObject this_XNullLiteral_4 = null;

        EObject this_XStringLiteral_5 = null;

        EObject this_XTypeLiteral_6 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:5311:2: ( (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) )
            // InternalMyCsmParser.g:5312:2: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            {
            // InternalMyCsmParser.g:5312:2: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            int alt114=7;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==NumberSign) ) {
                alt114=1;
            }
            else if ( (LA114_0==LeftSquareBracket) && (synpred21_InternalMyCsmParser())) {
                alt114=2;
            }
            else if ( (LA114_0==False||LA114_0==True) ) {
                alt114=3;
            }
            else if ( ((LA114_0>=RULE_HEX && LA114_0<=RULE_DECIMAL)) ) {
                alt114=4;
            }
            else if ( (LA114_0==Null) ) {
                alt114=5;
            }
            else if ( (LA114_0==RULE_STRING) ) {
                alt114=6;
            }
            else if ( (LA114_0==Typeof) ) {
                alt114=7;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 114, 0, input);

                throw nvae;
            }
            switch (alt114) {
                case 1 :
                    // InternalMyCsmParser.g:5313:3: this_XCollectionLiteral_0= ruleXCollectionLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCollectionLiteral_0=ruleXCollectionLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCollectionLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:5322:3: ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure )
                    {
                    // InternalMyCsmParser.g:5322:3: ( ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure )
                    // InternalMyCsmParser.g:5323:4: ( ( () LeftSquareBracket ) )=>this_XClosure_1= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XClosure_1=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XClosure_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMyCsmParser.g:5339:3: this_XBooleanLiteral_2= ruleXBooleanLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBooleanLiteral_2=ruleXBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBooleanLiteral_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyCsmParser.g:5348:3: this_XNumberLiteral_3= ruleXNumberLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNumberLiteral_3=ruleXNumberLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNumberLiteral_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMyCsmParser.g:5357:3: this_XNullLiteral_4= ruleXNullLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNullLiteral_4=ruleXNullLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNullLiteral_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalMyCsmParser.g:5366:3: this_XStringLiteral_5= ruleXStringLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XStringLiteral_5=ruleXStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XStringLiteral_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalMyCsmParser.g:5375:3: this_XTypeLiteral_6= ruleXTypeLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XTypeLiteral_6=ruleXTypeLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XTypeLiteral_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXLiteral"


    // $ANTLR start "entryRuleXCollectionLiteral"
    // InternalMyCsmParser.g:5387:1: entryRuleXCollectionLiteral returns [EObject current=null] : iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF ;
    public final EObject entryRuleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCollectionLiteral = null;


        try {
            // InternalMyCsmParser.g:5387:59: (iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF )
            // InternalMyCsmParser.g:5388:2: iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCollectionLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCollectionLiteral=ruleXCollectionLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCollectionLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCollectionLiteral"


    // $ANTLR start "ruleXCollectionLiteral"
    // InternalMyCsmParser.g:5394:1: ruleXCollectionLiteral returns [EObject current=null] : (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) ;
    public final EObject ruleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XSetLiteral_0 = null;

        EObject this_XListLiteral_1 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:5400:2: ( (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) )
            // InternalMyCsmParser.g:5401:2: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            {
            // InternalMyCsmParser.g:5401:2: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==NumberSign) ) {
                int LA115_1 = input.LA(2);

                if ( (LA115_1==LeftSquareBracket) ) {
                    alt115=2;
                }
                else if ( (LA115_1==LeftCurlyBracket) ) {
                    alt115=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 115, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;
            }
            switch (alt115) {
                case 1 :
                    // InternalMyCsmParser.g:5402:3: this_XSetLiteral_0= ruleXSetLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XSetLiteral_0=ruleXSetLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XSetLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:5411:3: this_XListLiteral_1= ruleXListLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XListLiteral_1=ruleXListLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XListLiteral_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCollectionLiteral"


    // $ANTLR start "entryRuleXSetLiteral"
    // InternalMyCsmParser.g:5423:1: entryRuleXSetLiteral returns [EObject current=null] : iv_ruleXSetLiteral= ruleXSetLiteral EOF ;
    public final EObject entryRuleXSetLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSetLiteral = null;


        try {
            // InternalMyCsmParser.g:5423:52: (iv_ruleXSetLiteral= ruleXSetLiteral EOF )
            // InternalMyCsmParser.g:5424:2: iv_ruleXSetLiteral= ruleXSetLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSetLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSetLiteral=ruleXSetLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSetLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSetLiteral"


    // $ANTLR start "ruleXSetLiteral"
    // InternalMyCsmParser.g:5430:1: ruleXSetLiteral returns [EObject current=null] : ( () otherlv_1= NumberSign otherlv_2= LeftCurlyBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightCurlyBracket ) ;
    public final EObject ruleXSetLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:5436:2: ( ( () otherlv_1= NumberSign otherlv_2= LeftCurlyBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightCurlyBracket ) )
            // InternalMyCsmParser.g:5437:2: ( () otherlv_1= NumberSign otherlv_2= LeftCurlyBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightCurlyBracket )
            {
            // InternalMyCsmParser.g:5437:2: ( () otherlv_1= NumberSign otherlv_2= LeftCurlyBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightCurlyBracket )
            // InternalMyCsmParser.g:5438:3: () otherlv_1= NumberSign otherlv_2= LeftCurlyBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightCurlyBracket
            {
            // InternalMyCsmParser.g:5438:3: ()
            // InternalMyCsmParser.g:5439:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,NumberSign,FOLLOW_70); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_71); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalMyCsmParser.g:5453:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==Synchronized||LA117_0==Extension||LA117_0==Extends||(LA117_0>=Import && LA117_0<=Typeof)||(LA117_0>=False && LA117_0<=Throw)||LA117_0==While||LA117_0==Null||LA117_0==True||(LA117_0>=For && LA117_0<=New)||LA117_0==Try||(LA117_0>=Do && LA117_0<=If)||(LA117_0>=ExclamationMark && LA117_0<=NumberSign)||LA117_0==LeftParenthesis||LA117_0==PlusSign||LA117_0==HyphenMinus||LA117_0==LessThanSign||LA117_0==LeftSquareBracket||LA117_0==RULE_BEGIN||(LA117_0>=RULE_HEX && LA117_0<=RULE_STRING)) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalMyCsmParser.g:5454:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalMyCsmParser.g:5454:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalMyCsmParser.g:5455:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalMyCsmParser.g:5455:5: (lv_elements_3_0= ruleXExpression )
                    // InternalMyCsmParser.g:5456:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_72);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:5473:4: (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop116:
                    do {
                        int alt116=2;
                        int LA116_0 = input.LA(1);

                        if ( (LA116_0==Comma) ) {
                            alt116=1;
                        }


                        switch (alt116) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:5474:5: otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:5478:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalMyCsmParser.g:5479:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalMyCsmParser.g:5479:6: (lv_elements_5_0= ruleXExpression )
                    	    // InternalMyCsmParser.g:5480:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_72);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop116;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSetLiteral"


    // $ANTLR start "entryRuleXListLiteral"
    // InternalMyCsmParser.g:5507:1: entryRuleXListLiteral returns [EObject current=null] : iv_ruleXListLiteral= ruleXListLiteral EOF ;
    public final EObject entryRuleXListLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXListLiteral = null;


        try {
            // InternalMyCsmParser.g:5507:53: (iv_ruleXListLiteral= ruleXListLiteral EOF )
            // InternalMyCsmParser.g:5508:2: iv_ruleXListLiteral= ruleXListLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXListLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXListLiteral=ruleXListLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXListLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXListLiteral"


    // $ANTLR start "ruleXListLiteral"
    // InternalMyCsmParser.g:5514:1: ruleXListLiteral returns [EObject current=null] : ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightSquareBracket ) ;
    public final EObject ruleXListLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:5520:2: ( ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightSquareBracket ) )
            // InternalMyCsmParser.g:5521:2: ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightSquareBracket )
            {
            // InternalMyCsmParser.g:5521:2: ( () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightSquareBracket )
            // InternalMyCsmParser.g:5522:3: () otherlv_1= NumberSign otherlv_2= LeftSquareBracket ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= RightSquareBracket
            {
            // InternalMyCsmParser.g:5522:3: ()
            // InternalMyCsmParser.g:5523:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXListLiteralAccess().getXListLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,NumberSign,FOLLOW_73); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,LeftSquareBracket,FOLLOW_74); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalMyCsmParser.g:5537:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==Synchronized||LA119_0==Extension||LA119_0==Extends||(LA119_0>=Import && LA119_0<=Typeof)||(LA119_0>=False && LA119_0<=Throw)||LA119_0==While||LA119_0==Null||LA119_0==True||(LA119_0>=For && LA119_0<=New)||LA119_0==Try||(LA119_0>=Do && LA119_0<=If)||(LA119_0>=ExclamationMark && LA119_0<=NumberSign)||LA119_0==LeftParenthesis||LA119_0==PlusSign||LA119_0==HyphenMinus||LA119_0==LessThanSign||LA119_0==LeftSquareBracket||LA119_0==RULE_BEGIN||(LA119_0>=RULE_HEX && LA119_0<=RULE_STRING)) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalMyCsmParser.g:5538:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalMyCsmParser.g:5538:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalMyCsmParser.g:5539:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalMyCsmParser.g:5539:5: (lv_elements_3_0= ruleXExpression )
                    // InternalMyCsmParser.g:5540:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_75);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:5557:4: (otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop118:
                    do {
                        int alt118=2;
                        int LA118_0 = input.LA(1);

                        if ( (LA118_0==Comma) ) {
                            alt118=1;
                        }


                        switch (alt118) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:5558:5: otherlv_4= Comma ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:5562:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalMyCsmParser.g:5563:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalMyCsmParser.g:5563:6: (lv_elements_5_0= ruleXExpression )
                    	    // InternalMyCsmParser.g:5564:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_75);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop118;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXListLiteral"


    // $ANTLR start "entryRuleXClosure"
    // InternalMyCsmParser.g:5591:1: entryRuleXClosure returns [EObject current=null] : iv_ruleXClosure= ruleXClosure EOF ;
    public final EObject entryRuleXClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXClosure = null;


        try {
            // InternalMyCsmParser.g:5591:49: (iv_ruleXClosure= ruleXClosure EOF )
            // InternalMyCsmParser.g:5592:2: iv_ruleXClosure= ruleXClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXClosure=ruleXClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXClosure"


    // $ANTLR start "ruleXClosure"
    // InternalMyCsmParser.g:5598:1: ruleXClosure returns [EObject current=null] : ( ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= RightSquareBracket ) ;
    public final EObject ruleXClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_explicitSyntax_5_0=null;
        Token otherlv_7=null;
        EObject lv_declaredFormalParameters_2_0 = null;

        EObject lv_declaredFormalParameters_4_0 = null;

        EObject lv_expression_6_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:5604:2: ( ( ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= RightSquareBracket ) )
            // InternalMyCsmParser.g:5605:2: ( ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= RightSquareBracket )
            {
            // InternalMyCsmParser.g:5605:2: ( ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= RightSquareBracket )
            // InternalMyCsmParser.g:5606:3: ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= RightSquareBracket
            {
            // InternalMyCsmParser.g:5606:3: ( ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket ) )
            // InternalMyCsmParser.g:5607:4: ( ( () LeftSquareBracket ) )=> ( () otherlv_1= LeftSquareBracket )
            {
            // InternalMyCsmParser.g:5613:4: ( () otherlv_1= LeftSquareBracket )
            // InternalMyCsmParser.g:5614:5: () otherlv_1= LeftSquareBracket
            {
            // InternalMyCsmParser.g:5614:5: ()
            // InternalMyCsmParser.g:5615:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXClosureAccess().getXClosureAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1());
              				
            }

            }


            }

            // InternalMyCsmParser.g:5627:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )?
            int alt122=2;
            alt122 = dfa122.predict(input);
            switch (alt122) {
                case 1 :
                    // InternalMyCsmParser.g:5628:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) )
                    {
                    // InternalMyCsmParser.g:5651:4: ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) )
                    // InternalMyCsmParser.g:5652:5: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) )
                    {
                    // InternalMyCsmParser.g:5652:5: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )?
                    int alt121=2;
                    int LA121_0 = input.LA(1);

                    if ( (LA121_0==EqualsSignGreaterThanSign||LA121_0==LeftParenthesis||LA121_0==RULE_ID) ) {
                        alt121=1;
                    }
                    switch (alt121) {
                        case 1 :
                            // InternalMyCsmParser.g:5653:6: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            {
                            // InternalMyCsmParser.g:5653:6: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) )
                            // InternalMyCsmParser.g:5654:7: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            {
                            // InternalMyCsmParser.g:5654:7: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            // InternalMyCsmParser.g:5655:8: lv_declaredFormalParameters_2_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_77);
                            lv_declaredFormalParameters_2_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXClosureRule());
                              								}
                              								add(
                              									current,
                              									"declaredFormalParameters",
                              									lv_declaredFormalParameters_2_0,
                              									"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalMyCsmParser.g:5672:6: (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            loop120:
                            do {
                                int alt120=2;
                                int LA120_0 = input.LA(1);

                                if ( (LA120_0==Comma) ) {
                                    alt120=1;
                                }


                                switch (alt120) {
                            	case 1 :
                            	    // InternalMyCsmParser.g:5673:7: otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    {
                            	    otherlv_3=(Token)match(input,Comma,FOLLOW_52); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0());
                            	      						
                            	    }
                            	    // InternalMyCsmParser.g:5677:7: ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    // InternalMyCsmParser.g:5678:8: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    {
                            	    // InternalMyCsmParser.g:5678:8: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    // InternalMyCsmParser.g:5679:9: lv_declaredFormalParameters_4_0= ruleJvmFormalParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_77);
                            	    lv_declaredFormalParameters_4_0=ruleJvmFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXClosureRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"declaredFormalParameters",
                            	      										lv_declaredFormalParameters_4_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop120;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalMyCsmParser.g:5698:5: ( (lv_explicitSyntax_5_0= VerticalLine ) )
                    // InternalMyCsmParser.g:5699:6: (lv_explicitSyntax_5_0= VerticalLine )
                    {
                    // InternalMyCsmParser.g:5699:6: (lv_explicitSyntax_5_0= VerticalLine )
                    // InternalMyCsmParser.g:5700:7: lv_explicitSyntax_5_0= VerticalLine
                    {
                    lv_explicitSyntax_5_0=(Token)match(input,VerticalLine,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_explicitSyntax_5_0, grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXClosureRule());
                      							}
                      							setWithLastConsumed(current, "explicitSyntax", lv_explicitSyntax_5_0 != null, "|");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:5714:3: ( (lv_expression_6_0= ruleXExpressionInClosure ) )
            // InternalMyCsmParser.g:5715:4: (lv_expression_6_0= ruleXExpressionInClosure )
            {
            // InternalMyCsmParser.g:5715:4: (lv_expression_6_0= ruleXExpressionInClosure )
            // InternalMyCsmParser.g:5716:5: lv_expression_6_0= ruleXExpressionInClosure
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_78);
            lv_expression_6_0=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXClosureRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_6_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpressionInClosure");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_7=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXClosure"


    // $ANTLR start "entryRuleXExpressionInClosure"
    // InternalMyCsmParser.g:5741:1: entryRuleXExpressionInClosure returns [EObject current=null] : iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF ;
    public final EObject entryRuleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionInClosure = null;


        try {
            // InternalMyCsmParser.g:5741:61: (iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF )
            // InternalMyCsmParser.g:5742:2: iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionInClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionInClosure=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionInClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionInClosure"


    // $ANTLR start "ruleXExpressionInClosure"
    // InternalMyCsmParser.g:5748:1: ruleXExpressionInClosure returns [EObject current=null] : ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )* ) ;
    public final EObject ruleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_expressions_1_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:5754:2: ( ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )* ) )
            // InternalMyCsmParser.g:5755:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )* )
            {
            // InternalMyCsmParser.g:5755:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )* )
            // InternalMyCsmParser.g:5756:3: () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )*
            {
            // InternalMyCsmParser.g:5756:3: ()
            // InternalMyCsmParser.g:5757:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalMyCsmParser.g:5763:3: ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )? )*
            loop124:
            do {
                int alt124=2;
                int LA124_0 = input.LA(1);

                if ( (LA124_0==Synchronized||LA124_0==Extension||LA124_0==Extends||(LA124_0>=Import && LA124_0<=Typeof)||(LA124_0>=False && LA124_0<=Throw)||LA124_0==While||LA124_0==Null||LA124_0==True||(LA124_0>=For && LA124_0<=New)||(LA124_0>=Try && LA124_0<=Var)||(LA124_0>=Do && LA124_0<=If)||(LA124_0>=ExclamationMark && LA124_0<=NumberSign)||LA124_0==LeftParenthesis||LA124_0==PlusSign||LA124_0==HyphenMinus||LA124_0==LessThanSign||LA124_0==LeftSquareBracket||LA124_0==RULE_BEGIN||(LA124_0>=RULE_HEX && LA124_0<=RULE_STRING)) ) {
                    alt124=1;
                }


                switch (alt124) {
            	case 1 :
            	    // InternalMyCsmParser.g:5764:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= Semicolon )?
            	    {
            	    // InternalMyCsmParser.g:5764:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalMyCsmParser.g:5765:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalMyCsmParser.g:5765:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    // InternalMyCsmParser.g:5766:6: lv_expressions_1_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_79);
            	    lv_expressions_1_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expressions",
            	      							lv_expressions_1_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalMyCsmParser.g:5783:4: (otherlv_2= Semicolon )?
            	    int alt123=2;
            	    int LA123_0 = input.LA(1);

            	    if ( (LA123_0==Semicolon) ) {
            	        alt123=1;
            	    }
            	    switch (alt123) {
            	        case 1 :
            	            // InternalMyCsmParser.g:5784:5: otherlv_2= Semicolon
            	            {
            	            otherlv_2=(Token)match(input,Semicolon,FOLLOW_80); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop124;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionInClosure"


    // $ANTLR start "entryRuleXShortClosure"
    // InternalMyCsmParser.g:5794:1: entryRuleXShortClosure returns [EObject current=null] : iv_ruleXShortClosure= ruleXShortClosure EOF ;
    public final EObject entryRuleXShortClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXShortClosure = null;


        try {
            // InternalMyCsmParser.g:5794:54: (iv_ruleXShortClosure= ruleXShortClosure EOF )
            // InternalMyCsmParser.g:5795:2: iv_ruleXShortClosure= ruleXShortClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXShortClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXShortClosure=ruleXShortClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXShortClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXShortClosure"


    // $ANTLR start "ruleXShortClosure"
    // InternalMyCsmParser.g:5801:1: ruleXShortClosure returns [EObject current=null] : ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXShortClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitSyntax_4_0=null;
        EObject lv_declaredFormalParameters_1_0 = null;

        EObject lv_declaredFormalParameters_3_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:5807:2: ( ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // InternalMyCsmParser.g:5808:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // InternalMyCsmParser.g:5808:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            // InternalMyCsmParser.g:5809:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) )
            {
            // InternalMyCsmParser.g:5809:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) ) )
            // InternalMyCsmParser.g:5810:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) )
            {
            // InternalMyCsmParser.g:5835:4: ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) ) )
            // InternalMyCsmParser.g:5836:5: () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= VerticalLine ) )
            {
            // InternalMyCsmParser.g:5836:5: ()
            // InternalMyCsmParser.g:5837:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0(),
              							current);
              					
            }

            }

            // InternalMyCsmParser.g:5843:5: ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==EqualsSignGreaterThanSign||LA126_0==LeftParenthesis||LA126_0==RULE_ID) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalMyCsmParser.g:5844:6: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    {
                    // InternalMyCsmParser.g:5844:6: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) )
                    // InternalMyCsmParser.g:5845:7: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    {
                    // InternalMyCsmParser.g:5845:7: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    // InternalMyCsmParser.g:5846:8: lv_declaredFormalParameters_1_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0());
                      							
                    }
                    pushFollow(FOLLOW_77);
                    lv_declaredFormalParameters_1_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                      								}
                      								add(
                      									current,
                      									"declaredFormalParameters",
                      									lv_declaredFormalParameters_1_0,
                      									"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalMyCsmParser.g:5863:6: (otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    loop125:
                    do {
                        int alt125=2;
                        int LA125_0 = input.LA(1);

                        if ( (LA125_0==Comma) ) {
                            alt125=1;
                        }


                        switch (alt125) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:5864:7: otherlv_2= Comma ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    {
                    	    otherlv_2=(Token)match(input,Comma,FOLLOW_52); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_2, grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0());
                    	      						
                    	    }
                    	    // InternalMyCsmParser.g:5868:7: ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    // InternalMyCsmParser.g:5869:8: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    {
                    	    // InternalMyCsmParser.g:5869:8: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    // InternalMyCsmParser.g:5870:9: lv_declaredFormalParameters_3_0= ruleJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0());
                    	      								
                    	    }
                    	    pushFollow(FOLLOW_77);
                    	    lv_declaredFormalParameters_3_0=ruleJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									if (current==null) {
                    	      										current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                    	      									}
                    	      									add(
                    	      										current,
                    	      										"declaredFormalParameters",
                    	      										lv_declaredFormalParameters_3_0,
                    	      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                    	      									afterParserOrEnumRuleCall();
                    	      								
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop125;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalMyCsmParser.g:5889:5: ( (lv_explicitSyntax_4_0= VerticalLine ) )
            // InternalMyCsmParser.g:5890:6: (lv_explicitSyntax_4_0= VerticalLine )
            {
            // InternalMyCsmParser.g:5890:6: (lv_explicitSyntax_4_0= VerticalLine )
            // InternalMyCsmParser.g:5891:7: lv_explicitSyntax_4_0= VerticalLine
            {
            lv_explicitSyntax_4_0=(Token)match(input,VerticalLine,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							newLeafNode(lv_explicitSyntax_4_0, grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0());
              						
            }
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElement(grammarAccess.getXShortClosureRule());
              							}
              							setWithLastConsumed(current, "explicitSyntax", lv_explicitSyntax_4_0 != null, "|");
              						
            }

            }


            }


            }


            }

            // InternalMyCsmParser.g:5905:3: ( (lv_expression_5_0= ruleXExpression ) )
            // InternalMyCsmParser.g:5906:4: (lv_expression_5_0= ruleXExpression )
            {
            // InternalMyCsmParser.g:5906:4: (lv_expression_5_0= ruleXExpression )
            // InternalMyCsmParser.g:5907:5: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXShortClosureRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXShortClosure"


    // $ANTLR start "entryRuleXParenthesizedExpression"
    // InternalMyCsmParser.g:5928:1: entryRuleXParenthesizedExpression returns [EObject current=null] : iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF ;
    public final EObject entryRuleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXParenthesizedExpression = null;


        try {
            // InternalMyCsmParser.g:5928:65: (iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF )
            // InternalMyCsmParser.g:5929:2: iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXParenthesizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXParenthesizedExpression"


    // $ANTLR start "ruleXParenthesizedExpression"
    // InternalMyCsmParser.g:5935:1: ruleXParenthesizedExpression returns [EObject current=null] : (otherlv_0= LeftParenthesis this_XExpression_1= ruleXExpression otherlv_2= RightParenthesis ) ;
    public final EObject ruleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:5941:2: ( (otherlv_0= LeftParenthesis this_XExpression_1= ruleXExpression otherlv_2= RightParenthesis ) )
            // InternalMyCsmParser.g:5942:2: (otherlv_0= LeftParenthesis this_XExpression_1= ruleXExpression otherlv_2= RightParenthesis )
            {
            // InternalMyCsmParser.g:5942:2: (otherlv_0= LeftParenthesis this_XExpression_1= ruleXExpression otherlv_2= RightParenthesis )
            // InternalMyCsmParser.g:5943:3: otherlv_0= LeftParenthesis this_XExpression_1= ruleXExpression otherlv_2= RightParenthesis
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_68);
            this_XExpression_1=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XExpression_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXParenthesizedExpression"


    // $ANTLR start "entryRuleXIfExpression"
    // InternalMyCsmParser.g:5963:1: entryRuleXIfExpression returns [EObject current=null] : iv_ruleXIfExpression= ruleXIfExpression EOF ;
    public final EObject entryRuleXIfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXIfExpression = null;


        try {
            // InternalMyCsmParser.g:5963:54: (iv_ruleXIfExpression= ruleXIfExpression EOF )
            // InternalMyCsmParser.g:5964:2: iv_ruleXIfExpression= ruleXIfExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXIfExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXIfExpression=ruleXIfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXIfExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXIfExpression"


    // $ANTLR start "ruleXIfExpression"
    // InternalMyCsmParser.g:5970:1: ruleXIfExpression returns [EObject current=null] : ( () otherlv_1= If otherlv_2= LeftParenthesis ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_then_5_0= ruleXExpression ) ) ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXIfExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_if_3_0 = null;

        EObject lv_then_5_0 = null;

        EObject lv_else_7_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:5976:2: ( ( () otherlv_1= If otherlv_2= LeftParenthesis ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_then_5_0= ruleXExpression ) ) ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )? ) )
            // InternalMyCsmParser.g:5977:2: ( () otherlv_1= If otherlv_2= LeftParenthesis ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_then_5_0= ruleXExpression ) ) ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            {
            // InternalMyCsmParser.g:5977:2: ( () otherlv_1= If otherlv_2= LeftParenthesis ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_then_5_0= ruleXExpression ) ) ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            // InternalMyCsmParser.g:5978:3: () otherlv_1= If otherlv_2= LeftParenthesis ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_then_5_0= ruleXExpression ) ) ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )?
            {
            // InternalMyCsmParser.g:5978:3: ()
            // InternalMyCsmParser.g:5979:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,If,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalMyCsmParser.g:5993:3: ( (lv_if_3_0= ruleXExpression ) )
            // InternalMyCsmParser.g:5994:4: (lv_if_3_0= ruleXExpression )
            {
            // InternalMyCsmParser.g:5994:4: (lv_if_3_0= ruleXExpression )
            // InternalMyCsmParser.g:5995:5: lv_if_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_68);
            lv_if_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              					}
              					set(
              						current,
              						"if",
              						lv_if_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalMyCsmParser.g:6016:3: ( (lv_then_5_0= ruleXExpression ) )
            // InternalMyCsmParser.g:6017:4: (lv_then_5_0= ruleXExpression )
            {
            // InternalMyCsmParser.g:6017:4: (lv_then_5_0= ruleXExpression )
            // InternalMyCsmParser.g:6018:5: lv_then_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_81);
            lv_then_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              					}
              					set(
              						current,
              						"then",
              						lv_then_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyCsmParser.g:6035:3: ( ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) ) )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==Else) ) {
                int LA127_1 = input.LA(2);

                if ( (synpred25_InternalMyCsmParser()) ) {
                    alt127=1;
                }
            }
            switch (alt127) {
                case 1 :
                    // InternalMyCsmParser.g:6036:4: ( ( Else )=>otherlv_6= Else ) ( (lv_else_7_0= ruleXExpression ) )
                    {
                    // InternalMyCsmParser.g:6036:4: ( ( Else )=>otherlv_6= Else )
                    // InternalMyCsmParser.g:6037:5: ( Else )=>otherlv_6= Else
                    {
                    otherlv_6=(Token)match(input,Else,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
                      				
                    }

                    }

                    // InternalMyCsmParser.g:6043:4: ( (lv_else_7_0= ruleXExpression ) )
                    // InternalMyCsmParser.g:6044:5: (lv_else_7_0= ruleXExpression )
                    {
                    // InternalMyCsmParser.g:6044:5: (lv_else_7_0= ruleXExpression )
                    // InternalMyCsmParser.g:6045:6: lv_else_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_else_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
                      						}
                      						set(
                      							current,
                      							"else",
                      							lv_else_7_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXIfExpression"


    // $ANTLR start "entryRuleXSwitchExpression"
    // InternalMyCsmParser.g:6067:1: entryRuleXSwitchExpression returns [EObject current=null] : iv_ruleXSwitchExpression= ruleXSwitchExpression EOF ;
    public final EObject entryRuleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSwitchExpression = null;


        try {
            // InternalMyCsmParser.g:6067:58: (iv_ruleXSwitchExpression= ruleXSwitchExpression EOF )
            // InternalMyCsmParser.g:6068:2: iv_ruleXSwitchExpression= ruleXSwitchExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSwitchExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSwitchExpression=ruleXSwitchExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSwitchExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSwitchExpression"


    // $ANTLR start "ruleXSwitchExpression"
    // InternalMyCsmParser.g:6074:1: ruleXSwitchExpression returns [EObject current=null] : ( () otherlv_1= Switch ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= LeftCurlyBracket ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= RightCurlyBracket ) ;
    public final EObject ruleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_switch_5_0 = null;

        EObject lv_declaredParam_7_0 = null;

        EObject lv_switch_9_0 = null;

        EObject lv_cases_11_0 = null;

        EObject lv_default_14_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:6080:2: ( ( () otherlv_1= Switch ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= LeftCurlyBracket ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= RightCurlyBracket ) )
            // InternalMyCsmParser.g:6081:2: ( () otherlv_1= Switch ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= LeftCurlyBracket ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= RightCurlyBracket )
            {
            // InternalMyCsmParser.g:6081:2: ( () otherlv_1= Switch ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= LeftCurlyBracket ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= RightCurlyBracket )
            // InternalMyCsmParser.g:6082:3: () otherlv_1= Switch ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= LeftCurlyBracket ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= RightCurlyBracket
            {
            // InternalMyCsmParser.g:6082:3: ()
            // InternalMyCsmParser.g:6083:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Switch,FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
              		
            }
            // InternalMyCsmParser.g:6093:3: ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )
            int alt129=2;
            alt129 = dfa129.predict(input);
            switch (alt129) {
                case 1 :
                    // InternalMyCsmParser.g:6094:4: ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis )
                    {
                    // InternalMyCsmParser.g:6094:4: ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis )
                    // InternalMyCsmParser.g:6095:5: ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis
                    {
                    // InternalMyCsmParser.g:6095:5: ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) )
                    // InternalMyCsmParser.g:6096:6: ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon )
                    {
                    // InternalMyCsmParser.g:6106:6: (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon )
                    // InternalMyCsmParser.g:6107:7: otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon
                    {
                    otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_2, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_0_0_0_0());
                      						
                    }
                    // InternalMyCsmParser.g:6111:7: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
                    // InternalMyCsmParser.g:6112:8: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    {
                    // InternalMyCsmParser.g:6112:8: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    // InternalMyCsmParser.g:6113:9: lv_declaredParam_3_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      									newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0());
                      								
                    }
                    pushFollow(FOLLOW_83);
                    lv_declaredParam_3_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      									if (current==null) {
                      										current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      									}
                      									set(
                      										current,
                      										"declaredParam",
                      										lv_declaredParam_3_0,
                      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                      									afterParserOrEnumRuleCall();
                      								
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,Colon,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_4, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_2());
                      						
                    }

                    }


                    }

                    // InternalMyCsmParser.g:6136:5: ( (lv_switch_5_0= ruleXExpression ) )
                    // InternalMyCsmParser.g:6137:6: (lv_switch_5_0= ruleXExpression )
                    {
                    // InternalMyCsmParser.g:6137:6: (lv_switch_5_0= ruleXExpression )
                    // InternalMyCsmParser.g:6138:7: lv_switch_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_68);
                    lv_switch_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      							}
                      							set(
                      								current,
                      								"switch",
                      								lv_switch_5_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:6161:4: ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    {
                    // InternalMyCsmParser.g:6161:4: ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    // InternalMyCsmParser.g:6162:5: ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) )
                    {
                    // InternalMyCsmParser.g:6162:5: ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )?
                    int alt128=2;
                    alt128 = dfa128.predict(input);
                    switch (alt128) {
                        case 1 :
                            // InternalMyCsmParser.g:6163:6: ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon )
                            {
                            // InternalMyCsmParser.g:6172:6: ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon )
                            // InternalMyCsmParser.g:6173:7: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon
                            {
                            // InternalMyCsmParser.g:6173:7: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) )
                            // InternalMyCsmParser.g:6174:8: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            {
                            // InternalMyCsmParser.g:6174:8: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            // InternalMyCsmParser.g:6175:9: lv_declaredParam_7_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0());
                              								
                            }
                            pushFollow(FOLLOW_83);
                            lv_declaredParam_7_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                              									}
                              									set(
                              										current,
                              										"declaredParam",
                              										lv_declaredParam_7_0,
                              										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            otherlv_8=(Token)match(input,Colon,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_8, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_1());
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalMyCsmParser.g:6198:5: ( (lv_switch_9_0= ruleXExpression ) )
                    // InternalMyCsmParser.g:6199:6: (lv_switch_9_0= ruleXExpression )
                    {
                    // InternalMyCsmParser.g:6199:6: (lv_switch_9_0= ruleXExpression )
                    // InternalMyCsmParser.g:6200:7: lv_switch_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_70);
                    lv_switch_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      							}
                      							set(
                      								current,
                      								"switch",
                      								lv_switch_9_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,LeftCurlyBracket,FOLLOW_84); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalMyCsmParser.g:6223:3: ( (lv_cases_11_0= ruleXCasePart ) )*
            loop130:
            do {
                int alt130=2;
                int LA130_0 = input.LA(1);

                if ( (LA130_0==Case||LA130_0==EqualsSignGreaterThanSign||LA130_0==LeftParenthesis||LA130_0==Comma||LA130_0==Colon||LA130_0==RULE_ID) ) {
                    alt130=1;
                }


                switch (alt130) {
            	case 1 :
            	    // InternalMyCsmParser.g:6224:4: (lv_cases_11_0= ruleXCasePart )
            	    {
            	    // InternalMyCsmParser.g:6224:4: (lv_cases_11_0= ruleXCasePart )
            	    // InternalMyCsmParser.g:6225:5: lv_cases_11_0= ruleXCasePart
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_84);
            	    lv_cases_11_0=ruleXCasePart();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"cases",
            	      						lv_cases_11_0,
            	      						"org.eclipse.xtext.xbase.Xbase.XCasePart");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop130;
                }
            } while (true);

            // InternalMyCsmParser.g:6242:3: (otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) ) )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==Default) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalMyCsmParser.g:6243:4: otherlv_12= Default otherlv_13= Colon ( (lv_default_14_0= ruleXExpression ) )
                    {
                    otherlv_12=(Token)match(input,Default,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0());
                      			
                    }
                    otherlv_13=(Token)match(input,Colon,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1());
                      			
                    }
                    // InternalMyCsmParser.g:6251:4: ( (lv_default_14_0= ruleXExpression ) )
                    // InternalMyCsmParser.g:6252:5: (lv_default_14_0= ruleXExpression )
                    {
                    // InternalMyCsmParser.g:6252:5: (lv_default_14_0= ruleXExpression )
                    // InternalMyCsmParser.g:6253:6: lv_default_14_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_85);
                    lv_default_14_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      						}
                      						set(
                      							current,
                      							"default",
                      							lv_default_14_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSwitchExpression"


    // $ANTLR start "entryRuleXCasePart"
    // InternalMyCsmParser.g:6279:1: entryRuleXCasePart returns [EObject current=null] : iv_ruleXCasePart= ruleXCasePart EOF ;
    public final EObject entryRuleXCasePart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCasePart = null;


        try {
            // InternalMyCsmParser.g:6279:50: (iv_ruleXCasePart= ruleXCasePart EOF )
            // InternalMyCsmParser.g:6280:2: iv_ruleXCasePart= ruleXCasePart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCasePartRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCasePart=ruleXCasePart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCasePart; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCasePart"


    // $ANTLR start "ruleXCasePart"
    // InternalMyCsmParser.g:6286:1: ruleXCasePart returns [EObject current=null] : ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) ) ) ;
    public final EObject ruleXCasePart() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_fallThrough_6_0=null;
        EObject lv_typeGuard_1_0 = null;

        EObject lv_case_3_0 = null;

        EObject lv_then_5_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:6292:2: ( ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) ) ) )
            // InternalMyCsmParser.g:6293:2: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) ) )
            {
            // InternalMyCsmParser.g:6293:2: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) ) )
            // InternalMyCsmParser.g:6294:3: () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) )
            {
            // InternalMyCsmParser.g:6294:3: ()
            // InternalMyCsmParser.g:6295:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXCasePartAccess().getXCasePartAction_0(),
              					current);
              			
            }

            }

            // InternalMyCsmParser.g:6301:3: ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==EqualsSignGreaterThanSign||LA132_0==LeftParenthesis||LA132_0==RULE_ID) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalMyCsmParser.g:6302:4: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    {
                    // InternalMyCsmParser.g:6302:4: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    // InternalMyCsmParser.g:6303:5: lv_typeGuard_1_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_86);
                    lv_typeGuard_1_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      					}
                      					set(
                      						current,
                      						"typeGuard",
                      						lv_typeGuard_1_0,
                      						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:6320:3: (otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) ) )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==Case) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // InternalMyCsmParser.g:6321:4: otherlv_2= Case ( (lv_case_3_0= ruleXExpression ) )
                    {
                    otherlv_2=(Token)match(input,Case,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getXCasePartAccess().getCaseKeyword_2_0());
                      			
                    }
                    // InternalMyCsmParser.g:6325:4: ( (lv_case_3_0= ruleXExpression ) )
                    // InternalMyCsmParser.g:6326:5: (lv_case_3_0= ruleXExpression )
                    {
                    // InternalMyCsmParser.g:6326:5: (lv_case_3_0= ruleXExpression )
                    // InternalMyCsmParser.g:6327:6: lv_case_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_87);
                    lv_case_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      						}
                      						set(
                      							current,
                      							"case",
                      							lv_case_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:6345:3: ( (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= Comma ) ) )
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==Colon) ) {
                alt134=1;
            }
            else if ( (LA134_0==Comma) ) {
                alt134=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 134, 0, input);

                throw nvae;
            }
            switch (alt134) {
                case 1 :
                    // InternalMyCsmParser.g:6346:4: (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) )
                    {
                    // InternalMyCsmParser.g:6346:4: (otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) ) )
                    // InternalMyCsmParser.g:6347:5: otherlv_4= Colon ( (lv_then_5_0= ruleXExpression ) )
                    {
                    otherlv_4=(Token)match(input,Colon,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getXCasePartAccess().getColonKeyword_3_0_0());
                      				
                    }
                    // InternalMyCsmParser.g:6351:5: ( (lv_then_5_0= ruleXExpression ) )
                    // InternalMyCsmParser.g:6352:6: (lv_then_5_0= ruleXExpression )
                    {
                    // InternalMyCsmParser.g:6352:6: (lv_then_5_0= ruleXExpression )
                    // InternalMyCsmParser.g:6353:7: lv_then_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_then_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      							}
                      							set(
                      								current,
                      								"then",
                      								lv_then_5_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:6372:4: ( (lv_fallThrough_6_0= Comma ) )
                    {
                    // InternalMyCsmParser.g:6372:4: ( (lv_fallThrough_6_0= Comma ) )
                    // InternalMyCsmParser.g:6373:5: (lv_fallThrough_6_0= Comma )
                    {
                    // InternalMyCsmParser.g:6373:5: (lv_fallThrough_6_0= Comma )
                    // InternalMyCsmParser.g:6374:6: lv_fallThrough_6_0= Comma
                    {
                    lv_fallThrough_6_0=(Token)match(input,Comma,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_fallThrough_6_0, grammarAccess.getXCasePartAccess().getFallThroughCommaKeyword_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXCasePartRule());
                      						}
                      						setWithLastConsumed(current, "fallThrough", lv_fallThrough_6_0 != null, ",");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCasePart"


    // $ANTLR start "entryRuleXForLoopExpression"
    // InternalMyCsmParser.g:6391:1: entryRuleXForLoopExpression returns [EObject current=null] : iv_ruleXForLoopExpression= ruleXForLoopExpression EOF ;
    public final EObject entryRuleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXForLoopExpression = null;


        try {
            // InternalMyCsmParser.g:6391:59: (iv_ruleXForLoopExpression= ruleXForLoopExpression EOF )
            // InternalMyCsmParser.g:6392:2: iv_ruleXForLoopExpression= ruleXForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXForLoopExpression=ruleXForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXForLoopExpression"


    // $ANTLR start "ruleXForLoopExpression"
    // InternalMyCsmParser.g:6398:1: ruleXForLoopExpression returns [EObject current=null] : ( ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ( (lv_eachExpression_7_0= ruleXExpression ) ) ) ;
    public final EObject ruleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_forExpression_5_0 = null;

        EObject lv_eachExpression_7_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:6404:2: ( ( ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ( (lv_eachExpression_7_0= ruleXExpression ) ) ) )
            // InternalMyCsmParser.g:6405:2: ( ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            {
            // InternalMyCsmParser.g:6405:2: ( ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            // InternalMyCsmParser.g:6406:3: ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ( (lv_eachExpression_7_0= ruleXExpression ) )
            {
            // InternalMyCsmParser.g:6406:3: ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) )
            // InternalMyCsmParser.g:6407:4: ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon )
            {
            // InternalMyCsmParser.g:6420:4: ( () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon )
            // InternalMyCsmParser.g:6421:5: () otherlv_1= For otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon
            {
            // InternalMyCsmParser.g:6421:5: ()
            // InternalMyCsmParser.g:6422:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,For,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_0_0_1());
              				
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2());
              				
            }
            // InternalMyCsmParser.g:6436:5: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
            // InternalMyCsmParser.g:6437:6: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            {
            // InternalMyCsmParser.g:6437:6: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            // InternalMyCsmParser.g:6438:7: lv_declaredParam_3_0= ruleJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_0_0_3_0());
              						
            }
            pushFollow(FOLLOW_83);
            lv_declaredParam_3_0=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              							}
              							set(
              								current,
              								"declaredParam",
              								lv_declaredParam_3_0,
              								"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
              							afterParserOrEnumRuleCall();
              						
            }

            }


            }

            otherlv_4=(Token)match(input,Colon,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_0_0_4());
              				
            }

            }


            }

            // InternalMyCsmParser.g:6461:3: ( (lv_forExpression_5_0= ruleXExpression ) )
            // InternalMyCsmParser.g:6462:4: (lv_forExpression_5_0= ruleXExpression )
            {
            // InternalMyCsmParser.g:6462:4: (lv_forExpression_5_0= ruleXExpression )
            // InternalMyCsmParser.g:6463:5: lv_forExpression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_68);
            lv_forExpression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              					}
              					set(
              						current,
              						"forExpression",
              						lv_forExpression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalMyCsmParser.g:6484:3: ( (lv_eachExpression_7_0= ruleXExpression ) )
            // InternalMyCsmParser.g:6485:4: (lv_eachExpression_7_0= ruleXExpression )
            {
            // InternalMyCsmParser.g:6485:4: (lv_eachExpression_7_0= ruleXExpression )
            // InternalMyCsmParser.g:6486:5: lv_eachExpression_7_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_7_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              					}
              					set(
              						current,
              						"eachExpression",
              						lv_eachExpression_7_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXForLoopExpression"


    // $ANTLR start "entryRuleXBasicForLoopExpression"
    // InternalMyCsmParser.g:6507:1: entryRuleXBasicForLoopExpression returns [EObject current=null] : iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF ;
    public final EObject entryRuleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBasicForLoopExpression = null;


        try {
            // InternalMyCsmParser.g:6507:64: (iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF )
            // InternalMyCsmParser.g:6508:2: iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBasicForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBasicForLoopExpression=ruleXBasicForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBasicForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBasicForLoopExpression"


    // $ANTLR start "ruleXBasicForLoopExpression"
    // InternalMyCsmParser.g:6514:1: ruleXBasicForLoopExpression returns [EObject current=null] : ( () otherlv_1= For otherlv_2= LeftParenthesis ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= Semicolon ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= Semicolon ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= RightParenthesis ( (lv_eachExpression_13_0= ruleXExpression ) ) ) ;
    public final EObject ruleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_initExpressions_3_0 = null;

        EObject lv_initExpressions_5_0 = null;

        EObject lv_expression_7_0 = null;

        EObject lv_updateExpressions_9_0 = null;

        EObject lv_updateExpressions_11_0 = null;

        EObject lv_eachExpression_13_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:6520:2: ( ( () otherlv_1= For otherlv_2= LeftParenthesis ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= Semicolon ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= Semicolon ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= RightParenthesis ( (lv_eachExpression_13_0= ruleXExpression ) ) ) )
            // InternalMyCsmParser.g:6521:2: ( () otherlv_1= For otherlv_2= LeftParenthesis ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= Semicolon ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= Semicolon ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= RightParenthesis ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            {
            // InternalMyCsmParser.g:6521:2: ( () otherlv_1= For otherlv_2= LeftParenthesis ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= Semicolon ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= Semicolon ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= RightParenthesis ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            // InternalMyCsmParser.g:6522:3: () otherlv_1= For otherlv_2= LeftParenthesis ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= Semicolon ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= Semicolon ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= RightParenthesis ( (lv_eachExpression_13_0= ruleXExpression ) )
            {
            // InternalMyCsmParser.g:6522:3: ()
            // InternalMyCsmParser.g:6523:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBasicForLoopExpressionAccess().getXBasicForLoopExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,For,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXBasicForLoopExpressionAccess().getForKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_88); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalMyCsmParser.g:6537:3: ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==Synchronized||LA136_0==Extension||LA136_0==Extends||(LA136_0>=Import && LA136_0<=Typeof)||(LA136_0>=False && LA136_0<=Throw)||LA136_0==While||LA136_0==Null||LA136_0==True||(LA136_0>=For && LA136_0<=New)||(LA136_0>=Try && LA136_0<=Var)||(LA136_0>=Do && LA136_0<=If)||(LA136_0>=ExclamationMark && LA136_0<=NumberSign)||LA136_0==LeftParenthesis||LA136_0==PlusSign||LA136_0==HyphenMinus||LA136_0==LessThanSign||LA136_0==LeftSquareBracket||LA136_0==RULE_BEGIN||(LA136_0>=RULE_HEX && LA136_0<=RULE_STRING)) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // InternalMyCsmParser.g:6538:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    {
                    // InternalMyCsmParser.g:6538:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) )
                    // InternalMyCsmParser.g:6539:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    {
                    // InternalMyCsmParser.g:6539:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    // InternalMyCsmParser.g:6540:6: lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_89);
                    lv_initExpressions_3_0=ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      						}
                      						add(
                      							current,
                      							"initExpressions",
                      							lv_initExpressions_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:6557:4: (otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    loop135:
                    do {
                        int alt135=2;
                        int LA135_0 = input.LA(1);

                        if ( (LA135_0==Comma) ) {
                            alt135=1;
                        }


                        switch (alt135) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:6558:5: otherlv_4= Comma ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:6562:5: ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    // InternalMyCsmParser.g:6563:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    {
                    	    // InternalMyCsmParser.g:6563:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    // InternalMyCsmParser.g:6564:7: lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_89);
                    	    lv_initExpressions_5_0=ruleXExpressionOrVarDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"initExpressions",
                    	      								lv_initExpressions_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop135;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,Semicolon,FOLLOW_88); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_4());
              		
            }
            // InternalMyCsmParser.g:6587:3: ( (lv_expression_7_0= ruleXExpression ) )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==Synchronized||LA137_0==Extension||LA137_0==Extends||(LA137_0>=Import && LA137_0<=Typeof)||(LA137_0>=False && LA137_0<=Throw)||LA137_0==While||LA137_0==Null||LA137_0==True||(LA137_0>=For && LA137_0<=New)||LA137_0==Try||(LA137_0>=Do && LA137_0<=If)||(LA137_0>=ExclamationMark && LA137_0<=NumberSign)||LA137_0==LeftParenthesis||LA137_0==PlusSign||LA137_0==HyphenMinus||LA137_0==LessThanSign||LA137_0==LeftSquareBracket||LA137_0==RULE_BEGIN||(LA137_0>=RULE_HEX && LA137_0<=RULE_STRING)) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalMyCsmParser.g:6588:4: (lv_expression_7_0= ruleXExpression )
                    {
                    // InternalMyCsmParser.g:6588:4: (lv_expression_7_0= ruleXExpression )
                    // InternalMyCsmParser.g:6589:5: lv_expression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionXExpressionParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_90);
                    lv_expression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_7_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,Semicolon,FOLLOW_91); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_6());
              		
            }
            // InternalMyCsmParser.g:6610:3: ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==Synchronized||LA139_0==Extension||LA139_0==Extends||(LA139_0>=Import && LA139_0<=Typeof)||(LA139_0>=False && LA139_0<=Throw)||LA139_0==While||LA139_0==Null||LA139_0==True||(LA139_0>=For && LA139_0<=New)||LA139_0==Try||(LA139_0>=Do && LA139_0<=If)||(LA139_0>=ExclamationMark && LA139_0<=NumberSign)||LA139_0==LeftParenthesis||LA139_0==PlusSign||LA139_0==HyphenMinus||LA139_0==LessThanSign||LA139_0==LeftSquareBracket||LA139_0==RULE_BEGIN||(LA139_0>=RULE_HEX && LA139_0<=RULE_STRING)) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalMyCsmParser.g:6611:4: ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    {
                    // InternalMyCsmParser.g:6611:4: ( (lv_updateExpressions_9_0= ruleXExpression ) )
                    // InternalMyCsmParser.g:6612:5: (lv_updateExpressions_9_0= ruleXExpression )
                    {
                    // InternalMyCsmParser.g:6612:5: (lv_updateExpressions_9_0= ruleXExpression )
                    // InternalMyCsmParser.g:6613:6: lv_updateExpressions_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_updateExpressions_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      						}
                      						add(
                      							current,
                      							"updateExpressions",
                      							lv_updateExpressions_9_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:6630:4: (otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    loop138:
                    do {
                        int alt138=2;
                        int LA138_0 = input.LA(1);

                        if ( (LA138_0==Comma) ) {
                            alt138=1;
                        }


                        switch (alt138) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:6631:5: otherlv_10= Comma ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    {
                    	    otherlv_10=(Token)match(input,Comma,FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_7_1_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:6635:5: ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    // InternalMyCsmParser.g:6636:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    {
                    	    // InternalMyCsmParser.g:6636:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    // InternalMyCsmParser.g:6637:7: lv_updateExpressions_11_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    lv_updateExpressions_11_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"updateExpressions",
                    	      								lv_updateExpressions_11_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop138;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_12=(Token)match(input,RightParenthesis,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getXBasicForLoopExpressionAccess().getRightParenthesisKeyword_8());
              		
            }
            // InternalMyCsmParser.g:6660:3: ( (lv_eachExpression_13_0= ruleXExpression ) )
            // InternalMyCsmParser.g:6661:4: (lv_eachExpression_13_0= ruleXExpression )
            {
            // InternalMyCsmParser.g:6661:4: (lv_eachExpression_13_0= ruleXExpression )
            // InternalMyCsmParser.g:6662:5: lv_eachExpression_13_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_9_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_13_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
              					}
              					set(
              						current,
              						"eachExpression",
              						lv_eachExpression_13_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBasicForLoopExpression"


    // $ANTLR start "entryRuleXWhileExpression"
    // InternalMyCsmParser.g:6683:1: entryRuleXWhileExpression returns [EObject current=null] : iv_ruleXWhileExpression= ruleXWhileExpression EOF ;
    public final EObject entryRuleXWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXWhileExpression = null;


        try {
            // InternalMyCsmParser.g:6683:57: (iv_ruleXWhileExpression= ruleXWhileExpression EOF )
            // InternalMyCsmParser.g:6684:2: iv_ruleXWhileExpression= ruleXWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXWhileExpression=ruleXWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXWhileExpression"


    // $ANTLR start "ruleXWhileExpression"
    // InternalMyCsmParser.g:6690:1: ruleXWhileExpression returns [EObject current=null] : ( () otherlv_1= While otherlv_2= LeftParenthesis ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_body_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_predicate_3_0 = null;

        EObject lv_body_5_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:6696:2: ( ( () otherlv_1= While otherlv_2= LeftParenthesis ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_body_5_0= ruleXExpression ) ) ) )
            // InternalMyCsmParser.g:6697:2: ( () otherlv_1= While otherlv_2= LeftParenthesis ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_body_5_0= ruleXExpression ) ) )
            {
            // InternalMyCsmParser.g:6697:2: ( () otherlv_1= While otherlv_2= LeftParenthesis ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_body_5_0= ruleXExpression ) ) )
            // InternalMyCsmParser.g:6698:3: () otherlv_1= While otherlv_2= LeftParenthesis ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_body_5_0= ruleXExpression ) )
            {
            // InternalMyCsmParser.g:6698:3: ()
            // InternalMyCsmParser.g:6699:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,While,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalMyCsmParser.g:6713:3: ( (lv_predicate_3_0= ruleXExpression ) )
            // InternalMyCsmParser.g:6714:4: (lv_predicate_3_0= ruleXExpression )
            {
            // InternalMyCsmParser.g:6714:4: (lv_predicate_3_0= ruleXExpression )
            // InternalMyCsmParser.g:6715:5: lv_predicate_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_68);
            lv_predicate_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalMyCsmParser.g:6736:3: ( (lv_body_5_0= ruleXExpression ) )
            // InternalMyCsmParser.g:6737:4: (lv_body_5_0= ruleXExpression )
            {
            // InternalMyCsmParser.g:6737:4: (lv_body_5_0= ruleXExpression )
            // InternalMyCsmParser.g:6738:5: lv_body_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXWhileExpression"


    // $ANTLR start "entryRuleXDoWhileExpression"
    // InternalMyCsmParser.g:6759:1: entryRuleXDoWhileExpression returns [EObject current=null] : iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF ;
    public final EObject entryRuleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXDoWhileExpression = null;


        try {
            // InternalMyCsmParser.g:6759:59: (iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF )
            // InternalMyCsmParser.g:6760:2: iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXDoWhileExpression=ruleXDoWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXDoWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXDoWhileExpression"


    // $ANTLR start "ruleXDoWhileExpression"
    // InternalMyCsmParser.g:6766:1: ruleXDoWhileExpression returns [EObject current=null] : ( () otherlv_1= Do ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= While otherlv_4= LeftParenthesis ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) ;
    public final EObject ruleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_body_2_0 = null;

        EObject lv_predicate_5_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:6772:2: ( ( () otherlv_1= Do ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= While otherlv_4= LeftParenthesis ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) )
            // InternalMyCsmParser.g:6773:2: ( () otherlv_1= Do ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= While otherlv_4= LeftParenthesis ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis )
            {
            // InternalMyCsmParser.g:6773:2: ( () otherlv_1= Do ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= While otherlv_4= LeftParenthesis ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis )
            // InternalMyCsmParser.g:6774:3: () otherlv_1= Do ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= While otherlv_4= LeftParenthesis ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis
            {
            // InternalMyCsmParser.g:6774:3: ()
            // InternalMyCsmParser.g:6775:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Do,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
              		
            }
            // InternalMyCsmParser.g:6785:3: ( (lv_body_2_0= ruleXExpression ) )
            // InternalMyCsmParser.g:6786:4: (lv_body_2_0= ruleXExpression )
            {
            // InternalMyCsmParser.g:6786:4: (lv_body_2_0= ruleXExpression )
            // InternalMyCsmParser.g:6787:5: lv_body_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_92);
            lv_body_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,While,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
              		
            }
            otherlv_4=(Token)match(input,LeftParenthesis,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
              		
            }
            // InternalMyCsmParser.g:6812:3: ( (lv_predicate_5_0= ruleXExpression ) )
            // InternalMyCsmParser.g:6813:4: (lv_predicate_5_0= ruleXExpression )
            {
            // InternalMyCsmParser.g:6813:4: (lv_predicate_5_0= ruleXExpression )
            // InternalMyCsmParser.g:6814:5: lv_predicate_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_68);
            lv_predicate_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXDoWhileExpression"


    // $ANTLR start "entryRuleXExpressionOrVarDeclaration"
    // InternalMyCsmParser.g:6839:1: entryRuleXExpressionOrVarDeclaration returns [EObject current=null] : iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF ;
    public final EObject entryRuleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionOrVarDeclaration = null;


        try {
            // InternalMyCsmParser.g:6839:68: (iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF )
            // InternalMyCsmParser.g:6840:2: iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionOrVarDeclaration=ruleXExpressionOrVarDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionOrVarDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionOrVarDeclaration"


    // $ANTLR start "ruleXExpressionOrVarDeclaration"
    // InternalMyCsmParser.g:6846:1: ruleXExpressionOrVarDeclaration returns [EObject current=null] : (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_XVariableDeclaration_0 = null;

        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:6852:2: ( (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) )
            // InternalMyCsmParser.g:6853:2: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            {
            // InternalMyCsmParser.g:6853:2: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( ((LA140_0>=Val && LA140_0<=Var)) ) {
                alt140=1;
            }
            else if ( (LA140_0==Synchronized||LA140_0==Extension||LA140_0==Extends||(LA140_0>=Import && LA140_0<=Typeof)||(LA140_0>=False && LA140_0<=Throw)||LA140_0==While||LA140_0==Null||LA140_0==True||(LA140_0>=For && LA140_0<=New)||LA140_0==Try||(LA140_0>=Do && LA140_0<=If)||(LA140_0>=ExclamationMark && LA140_0<=NumberSign)||LA140_0==LeftParenthesis||LA140_0==PlusSign||LA140_0==HyphenMinus||LA140_0==LessThanSign||LA140_0==LeftSquareBracket||LA140_0==RULE_BEGIN||(LA140_0>=RULE_HEX && LA140_0<=RULE_STRING)) ) {
                alt140=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 140, 0, input);

                throw nvae;
            }
            switch (alt140) {
                case 1 :
                    // InternalMyCsmParser.g:6854:3: this_XVariableDeclaration_0= ruleXVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXVariableDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XVariableDeclaration_0=ruleXVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XVariableDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:6863:3: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionOrVarDeclaration"


    // $ANTLR start "entryRuleXVariableDeclaration"
    // InternalMyCsmParser.g:6875:1: entryRuleXVariableDeclaration returns [EObject current=null] : iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF ;
    public final EObject entryRuleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXVariableDeclaration = null;


        try {
            // InternalMyCsmParser.g:6875:61: (iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF )
            // InternalMyCsmParser.g:6876:2: iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXVariableDeclaration=ruleXVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXVariableDeclaration"


    // $ANTLR start "ruleXVariableDeclaration"
    // InternalMyCsmParser.g:6882:1: ruleXVariableDeclaration returns [EObject current=null] : ( () ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_writeable_1_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        EObject lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_right_7_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:6888:2: ( ( () ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )? ) )
            // InternalMyCsmParser.g:6889:2: ( () ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )? )
            {
            // InternalMyCsmParser.g:6889:2: ( () ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )? )
            // InternalMyCsmParser.g:6890:3: () ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )?
            {
            // InternalMyCsmParser.g:6890:3: ()
            // InternalMyCsmParser.g:6891:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalMyCsmParser.g:6897:3: ( ( (lv_writeable_1_0= Var ) ) | otherlv_2= Val )
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==Var) ) {
                alt141=1;
            }
            else if ( (LA141_0==Val) ) {
                alt141=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 141, 0, input);

                throw nvae;
            }
            switch (alt141) {
                case 1 :
                    // InternalMyCsmParser.g:6898:4: ( (lv_writeable_1_0= Var ) )
                    {
                    // InternalMyCsmParser.g:6898:4: ( (lv_writeable_1_0= Var ) )
                    // InternalMyCsmParser.g:6899:5: (lv_writeable_1_0= Var )
                    {
                    // InternalMyCsmParser.g:6899:5: (lv_writeable_1_0= Var )
                    // InternalMyCsmParser.g:6900:6: lv_writeable_1_0= Var
                    {
                    lv_writeable_1_0=(Token)match(input,Var,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_writeable_1_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						setWithLastConsumed(current, "writeable", lv_writeable_1_0 != null, "var");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:6913:4: otherlv_2= Val
                    {
                    otherlv_2=(Token)match(input,Val,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalMyCsmParser.g:6918:3: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) )
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==RULE_ID) ) {
                int LA142_1 = input.LA(2);

                if ( (synpred29_InternalMyCsmParser()) ) {
                    alt142=1;
                }
                else if ( (true) ) {
                    alt142=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 142, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA142_0==LeftParenthesis) && (synpred29_InternalMyCsmParser())) {
                alt142=1;
            }
            else if ( (LA142_0==EqualsSignGreaterThanSign) && (synpred29_InternalMyCsmParser())) {
                alt142=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 142, 0, input);

                throw nvae;
            }
            switch (alt142) {
                case 1 :
                    // InternalMyCsmParser.g:6919:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    {
                    // InternalMyCsmParser.g:6919:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    // InternalMyCsmParser.g:6920:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    {
                    // InternalMyCsmParser.g:6933:5: ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    // InternalMyCsmParser.g:6934:6: ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) )
                    {
                    // InternalMyCsmParser.g:6934:6: ( (lv_type_3_0= ruleJvmTypeReference ) )
                    // InternalMyCsmParser.g:6935:7: (lv_type_3_0= ruleJvmTypeReference )
                    {
                    // InternalMyCsmParser.g:6935:7: (lv_type_3_0= ruleJvmTypeReference )
                    // InternalMyCsmParser.g:6936:8: lv_type_3_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0());
                      							
                    }
                    pushFollow(FOLLOW_93);
                    lv_type_3_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      								}
                      								set(
                      									current,
                      									"type",
                      									lv_type_3_0,
                      									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalMyCsmParser.g:6953:6: ( (lv_name_4_0= ruleValidID ) )
                    // InternalMyCsmParser.g:6954:7: (lv_name_4_0= ruleValidID )
                    {
                    // InternalMyCsmParser.g:6954:7: (lv_name_4_0= ruleValidID )
                    // InternalMyCsmParser.g:6955:8: lv_name_4_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0());
                      							
                    }
                    pushFollow(FOLLOW_94);
                    lv_name_4_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      								}
                      								set(
                      									current,
                      									"name",
                      									lv_name_4_0,
                      									"org.eclipse.xtext.xbase.Xtype.ValidID");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:6975:4: ( (lv_name_5_0= ruleValidID ) )
                    {
                    // InternalMyCsmParser.g:6975:4: ( (lv_name_5_0= ruleValidID ) )
                    // InternalMyCsmParser.g:6976:5: (lv_name_5_0= ruleValidID )
                    {
                    // InternalMyCsmParser.g:6976:5: (lv_name_5_0= ruleValidID )
                    // InternalMyCsmParser.g:6977:6: lv_name_5_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_94);
                    lv_name_5_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_5_0,
                      							"org.eclipse.xtext.xbase.Xtype.ValidID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:6995:3: (otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) ) )?
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==EqualsSign) ) {
                alt143=1;
            }
            switch (alt143) {
                case 1 :
                    // InternalMyCsmParser.g:6996:4: otherlv_6= EqualsSign ( (lv_right_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,EqualsSign,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0());
                      			
                    }
                    // InternalMyCsmParser.g:7000:4: ( (lv_right_7_0= ruleXExpression ) )
                    // InternalMyCsmParser.g:7001:5: (lv_right_7_0= ruleXExpression )
                    {
                    // InternalMyCsmParser.g:7001:5: (lv_right_7_0= ruleXExpression )
                    // InternalMyCsmParser.g:7002:6: lv_right_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_right_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"right",
                      							lv_right_7_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXVariableDeclaration"


    // $ANTLR start "entryRuleJvmFormalParameter"
    // InternalMyCsmParser.g:7024:1: entryRuleJvmFormalParameter returns [EObject current=null] : iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF ;
    public final EObject entryRuleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmFormalParameter = null;


        try {
            // InternalMyCsmParser.g:7024:59: (iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF )
            // InternalMyCsmParser.g:7025:2: iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmFormalParameter=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmFormalParameter"


    // $ANTLR start "ruleJvmFormalParameter"
    // InternalMyCsmParser.g:7031:1: ruleJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:7037:2: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalMyCsmParser.g:7038:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalMyCsmParser.g:7038:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            // InternalMyCsmParser.g:7039:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalMyCsmParser.g:7039:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==RULE_ID) ) {
                int LA144_1 = input.LA(2);

                if ( (LA144_1==FullStop||LA144_1==LessThanSign||LA144_1==LeftSquareBracket||LA144_1==RULE_ID) ) {
                    alt144=1;
                }
            }
            else if ( (LA144_0==EqualsSignGreaterThanSign||LA144_0==LeftParenthesis) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // InternalMyCsmParser.g:7040:4: (lv_parameterType_0_0= ruleJvmTypeReference )
                    {
                    // InternalMyCsmParser.g:7040:4: (lv_parameterType_0_0= ruleJvmTypeReference )
                    // InternalMyCsmParser.g:7041:5: lv_parameterType_0_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_93);
                    lv_parameterType_0_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
                      					}
                      					set(
                      						current,
                      						"parameterType",
                      						lv_parameterType_0_0,
                      						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:7058:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalMyCsmParser.g:7059:4: (lv_name_1_0= ruleValidID )
            {
            // InternalMyCsmParser.g:7059:4: (lv_name_1_0= ruleValidID )
            // InternalMyCsmParser.g:7060:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmFormalParameter"


    // $ANTLR start "entryRuleFullJvmFormalParameter"
    // InternalMyCsmParser.g:7081:1: entryRuleFullJvmFormalParameter returns [EObject current=null] : iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF ;
    public final EObject entryRuleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFullJvmFormalParameter = null;


        try {
            // InternalMyCsmParser.g:7081:63: (iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF )
            // InternalMyCsmParser.g:7082:2: iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFullJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFullJvmFormalParameter"


    // $ANTLR start "ruleFullJvmFormalParameter"
    // InternalMyCsmParser.g:7088:1: ruleFullJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:7094:2: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalMyCsmParser.g:7095:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalMyCsmParser.g:7095:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            // InternalMyCsmParser.g:7096:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalMyCsmParser.g:7096:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )
            // InternalMyCsmParser.g:7097:4: (lv_parameterType_0_0= ruleJvmTypeReference )
            {
            // InternalMyCsmParser.g:7097:4: (lv_parameterType_0_0= ruleJvmTypeReference )
            // InternalMyCsmParser.g:7098:5: lv_parameterType_0_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_93);
            lv_parameterType_0_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"parameterType",
              						lv_parameterType_0_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyCsmParser.g:7115:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalMyCsmParser.g:7116:4: (lv_name_1_0= ruleValidID )
            {
            // InternalMyCsmParser.g:7116:4: (lv_name_1_0= ruleValidID )
            // InternalMyCsmParser.g:7117:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFullJvmFormalParameter"


    // $ANTLR start "entryRuleXFeatureCall"
    // InternalMyCsmParser.g:7138:1: entryRuleXFeatureCall returns [EObject current=null] : iv_ruleXFeatureCall= ruleXFeatureCall EOF ;
    public final EObject entryRuleXFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFeatureCall = null;


        try {
            // InternalMyCsmParser.g:7138:53: (iv_ruleXFeatureCall= ruleXFeatureCall EOF )
            // InternalMyCsmParser.g:7139:2: iv_ruleXFeatureCall= ruleXFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFeatureCall=ruleXFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFeatureCall"


    // $ANTLR start "ruleXFeatureCall"
    // InternalMyCsmParser.g:7145:1: ruleXFeatureCall returns [EObject current=null] : ( () (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) ;
    public final EObject ruleXFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_explicitOperationCall_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_typeArguments_2_0 = null;

        EObject lv_typeArguments_4_0 = null;

        EObject lv_featureCallArguments_8_0 = null;

        EObject lv_featureCallArguments_9_0 = null;

        EObject lv_featureCallArguments_11_0 = null;

        EObject lv_featureCallArguments_13_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:7151:2: ( ( () (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) )
            // InternalMyCsmParser.g:7152:2: ( () (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            {
            // InternalMyCsmParser.g:7152:2: ( () (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            // InternalMyCsmParser.g:7153:3: () (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )? ( ( ruleIdOrSuper ) ) ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            {
            // InternalMyCsmParser.g:7153:3: ()
            // InternalMyCsmParser.g:7154:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
              					current);
              			
            }

            }

            // InternalMyCsmParser.g:7160:3: (otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign )?
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==LessThanSign) ) {
                alt146=1;
            }
            switch (alt146) {
                case 1 :
                    // InternalMyCsmParser.g:7161:4: otherlv_1= LessThanSign ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign
                    {
                    otherlv_1=(Token)match(input,LessThanSign,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0());
                      			
                    }
                    // InternalMyCsmParser.g:7165:4: ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalMyCsmParser.g:7166:5: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalMyCsmParser.g:7166:5: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalMyCsmParser.g:7167:6: lv_typeArguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_65);
                    lv_typeArguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      						}
                      						add(
                      							current,
                      							"typeArguments",
                      							lv_typeArguments_2_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:7184:4: (otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop145:
                    do {
                        int alt145=2;
                        int LA145_0 = input.LA(1);

                        if ( (LA145_0==Comma) ) {
                            alt145=1;
                        }


                        switch (alt145) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:7185:5: otherlv_3= Comma ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_64); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:7189:5: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalMyCsmParser.g:7190:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalMyCsmParser.g:7190:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalMyCsmParser.g:7191:7: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_65);
                    	    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"typeArguments",
                    	      								lv_typeArguments_4_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop145;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,GreaterThanSign,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3());
                      			
                    }

                    }
                    break;

            }

            // InternalMyCsmParser.g:7214:3: ( ( ruleIdOrSuper ) )
            // InternalMyCsmParser.g:7215:4: ( ruleIdOrSuper )
            {
            // InternalMyCsmParser.g:7215:4: ( ruleIdOrSuper )
            // InternalMyCsmParser.g:7216:5: ruleIdOrSuper
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXFeatureCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_95);
            ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyCsmParser.g:7230:3: ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )?
            int alt149=2;
            alt149 = dfa149.predict(input);
            switch (alt149) {
                case 1 :
                    // InternalMyCsmParser.g:7231:4: ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis
                    {
                    // InternalMyCsmParser.g:7231:4: ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) )
                    // InternalMyCsmParser.g:7232:5: ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis )
                    {
                    // InternalMyCsmParser.g:7236:5: (lv_explicitOperationCall_7_0= LeftParenthesis )
                    // InternalMyCsmParser.g:7237:6: lv_explicitOperationCall_7_0= LeftParenthesis
                    {
                    lv_explicitOperationCall_7_0=(Token)match(input,LeftParenthesis,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitOperationCall_7_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXFeatureCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitOperationCall", lv_explicitOperationCall_7_0 != null, "(");
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:7249:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?
                    int alt148=3;
                    alt148 = dfa148.predict(input);
                    switch (alt148) {
                        case 1 :
                            // InternalMyCsmParser.g:7250:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            {
                            // InternalMyCsmParser.g:7250:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            // InternalMyCsmParser.g:7251:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure )
                            {
                            // InternalMyCsmParser.g:7276:6: (lv_featureCallArguments_8_0= ruleXShortClosure )
                            // InternalMyCsmParser.g:7277:7: lv_featureCallArguments_8_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_68);
                            lv_featureCallArguments_8_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              							}
                              							add(
                              								current,
                              								"featureCallArguments",
                              								lv_featureCallArguments_8_0,
                              								"org.eclipse.xtext.xbase.Xbase.XShortClosure");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMyCsmParser.g:7295:5: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            {
                            // InternalMyCsmParser.g:7295:5: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            // InternalMyCsmParser.g:7296:6: ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            {
                            // InternalMyCsmParser.g:7296:6: ( (lv_featureCallArguments_9_0= ruleXExpression ) )
                            // InternalMyCsmParser.g:7297:7: (lv_featureCallArguments_9_0= ruleXExpression )
                            {
                            // InternalMyCsmParser.g:7297:7: (lv_featureCallArguments_9_0= ruleXExpression )
                            // InternalMyCsmParser.g:7298:8: lv_featureCallArguments_9_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_17);
                            lv_featureCallArguments_9_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              								}
                              								add(
                              									current,
                              									"featureCallArguments",
                              									lv_featureCallArguments_9_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalMyCsmParser.g:7315:6: (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            loop147:
                            do {
                                int alt147=2;
                                int LA147_0 = input.LA(1);

                                if ( (LA147_0==Comma) ) {
                                    alt147=1;
                                }


                                switch (alt147) {
                            	case 1 :
                            	    // InternalMyCsmParser.g:7316:7: otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,Comma,FOLLOW_43); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0());
                            	      						
                            	    }
                            	    // InternalMyCsmParser.g:7320:7: ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    // InternalMyCsmParser.g:7321:8: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    {
                            	    // InternalMyCsmParser.g:7321:8: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    // InternalMyCsmParser.g:7322:9: lv_featureCallArguments_11_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_17);
                            	    lv_featureCallArguments_11_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"featureCallArguments",
                            	      										lv_featureCallArguments_11_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop147;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,RightParenthesis,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2());
                      			
                    }

                    }
                    break;

            }

            // InternalMyCsmParser.g:7347:3: ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            int alt150=2;
            alt150 = dfa150.predict(input);
            switch (alt150) {
                case 1 :
                    // InternalMyCsmParser.g:7348:4: ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure )
                    {
                    // InternalMyCsmParser.g:7354:4: (lv_featureCallArguments_13_0= ruleXClosure )
                    // InternalMyCsmParser.g:7355:5: lv_featureCallArguments_13_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_featureCallArguments_13_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      					}
                      					add(
                      						current,
                      						"featureCallArguments",
                      						lv_featureCallArguments_13_0,
                      						"org.eclipse.xtext.xbase.Xbase.XClosure");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFeatureCall"


    // $ANTLR start "entryRuleFeatureCallID"
    // InternalMyCsmParser.g:7376:1: entryRuleFeatureCallID returns [String current=null] : iv_ruleFeatureCallID= ruleFeatureCallID EOF ;
    public final String entryRuleFeatureCallID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFeatureCallID = null;


        try {
            // InternalMyCsmParser.g:7376:53: (iv_ruleFeatureCallID= ruleFeatureCallID EOF )
            // InternalMyCsmParser.g:7377:2: iv_ruleFeatureCallID= ruleFeatureCallID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureCallIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureCallID=ruleFeatureCallID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureCallID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureCallID"


    // $ANTLR start "ruleFeatureCallID"
    // InternalMyCsmParser.g:7383:1: ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID | kw= Extends | kw= Static | kw= Import | kw= Extension ) ;
    public final AntlrDatatypeRuleToken ruleFeatureCallID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:7389:2: ( (this_ValidID_0= ruleValidID | kw= Extends | kw= Static | kw= Import | kw= Extension ) )
            // InternalMyCsmParser.g:7390:2: (this_ValidID_0= ruleValidID | kw= Extends | kw= Static | kw= Import | kw= Extension )
            {
            // InternalMyCsmParser.g:7390:2: (this_ValidID_0= ruleValidID | kw= Extends | kw= Static | kw= Import | kw= Extension )
            int alt151=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt151=1;
                }
                break;
            case Extends:
                {
                alt151=2;
                }
                break;
            case Static:
                {
                alt151=3;
                }
                break;
            case Import:
                {
                alt151=4;
                }
                break;
            case Extension:
                {
                alt151=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 151, 0, input);

                throw nvae;
            }

            switch (alt151) {
                case 1 :
                    // InternalMyCsmParser.g:7391:3: this_ValidID_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ValidID_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ValidID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:7402:3: kw= Extends
                    {
                    kw=(Token)match(input,Extends,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyCsmParser.g:7408:3: kw= Static
                    {
                    kw=(Token)match(input,Static,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyCsmParser.g:7414:3: kw= Import
                    {
                    kw=(Token)match(input,Import,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getImportKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMyCsmParser.g:7420:3: kw= Extension
                    {
                    kw=(Token)match(input,Extension,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureCallID"


    // $ANTLR start "entryRuleIdOrSuper"
    // InternalMyCsmParser.g:7429:1: entryRuleIdOrSuper returns [String current=null] : iv_ruleIdOrSuper= ruleIdOrSuper EOF ;
    public final String entryRuleIdOrSuper() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdOrSuper = null;


        try {
            // InternalMyCsmParser.g:7429:49: (iv_ruleIdOrSuper= ruleIdOrSuper EOF )
            // InternalMyCsmParser.g:7430:2: iv_ruleIdOrSuper= ruleIdOrSuper EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdOrSuperRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdOrSuper=ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdOrSuper.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdOrSuper"


    // $ANTLR start "ruleIdOrSuper"
    // InternalMyCsmParser.g:7436:1: ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_FeatureCallID_0= ruleFeatureCallID | kw= Super ) ;
    public final AntlrDatatypeRuleToken ruleIdOrSuper() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_FeatureCallID_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:7442:2: ( (this_FeatureCallID_0= ruleFeatureCallID | kw= Super ) )
            // InternalMyCsmParser.g:7443:2: (this_FeatureCallID_0= ruleFeatureCallID | kw= Super )
            {
            // InternalMyCsmParser.g:7443:2: (this_FeatureCallID_0= ruleFeatureCallID | kw= Super )
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==Extension||LA152_0==Extends||LA152_0==Import||LA152_0==Static||LA152_0==RULE_ID) ) {
                alt152=1;
            }
            else if ( (LA152_0==Super) ) {
                alt152=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 152, 0, input);

                throw nvae;
            }
            switch (alt152) {
                case 1 :
                    // InternalMyCsmParser.g:7444:3: this_FeatureCallID_0= ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureCallID_0=ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_FeatureCallID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:7455:3: kw= Super
                    {
                    kw=(Token)match(input,Super,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdOrSuper"


    // $ANTLR start "entryRuleXConstructorCall"
    // InternalMyCsmParser.g:7464:1: entryRuleXConstructorCall returns [EObject current=null] : iv_ruleXConstructorCall= ruleXConstructorCall EOF ;
    public final EObject entryRuleXConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXConstructorCall = null;


        try {
            // InternalMyCsmParser.g:7464:57: (iv_ruleXConstructorCall= ruleXConstructorCall EOF )
            // InternalMyCsmParser.g:7465:2: iv_ruleXConstructorCall= ruleXConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXConstructorCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXConstructorCall=ruleXConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXConstructorCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXConstructorCall"


    // $ANTLR start "ruleXConstructorCall"
    // InternalMyCsmParser.g:7471:1: ruleXConstructorCall returns [EObject current=null] : ( () otherlv_1= New ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )? ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) ;
    public final EObject ruleXConstructorCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_explicitConstructorCall_8_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_typeArguments_4_0 = null;

        EObject lv_typeArguments_6_0 = null;

        EObject lv_arguments_9_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;

        EObject lv_arguments_14_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:7477:2: ( ( () otherlv_1= New ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )? ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) )
            // InternalMyCsmParser.g:7478:2: ( () otherlv_1= New ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )? ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            {
            // InternalMyCsmParser.g:7478:2: ( () otherlv_1= New ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )? ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            // InternalMyCsmParser.g:7479:3: () otherlv_1= New ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )? ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )? ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            {
            // InternalMyCsmParser.g:7479:3: ()
            // InternalMyCsmParser.g:7480:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,New,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
              		
            }
            // InternalMyCsmParser.g:7490:3: ( ( ruleQualifiedName ) )
            // InternalMyCsmParser.g:7491:4: ( ruleQualifiedName )
            {
            // InternalMyCsmParser.g:7491:4: ( ruleQualifiedName )
            // InternalMyCsmParser.g:7492:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXConstructorCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_97);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyCsmParser.g:7506:3: ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )?
            int alt154=2;
            alt154 = dfa154.predict(input);
            switch (alt154) {
                case 1 :
                    // InternalMyCsmParser.g:7507:4: ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign
                    {
                    // InternalMyCsmParser.g:7507:4: ( ( LessThanSign )=>otherlv_3= LessThanSign )
                    // InternalMyCsmParser.g:7508:5: ( LessThanSign )=>otherlv_3= LessThanSign
                    {
                    otherlv_3=(Token)match(input,LessThanSign,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0());
                      				
                    }

                    }

                    // InternalMyCsmParser.g:7514:4: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    // InternalMyCsmParser.g:7515:5: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalMyCsmParser.g:7515:5: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    // InternalMyCsmParser.g:7516:6: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_65);
                    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      						}
                      						add(
                      							current,
                      							"typeArguments",
                      							lv_typeArguments_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:7533:4: (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )*
                    loop153:
                    do {
                        int alt153=2;
                        int LA153_0 = input.LA(1);

                        if ( (LA153_0==Comma) ) {
                            alt153=1;
                        }


                        switch (alt153) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:7534:5: otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_5=(Token)match(input,Comma,FOLLOW_64); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:7538:5: ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalMyCsmParser.g:7539:6: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalMyCsmParser.g:7539:6: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    // InternalMyCsmParser.g:7540:7: lv_typeArguments_6_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_65);
                    	    lv_typeArguments_6_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"typeArguments",
                    	      								lv_typeArguments_6_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop153;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,GreaterThanSign,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3());
                      			
                    }

                    }
                    break;

            }

            // InternalMyCsmParser.g:7563:3: ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )?
            int alt157=2;
            alt157 = dfa157.predict(input);
            switch (alt157) {
                case 1 :
                    // InternalMyCsmParser.g:7564:4: ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis
                    {
                    // InternalMyCsmParser.g:7564:4: ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) )
                    // InternalMyCsmParser.g:7565:5: ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis )
                    {
                    // InternalMyCsmParser.g:7569:5: (lv_explicitConstructorCall_8_0= LeftParenthesis )
                    // InternalMyCsmParser.g:7570:6: lv_explicitConstructorCall_8_0= LeftParenthesis
                    {
                    lv_explicitConstructorCall_8_0=(Token)match(input,LeftParenthesis,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitConstructorCall_8_0, grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXConstructorCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitConstructorCall", lv_explicitConstructorCall_8_0 != null, "(");
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:7582:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?
                    int alt156=3;
                    alt156 = dfa156.predict(input);
                    switch (alt156) {
                        case 1 :
                            // InternalMyCsmParser.g:7583:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            {
                            // InternalMyCsmParser.g:7583:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            // InternalMyCsmParser.g:7584:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure )
                            {
                            // InternalMyCsmParser.g:7609:6: (lv_arguments_9_0= ruleXShortClosure )
                            // InternalMyCsmParser.g:7610:7: lv_arguments_9_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_68);
                            lv_arguments_9_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              							}
                              							add(
                              								current,
                              								"arguments",
                              								lv_arguments_9_0,
                              								"org.eclipse.xtext.xbase.Xbase.XShortClosure");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMyCsmParser.g:7628:5: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            {
                            // InternalMyCsmParser.g:7628:5: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            // InternalMyCsmParser.g:7629:6: ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            {
                            // InternalMyCsmParser.g:7629:6: ( (lv_arguments_10_0= ruleXExpression ) )
                            // InternalMyCsmParser.g:7630:7: (lv_arguments_10_0= ruleXExpression )
                            {
                            // InternalMyCsmParser.g:7630:7: (lv_arguments_10_0= ruleXExpression )
                            // InternalMyCsmParser.g:7631:8: lv_arguments_10_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_17);
                            lv_arguments_10_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              								}
                              								add(
                              									current,
                              									"arguments",
                              									lv_arguments_10_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalMyCsmParser.g:7648:6: (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            loop155:
                            do {
                                int alt155=2;
                                int LA155_0 = input.LA(1);

                                if ( (LA155_0==Comma) ) {
                                    alt155=1;
                                }


                                switch (alt155) {
                            	case 1 :
                            	    // InternalMyCsmParser.g:7649:7: otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) )
                            	    {
                            	    otherlv_11=(Token)match(input,Comma,FOLLOW_43); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_11, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0());
                            	      						
                            	    }
                            	    // InternalMyCsmParser.g:7653:7: ( (lv_arguments_12_0= ruleXExpression ) )
                            	    // InternalMyCsmParser.g:7654:8: (lv_arguments_12_0= ruleXExpression )
                            	    {
                            	    // InternalMyCsmParser.g:7654:8: (lv_arguments_12_0= ruleXExpression )
                            	    // InternalMyCsmParser.g:7655:9: lv_arguments_12_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_17);
                            	    lv_arguments_12_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arguments",
                            	      										lv_arguments_12_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop155;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,RightParenthesis,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
                      			
                    }

                    }
                    break;

            }

            // InternalMyCsmParser.g:7680:3: ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            int alt158=2;
            alt158 = dfa158.predict(input);
            switch (alt158) {
                case 1 :
                    // InternalMyCsmParser.g:7681:4: ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure )
                    {
                    // InternalMyCsmParser.g:7687:4: (lv_arguments_14_0= ruleXClosure )
                    // InternalMyCsmParser.g:7688:5: lv_arguments_14_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arguments_14_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      					}
                      					add(
                      						current,
                      						"arguments",
                      						lv_arguments_14_0,
                      						"org.eclipse.xtext.xbase.Xbase.XClosure");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXConstructorCall"


    // $ANTLR start "entryRuleXBooleanLiteral"
    // InternalMyCsmParser.g:7709:1: entryRuleXBooleanLiteral returns [EObject current=null] : iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF ;
    public final EObject entryRuleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBooleanLiteral = null;


        try {
            // InternalMyCsmParser.g:7709:56: (iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF )
            // InternalMyCsmParser.g:7710:2: iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBooleanLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBooleanLiteral=ruleXBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBooleanLiteral"


    // $ANTLR start "ruleXBooleanLiteral"
    // InternalMyCsmParser.g:7716:1: ruleXBooleanLiteral returns [EObject current=null] : ( () (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) ) ) ;
    public final EObject ruleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isTrue_2_0=null;


        	enterRule();

        try {
            // InternalMyCsmParser.g:7722:2: ( ( () (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) ) ) )
            // InternalMyCsmParser.g:7723:2: ( () (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) ) )
            {
            // InternalMyCsmParser.g:7723:2: ( () (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) ) )
            // InternalMyCsmParser.g:7724:3: () (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) )
            {
            // InternalMyCsmParser.g:7724:3: ()
            // InternalMyCsmParser.g:7725:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalMyCsmParser.g:7731:3: (otherlv_1= False | ( (lv_isTrue_2_0= True ) ) )
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==False) ) {
                alt159=1;
            }
            else if ( (LA159_0==True) ) {
                alt159=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 159, 0, input);

                throw nvae;
            }
            switch (alt159) {
                case 1 :
                    // InternalMyCsmParser.g:7732:4: otherlv_1= False
                    {
                    otherlv_1=(Token)match(input,False,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:7737:4: ( (lv_isTrue_2_0= True ) )
                    {
                    // InternalMyCsmParser.g:7737:4: ( (lv_isTrue_2_0= True ) )
                    // InternalMyCsmParser.g:7738:5: (lv_isTrue_2_0= True )
                    {
                    // InternalMyCsmParser.g:7738:5: (lv_isTrue_2_0= True )
                    // InternalMyCsmParser.g:7739:6: lv_isTrue_2_0= True
                    {
                    lv_isTrue_2_0=(Token)match(input,True,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXBooleanLiteralRule());
                      						}
                      						setWithLastConsumed(current, "isTrue", lv_isTrue_2_0 != null, "true");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBooleanLiteral"


    // $ANTLR start "entryRuleXNullLiteral"
    // InternalMyCsmParser.g:7756:1: entryRuleXNullLiteral returns [EObject current=null] : iv_ruleXNullLiteral= ruleXNullLiteral EOF ;
    public final EObject entryRuleXNullLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNullLiteral = null;


        try {
            // InternalMyCsmParser.g:7756:53: (iv_ruleXNullLiteral= ruleXNullLiteral EOF )
            // InternalMyCsmParser.g:7757:2: iv_ruleXNullLiteral= ruleXNullLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNullLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNullLiteral=ruleXNullLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNullLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNullLiteral"


    // $ANTLR start "ruleXNullLiteral"
    // InternalMyCsmParser.g:7763:1: ruleXNullLiteral returns [EObject current=null] : ( () otherlv_1= Null ) ;
    public final EObject ruleXNullLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalMyCsmParser.g:7769:2: ( ( () otherlv_1= Null ) )
            // InternalMyCsmParser.g:7770:2: ( () otherlv_1= Null )
            {
            // InternalMyCsmParser.g:7770:2: ( () otherlv_1= Null )
            // InternalMyCsmParser.g:7771:3: () otherlv_1= Null
            {
            // InternalMyCsmParser.g:7771:3: ()
            // InternalMyCsmParser.g:7772:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Null,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNullLiteral"


    // $ANTLR start "entryRuleXNumberLiteral"
    // InternalMyCsmParser.g:7786:1: entryRuleXNumberLiteral returns [EObject current=null] : iv_ruleXNumberLiteral= ruleXNumberLiteral EOF ;
    public final EObject entryRuleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNumberLiteral = null;


        try {
            // InternalMyCsmParser.g:7786:55: (iv_ruleXNumberLiteral= ruleXNumberLiteral EOF )
            // InternalMyCsmParser.g:7787:2: iv_ruleXNumberLiteral= ruleXNumberLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNumberLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNumberLiteral=ruleXNumberLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNumberLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNumberLiteral"


    // $ANTLR start "ruleXNumberLiteral"
    // InternalMyCsmParser.g:7793:1: ruleXNumberLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= ruleNumber ) ) ) ;
    public final EObject ruleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:7799:2: ( ( () ( (lv_value_1_0= ruleNumber ) ) ) )
            // InternalMyCsmParser.g:7800:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            {
            // InternalMyCsmParser.g:7800:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            // InternalMyCsmParser.g:7801:3: () ( (lv_value_1_0= ruleNumber ) )
            {
            // InternalMyCsmParser.g:7801:3: ()
            // InternalMyCsmParser.g:7802:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalMyCsmParser.g:7808:3: ( (lv_value_1_0= ruleNumber ) )
            // InternalMyCsmParser.g:7809:4: (lv_value_1_0= ruleNumber )
            {
            // InternalMyCsmParser.g:7809:4: (lv_value_1_0= ruleNumber )
            // InternalMyCsmParser.g:7810:5: lv_value_1_0= ruleNumber
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_1_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.xtext.xbase.Xbase.Number");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNumberLiteral"


    // $ANTLR start "entryRuleXStringLiteral"
    // InternalMyCsmParser.g:7831:1: entryRuleXStringLiteral returns [EObject current=null] : iv_ruleXStringLiteral= ruleXStringLiteral EOF ;
    public final EObject entryRuleXStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXStringLiteral = null;


        try {
            // InternalMyCsmParser.g:7831:55: (iv_ruleXStringLiteral= ruleXStringLiteral EOF )
            // InternalMyCsmParser.g:7832:2: iv_ruleXStringLiteral= ruleXStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXStringLiteral=ruleXStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXStringLiteral"


    // $ANTLR start "ruleXStringLiteral"
    // InternalMyCsmParser.g:7838:1: ruleXStringLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleXStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;


        	enterRule();

        try {
            // InternalMyCsmParser.g:7844:2: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) )
            // InternalMyCsmParser.g:7845:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            {
            // InternalMyCsmParser.g:7845:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            // InternalMyCsmParser.g:7846:3: () ( (lv_value_1_0= RULE_STRING ) )
            {
            // InternalMyCsmParser.g:7846:3: ()
            // InternalMyCsmParser.g:7847:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalMyCsmParser.g:7853:3: ( (lv_value_1_0= RULE_STRING ) )
            // InternalMyCsmParser.g:7854:4: (lv_value_1_0= RULE_STRING )
            {
            // InternalMyCsmParser.g:7854:4: (lv_value_1_0= RULE_STRING )
            // InternalMyCsmParser.g:7855:5: lv_value_1_0= RULE_STRING
            {
            lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXStringLiteralRule());
              					}
              					setWithLastConsumed(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXStringLiteral"


    // $ANTLR start "entryRuleXTypeLiteral"
    // InternalMyCsmParser.g:7875:1: entryRuleXTypeLiteral returns [EObject current=null] : iv_ruleXTypeLiteral= ruleXTypeLiteral EOF ;
    public final EObject entryRuleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTypeLiteral = null;


        try {
            // InternalMyCsmParser.g:7875:53: (iv_ruleXTypeLiteral= ruleXTypeLiteral EOF )
            // InternalMyCsmParser.g:7876:2: iv_ruleXTypeLiteral= ruleXTypeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTypeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTypeLiteral=ruleXTypeLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTypeLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTypeLiteral"


    // $ANTLR start "ruleXTypeLiteral"
    // InternalMyCsmParser.g:7882:1: ruleXTypeLiteral returns [EObject current=null] : ( () otherlv_1= Typeof otherlv_2= LeftParenthesis ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= RightParenthesis ) ;
    public final EObject ruleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_arrayDimensions_4_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:7888:2: ( ( () otherlv_1= Typeof otherlv_2= LeftParenthesis ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= RightParenthesis ) )
            // InternalMyCsmParser.g:7889:2: ( () otherlv_1= Typeof otherlv_2= LeftParenthesis ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= RightParenthesis )
            {
            // InternalMyCsmParser.g:7889:2: ( () otherlv_1= Typeof otherlv_2= LeftParenthesis ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= RightParenthesis )
            // InternalMyCsmParser.g:7890:3: () otherlv_1= Typeof otherlv_2= LeftParenthesis ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= RightParenthesis
            {
            // InternalMyCsmParser.g:7890:3: ()
            // InternalMyCsmParser.g:7891:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Typeof,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalMyCsmParser.g:7905:3: ( ( ruleQualifiedName ) )
            // InternalMyCsmParser.g:7906:4: ( ruleQualifiedName )
            {
            // InternalMyCsmParser.g:7906:4: ( ruleQualifiedName )
            // InternalMyCsmParser.g:7907:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXTypeLiteralRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0());
              				
            }
            pushFollow(FOLLOW_98);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyCsmParser.g:7921:3: ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )*
            loop160:
            do {
                int alt160=2;
                int LA160_0 = input.LA(1);

                if ( (LA160_0==LeftSquareBracket) ) {
                    alt160=1;
                }


                switch (alt160) {
            	case 1 :
            	    // InternalMyCsmParser.g:7922:4: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    {
            	    // InternalMyCsmParser.g:7922:4: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    // InternalMyCsmParser.g:7923:5: lv_arrayDimensions_4_0= ruleArrayBrackets
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_arrayDimensions_4_0=ruleArrayBrackets();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXTypeLiteralRule());
            	      					}
            	      					add(
            	      						current,
            	      						"arrayDimensions",
            	      						lv_arrayDimensions_4_0,
            	      						"org.eclipse.xtext.xbase.Xtype.ArrayBrackets");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop160;
                }
            } while (true);

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTypeLiteral"


    // $ANTLR start "entryRuleXThrowExpression"
    // InternalMyCsmParser.g:7948:1: entryRuleXThrowExpression returns [EObject current=null] : iv_ruleXThrowExpression= ruleXThrowExpression EOF ;
    public final EObject entryRuleXThrowExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXThrowExpression = null;


        try {
            // InternalMyCsmParser.g:7948:57: (iv_ruleXThrowExpression= ruleXThrowExpression EOF )
            // InternalMyCsmParser.g:7949:2: iv_ruleXThrowExpression= ruleXThrowExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXThrowExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXThrowExpression=ruleXThrowExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXThrowExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXThrowExpression"


    // $ANTLR start "ruleXThrowExpression"
    // InternalMyCsmParser.g:7955:1: ruleXThrowExpression returns [EObject current=null] : ( () otherlv_1= Throw ( (lv_expression_2_0= ruleXExpression ) ) ) ;
    public final EObject ruleXThrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:7961:2: ( ( () otherlv_1= Throw ( (lv_expression_2_0= ruleXExpression ) ) ) )
            // InternalMyCsmParser.g:7962:2: ( () otherlv_1= Throw ( (lv_expression_2_0= ruleXExpression ) ) )
            {
            // InternalMyCsmParser.g:7962:2: ( () otherlv_1= Throw ( (lv_expression_2_0= ruleXExpression ) ) )
            // InternalMyCsmParser.g:7963:3: () otherlv_1= Throw ( (lv_expression_2_0= ruleXExpression ) )
            {
            // InternalMyCsmParser.g:7963:3: ()
            // InternalMyCsmParser.g:7964:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Throw,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
              		
            }
            // InternalMyCsmParser.g:7974:3: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalMyCsmParser.g:7975:4: (lv_expression_2_0= ruleXExpression )
            {
            // InternalMyCsmParser.g:7975:4: (lv_expression_2_0= ruleXExpression )
            // InternalMyCsmParser.g:7976:5: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXThrowExpression"


    // $ANTLR start "entryRuleXReturnExpression"
    // InternalMyCsmParser.g:7997:1: entryRuleXReturnExpression returns [EObject current=null] : iv_ruleXReturnExpression= ruleXReturnExpression EOF ;
    public final EObject entryRuleXReturnExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXReturnExpression = null;


        try {
            // InternalMyCsmParser.g:7997:58: (iv_ruleXReturnExpression= ruleXReturnExpression EOF )
            // InternalMyCsmParser.g:7998:2: iv_ruleXReturnExpression= ruleXReturnExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXReturnExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXReturnExpression=ruleXReturnExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXReturnExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXReturnExpression"


    // $ANTLR start "ruleXReturnExpression"
    // InternalMyCsmParser.g:8004:1: ruleXReturnExpression returns [EObject current=null] : ( () otherlv_1= Return ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) ;
    public final EObject ruleXReturnExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:8010:2: ( ( () otherlv_1= Return ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) )
            // InternalMyCsmParser.g:8011:2: ( () otherlv_1= Return ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            {
            // InternalMyCsmParser.g:8011:2: ( () otherlv_1= Return ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            // InternalMyCsmParser.g:8012:3: () otherlv_1= Return ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            {
            // InternalMyCsmParser.g:8012:3: ()
            // InternalMyCsmParser.g:8013:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Return,FOLLOW_80); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
              		
            }
            // InternalMyCsmParser.g:8023:3: ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            int alt161=2;
            alt161 = dfa161.predict(input);
            switch (alt161) {
                case 1 :
                    // InternalMyCsmParser.g:8024:4: ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression )
                    {
                    // InternalMyCsmParser.g:8025:4: (lv_expression_2_0= ruleXExpression )
                    // InternalMyCsmParser.g:8026:5: lv_expression_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_2_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXReturnExpression"


    // $ANTLR start "entryRuleXTryCatchFinallyExpression"
    // InternalMyCsmParser.g:8047:1: entryRuleXTryCatchFinallyExpression returns [EObject current=null] : iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF ;
    public final EObject entryRuleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTryCatchFinallyExpression = null;


        try {
            // InternalMyCsmParser.g:8047:67: (iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF )
            // InternalMyCsmParser.g:8048:2: iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTryCatchFinallyExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTryCatchFinallyExpression"


    // $ANTLR start "ruleXTryCatchFinallyExpression"
    // InternalMyCsmParser.g:8054:1: ruleXTryCatchFinallyExpression returns [EObject current=null] : ( () otherlv_1= Try ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) ;
    public final EObject ruleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_expression_2_0 = null;

        EObject lv_catchClauses_3_0 = null;

        EObject lv_finallyExpression_5_0 = null;

        EObject lv_finallyExpression_7_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:8060:2: ( ( () otherlv_1= Try ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) )
            // InternalMyCsmParser.g:8061:2: ( () otherlv_1= Try ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            {
            // InternalMyCsmParser.g:8061:2: ( () otherlv_1= Try ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            // InternalMyCsmParser.g:8062:3: () otherlv_1= Try ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            {
            // InternalMyCsmParser.g:8062:3: ()
            // InternalMyCsmParser.g:8063:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Try,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
              		
            }
            // InternalMyCsmParser.g:8073:3: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalMyCsmParser.g:8074:4: (lv_expression_2_0= ruleXExpression )
            {
            // InternalMyCsmParser.g:8074:4: (lv_expression_2_0= ruleXExpression )
            // InternalMyCsmParser.g:8075:5: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_99);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyCsmParser.g:8092:3: ( ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==Catch) ) {
                alt164=1;
            }
            else if ( (LA164_0==Finally) ) {
                alt164=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 164, 0, input);

                throw nvae;
            }
            switch (alt164) {
                case 1 :
                    // InternalMyCsmParser.g:8093:4: ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    {
                    // InternalMyCsmParser.g:8093:4: ( ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    // InternalMyCsmParser.g:8094:5: ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    {
                    // InternalMyCsmParser.g:8094:5: ( ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+
                    int cnt162=0;
                    loop162:
                    do {
                        int alt162=2;
                        int LA162_0 = input.LA(1);

                        if ( (LA162_0==Catch) ) {
                            int LA162_2 = input.LA(2);

                            if ( (synpred38_InternalMyCsmParser()) ) {
                                alt162=1;
                            }


                        }


                        switch (alt162) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:8095:6: ( Catch )=> (lv_catchClauses_3_0= ruleXCatchClause )
                    	    {
                    	    // InternalMyCsmParser.g:8096:6: (lv_catchClauses_3_0= ruleXCatchClause )
                    	    // InternalMyCsmParser.g:8097:7: lv_catchClauses_3_0= ruleXCatchClause
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_100);
                    	    lv_catchClauses_3_0=ruleXCatchClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"catchClauses",
                    	      								lv_catchClauses_3_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XCatchClause");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt162 >= 1 ) break loop162;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(162, input);
                                throw eee;
                        }
                        cnt162++;
                    } while (true);

                    // InternalMyCsmParser.g:8114:5: ( ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    int alt163=2;
                    int LA163_0 = input.LA(1);

                    if ( (LA163_0==Finally) ) {
                        int LA163_1 = input.LA(2);

                        if ( (synpred39_InternalMyCsmParser()) ) {
                            alt163=1;
                        }
                    }
                    switch (alt163) {
                        case 1 :
                            // InternalMyCsmParser.g:8115:6: ( ( Finally )=>otherlv_4= Finally ) ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            {
                            // InternalMyCsmParser.g:8115:6: ( ( Finally )=>otherlv_4= Finally )
                            // InternalMyCsmParser.g:8116:7: ( Finally )=>otherlv_4= Finally
                            {
                            otherlv_4=(Token)match(input,Finally,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
                              						
                            }

                            }

                            // InternalMyCsmParser.g:8122:6: ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            // InternalMyCsmParser.g:8123:7: (lv_finallyExpression_5_0= ruleXExpression )
                            {
                            // InternalMyCsmParser.g:8123:7: (lv_finallyExpression_5_0= ruleXExpression )
                            // InternalMyCsmParser.g:8124:8: lv_finallyExpression_5_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_finallyExpression_5_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                              								}
                              								set(
                              									current,
                              									"finallyExpression",
                              									lv_finallyExpression_5_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:8144:4: (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    {
                    // InternalMyCsmParser.g:8144:4: (otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    // InternalMyCsmParser.g:8145:5: otherlv_6= Finally ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,Finally,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
                      				
                    }
                    // InternalMyCsmParser.g:8149:5: ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    // InternalMyCsmParser.g:8150:6: (lv_finallyExpression_7_0= ruleXExpression )
                    {
                    // InternalMyCsmParser.g:8150:6: (lv_finallyExpression_7_0= ruleXExpression )
                    // InternalMyCsmParser.g:8151:7: lv_finallyExpression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_finallyExpression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                      							}
                      							set(
                      								current,
                      								"finallyExpression",
                      								lv_finallyExpression_7_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTryCatchFinallyExpression"


    // $ANTLR start "entryRuleXSynchronizedExpression"
    // InternalMyCsmParser.g:8174:1: entryRuleXSynchronizedExpression returns [EObject current=null] : iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF ;
    public final EObject entryRuleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSynchronizedExpression = null;


        try {
            // InternalMyCsmParser.g:8174:64: (iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF )
            // InternalMyCsmParser.g:8175:2: iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSynchronizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSynchronizedExpression=ruleXSynchronizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSynchronizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSynchronizedExpression"


    // $ANTLR start "ruleXSynchronizedExpression"
    // InternalMyCsmParser.g:8181:1: ruleXSynchronizedExpression returns [EObject current=null] : ( ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_param_3_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:8187:2: ( ( ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // InternalMyCsmParser.g:8188:2: ( ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // InternalMyCsmParser.g:8188:2: ( ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_expression_5_0= ruleXExpression ) ) )
            // InternalMyCsmParser.g:8189:3: ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= RightParenthesis ( (lv_expression_5_0= ruleXExpression ) )
            {
            // InternalMyCsmParser.g:8189:3: ( ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis ) )
            // InternalMyCsmParser.g:8190:4: ( ( () Synchronized LeftParenthesis ) )=> ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis )
            {
            // InternalMyCsmParser.g:8197:4: ( () otherlv_1= Synchronized otherlv_2= LeftParenthesis )
            // InternalMyCsmParser.g:8198:5: () otherlv_1= Synchronized otherlv_2= LeftParenthesis
            {
            // InternalMyCsmParser.g:8198:5: ()
            // InternalMyCsmParser.g:8199:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXSynchronizedExpressionAccess().getXSynchronizedExpressionAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,Synchronized,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1());
              				
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getXSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2());
              				
            }

            }


            }

            // InternalMyCsmParser.g:8215:3: ( (lv_param_3_0= ruleXExpression ) )
            // InternalMyCsmParser.g:8216:4: (lv_param_3_0= ruleXExpression )
            {
            // InternalMyCsmParser.g:8216:4: (lv_param_3_0= ruleXExpression )
            // InternalMyCsmParser.g:8217:5: lv_param_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getParamXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_68);
            lv_param_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              					}
              					set(
              						current,
              						"param",
              						lv_param_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXSynchronizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalMyCsmParser.g:8238:3: ( (lv_expression_5_0= ruleXExpression ) )
            // InternalMyCsmParser.g:8239:4: (lv_expression_5_0= ruleXExpression )
            {
            // InternalMyCsmParser.g:8239:4: (lv_expression_5_0= ruleXExpression )
            // InternalMyCsmParser.g:8240:5: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getExpressionXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSynchronizedExpression"


    // $ANTLR start "entryRuleXCatchClause"
    // InternalMyCsmParser.g:8261:1: entryRuleXCatchClause returns [EObject current=null] : iv_ruleXCatchClause= ruleXCatchClause EOF ;
    public final EObject entryRuleXCatchClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCatchClause = null;


        try {
            // InternalMyCsmParser.g:8261:53: (iv_ruleXCatchClause= ruleXCatchClause EOF )
            // InternalMyCsmParser.g:8262:2: iv_ruleXCatchClause= ruleXCatchClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCatchClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCatchClause=ruleXCatchClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCatchClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCatchClause"


    // $ANTLR start "ruleXCatchClause"
    // InternalMyCsmParser.g:8268:1: ruleXCatchClause returns [EObject current=null] : ( ( ( Catch )=>otherlv_0= Catch ) otherlv_1= LeftParenthesis ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= RightParenthesis ( (lv_expression_4_0= ruleXExpression ) ) ) ;
    public final EObject ruleXCatchClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_declaredParam_2_0 = null;

        EObject lv_expression_4_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:8274:2: ( ( ( ( Catch )=>otherlv_0= Catch ) otherlv_1= LeftParenthesis ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= RightParenthesis ( (lv_expression_4_0= ruleXExpression ) ) ) )
            // InternalMyCsmParser.g:8275:2: ( ( ( Catch )=>otherlv_0= Catch ) otherlv_1= LeftParenthesis ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= RightParenthesis ( (lv_expression_4_0= ruleXExpression ) ) )
            {
            // InternalMyCsmParser.g:8275:2: ( ( ( Catch )=>otherlv_0= Catch ) otherlv_1= LeftParenthesis ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= RightParenthesis ( (lv_expression_4_0= ruleXExpression ) ) )
            // InternalMyCsmParser.g:8276:3: ( ( Catch )=>otherlv_0= Catch ) otherlv_1= LeftParenthesis ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= RightParenthesis ( (lv_expression_4_0= ruleXExpression ) )
            {
            // InternalMyCsmParser.g:8276:3: ( ( Catch )=>otherlv_0= Catch )
            // InternalMyCsmParser.g:8277:4: ( Catch )=>otherlv_0= Catch
            {
            otherlv_0=(Token)match(input,Catch,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
              			
            }

            }

            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalMyCsmParser.g:8287:3: ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) )
            // InternalMyCsmParser.g:8288:4: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            {
            // InternalMyCsmParser.g:8288:4: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            // InternalMyCsmParser.g:8289:5: lv_declaredParam_2_0= ruleFullJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_68);
            lv_declaredParam_2_0=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              					}
              					set(
              						current,
              						"declaredParam",
              						lv_declaredParam_2_0,
              						"org.eclipse.xtext.xbase.Xbase.FullJvmFormalParameter");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
              		
            }
            // InternalMyCsmParser.g:8310:3: ( (lv_expression_4_0= ruleXExpression ) )
            // InternalMyCsmParser.g:8311:4: (lv_expression_4_0= ruleXExpression )
            {
            // InternalMyCsmParser.g:8311:4: (lv_expression_4_0= ruleXExpression )
            // InternalMyCsmParser.g:8312:5: lv_expression_4_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_4_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_4_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCatchClause"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalMyCsmParser.g:8333:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // InternalMyCsmParser.g:8333:53: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // InternalMyCsmParser.g:8334:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalMyCsmParser.g:8340:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )* ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;

        AntlrDatatypeRuleToken this_ValidID_2 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:8346:2: ( (this_ValidID_0= ruleValidID ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )* ) )
            // InternalMyCsmParser.g:8347:2: (this_ValidID_0= ruleValidID ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )* )
            {
            // InternalMyCsmParser.g:8347:2: (this_ValidID_0= ruleValidID ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )* )
            // InternalMyCsmParser.g:8348:3: this_ValidID_0= ruleValidID ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_101);
            this_ValidID_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ValidID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyCsmParser.g:8358:3: ( ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID )*
            loop165:
            do {
                int alt165=2;
                int LA165_0 = input.LA(1);

                if ( (LA165_0==FullStop) ) {
                    int LA165_2 = input.LA(2);

                    if ( (LA165_2==RULE_ID) ) {
                        int LA165_3 = input.LA(3);

                        if ( (synpred42_InternalMyCsmParser()) ) {
                            alt165=1;
                        }


                    }


                }


                switch (alt165) {
            	case 1 :
            	    // InternalMyCsmParser.g:8359:4: ( ( FullStop )=>kw= FullStop ) this_ValidID_2= ruleValidID
            	    {
            	    // InternalMyCsmParser.g:8359:4: ( ( FullStop )=>kw= FullStop )
            	    // InternalMyCsmParser.g:8360:5: ( FullStop )=>kw= FullStop
            	    {
            	    kw=(Token)match(input,FullStop,FOLLOW_93); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					current.merge(kw);
            	      					newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_101);
            	    this_ValidID_2=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ValidID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop165;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleNumber"
    // InternalMyCsmParser.g:8382:1: entryRuleNumber returns [String current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final String entryRuleNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumber = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalMyCsmParser.g:8384:2: (iv_ruleNumber= ruleNumber EOF )
            // InternalMyCsmParser.g:8385:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalMyCsmParser.g:8394:1: ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) ;
    public final AntlrDatatypeRuleToken ruleNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_HEX_0=null;
        Token this_INT_1=null;
        Token this_DECIMAL_2=null;
        Token kw=null;
        Token this_INT_4=null;
        Token this_DECIMAL_5=null;


        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalMyCsmParser.g:8401:2: ( (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) )
            // InternalMyCsmParser.g:8402:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            {
            // InternalMyCsmParser.g:8402:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==RULE_HEX) ) {
                alt169=1;
            }
            else if ( ((LA169_0>=RULE_INT && LA169_0<=RULE_DECIMAL)) ) {
                alt169=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 169, 0, input);

                throw nvae;
            }
            switch (alt169) {
                case 1 :
                    // InternalMyCsmParser.g:8403:3: this_HEX_0= RULE_HEX
                    {
                    this_HEX_0=(Token)match(input,RULE_HEX,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_HEX_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:8411:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    {
                    // InternalMyCsmParser.g:8411:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    // InternalMyCsmParser.g:8412:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    {
                    // InternalMyCsmParser.g:8412:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL )
                    int alt166=2;
                    int LA166_0 = input.LA(1);

                    if ( (LA166_0==RULE_INT) ) {
                        alt166=1;
                    }
                    else if ( (LA166_0==RULE_DECIMAL) ) {
                        alt166=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 166, 0, input);

                        throw nvae;
                    }
                    switch (alt166) {
                        case 1 :
                            // InternalMyCsmParser.g:8413:5: this_INT_1= RULE_INT
                            {
                            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_101); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_1);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalMyCsmParser.g:8421:5: this_DECIMAL_2= RULE_DECIMAL
                            {
                            this_DECIMAL_2=(Token)match(input,RULE_DECIMAL,FOLLOW_101); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DECIMAL_2);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalMyCsmParser.g:8429:4: (kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    int alt168=2;
                    int LA168_0 = input.LA(1);

                    if ( (LA168_0==FullStop) ) {
                        int LA168_1 = input.LA(2);

                        if ( ((LA168_1>=RULE_INT && LA168_1<=RULE_DECIMAL)) ) {
                            alt168=1;
                        }
                    }
                    switch (alt168) {
                        case 1 :
                            // InternalMyCsmParser.g:8430:5: kw= FullStop (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            {
                            kw=(Token)match(input,FullStop,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0());
                              				
                            }
                            // InternalMyCsmParser.g:8435:5: (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            int alt167=2;
                            int LA167_0 = input.LA(1);

                            if ( (LA167_0==RULE_INT) ) {
                                alt167=1;
                            }
                            else if ( (LA167_0==RULE_DECIMAL) ) {
                                alt167=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 167, 0, input);

                                throw nvae;
                            }
                            switch (alt167) {
                                case 1 :
                                    // InternalMyCsmParser.g:8436:6: this_INT_4= RULE_INT
                                    {
                                    this_INT_4=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_INT_4);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0());
                                      					
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalMyCsmParser.g:8444:6: this_DECIMAL_5= RULE_DECIMAL
                                    {
                                    this_DECIMAL_5=(Token)match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_DECIMAL_5);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1());
                                      					
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleJvmTypeReference"
    // InternalMyCsmParser.g:8461:1: entryRuleJvmTypeReference returns [EObject current=null] : iv_ruleJvmTypeReference= ruleJvmTypeReference EOF ;
    public final EObject entryRuleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmTypeReference = null;


        try {
            // InternalMyCsmParser.g:8461:57: (iv_ruleJvmTypeReference= ruleJvmTypeReference EOF )
            // InternalMyCsmParser.g:8462:2: iv_ruleJvmTypeReference= ruleJvmTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmTypeReference=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmTypeReference"


    // $ANTLR start "ruleJvmTypeReference"
    // InternalMyCsmParser.g:8468:1: ruleJvmTypeReference returns [EObject current=null] : ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) ;
    public final EObject ruleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmParameterizedTypeReference_0 = null;

        EObject this_XFunctionTypeRef_3 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:8474:2: ( ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) )
            // InternalMyCsmParser.g:8475:2: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            {
            // InternalMyCsmParser.g:8475:2: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==RULE_ID) ) {
                alt171=1;
            }
            else if ( (LA171_0==EqualsSignGreaterThanSign||LA171_0==LeftParenthesis) ) {
                alt171=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 171, 0, input);

                throw nvae;
            }
            switch (alt171) {
                case 1 :
                    // InternalMyCsmParser.g:8476:3: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    {
                    // InternalMyCsmParser.g:8476:3: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    // InternalMyCsmParser.g:8477:4: this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_96);
                    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_JvmParameterizedTypeReference_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalMyCsmParser.g:8485:4: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    loop170:
                    do {
                        int alt170=2;
                        int LA170_0 = input.LA(1);

                        if ( (LA170_0==LeftSquareBracket) ) {
                            int LA170_2 = input.LA(2);

                            if ( (LA170_2==RightSquareBracket) ) {
                                int LA170_3 = input.LA(3);

                                if ( (synpred43_InternalMyCsmParser()) ) {
                                    alt170=1;
                                }


                            }


                        }


                        switch (alt170) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:8486:5: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
                    	    {
                    	    // InternalMyCsmParser.g:8492:5: ( () ruleArrayBrackets )
                    	    // InternalMyCsmParser.g:8493:6: () ruleArrayBrackets
                    	    {
                    	    // InternalMyCsmParser.g:8493:6: ()
                    	    // InternalMyCsmParser.g:8494:7: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							current = forceCreateModelElementAndSet(
                    	      								grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
                    	      								current);
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_96);
                    	    ruleArrayBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop170;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:8511:3: this_XFunctionTypeRef_3= ruleXFunctionTypeRef
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XFunctionTypeRef_3=ruleXFunctionTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XFunctionTypeRef_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmTypeReference"


    // $ANTLR start "entryRuleArrayBrackets"
    // InternalMyCsmParser.g:8523:1: entryRuleArrayBrackets returns [String current=null] : iv_ruleArrayBrackets= ruleArrayBrackets EOF ;
    public final String entryRuleArrayBrackets() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleArrayBrackets = null;


        try {
            // InternalMyCsmParser.g:8523:53: (iv_ruleArrayBrackets= ruleArrayBrackets EOF )
            // InternalMyCsmParser.g:8524:2: iv_ruleArrayBrackets= ruleArrayBrackets EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayBracketsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayBrackets=ruleArrayBrackets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayBrackets.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayBrackets"


    // $ANTLR start "ruleArrayBrackets"
    // InternalMyCsmParser.g:8530:1: ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= LeftSquareBracket kw= RightSquareBracket ) ;
    public final AntlrDatatypeRuleToken ruleArrayBrackets() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyCsmParser.g:8536:2: ( (kw= LeftSquareBracket kw= RightSquareBracket ) )
            // InternalMyCsmParser.g:8537:2: (kw= LeftSquareBracket kw= RightSquareBracket )
            {
            // InternalMyCsmParser.g:8537:2: (kw= LeftSquareBracket kw= RightSquareBracket )
            // InternalMyCsmParser.g:8538:3: kw= LeftSquareBracket kw= RightSquareBracket
            {
            kw=(Token)match(input,LeftSquareBracket,FOLLOW_78); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0());
              		
            }
            kw=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayBrackets"


    // $ANTLR start "entryRuleXFunctionTypeRef"
    // InternalMyCsmParser.g:8552:1: entryRuleXFunctionTypeRef returns [EObject current=null] : iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF ;
    public final EObject entryRuleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFunctionTypeRef = null;


        try {
            // InternalMyCsmParser.g:8552:57: (iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF )
            // InternalMyCsmParser.g:8553:2: iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFunctionTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFunctionTypeRef"


    // $ANTLR start "ruleXFunctionTypeRef"
    // InternalMyCsmParser.g:8559:1: ruleXFunctionTypeRef returns [EObject current=null] : ( (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )? otherlv_5= EqualsSignGreaterThanSign ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_paramTypes_1_0 = null;

        EObject lv_paramTypes_3_0 = null;

        EObject lv_returnType_6_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:8565:2: ( ( (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )? otherlv_5= EqualsSignGreaterThanSign ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) )
            // InternalMyCsmParser.g:8566:2: ( (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )? otherlv_5= EqualsSignGreaterThanSign ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            {
            // InternalMyCsmParser.g:8566:2: ( (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )? otherlv_5= EqualsSignGreaterThanSign ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            // InternalMyCsmParser.g:8567:3: (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )? otherlv_5= EqualsSignGreaterThanSign ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            {
            // InternalMyCsmParser.g:8567:3: (otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis )?
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( (LA174_0==LeftParenthesis) ) {
                alt174=1;
            }
            switch (alt174) {
                case 1 :
                    // InternalMyCsmParser.g:8568:4: otherlv_0= LeftParenthesis ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= RightParenthesis
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    // InternalMyCsmParser.g:8572:4: ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )?
                    int alt173=2;
                    int LA173_0 = input.LA(1);

                    if ( (LA173_0==EqualsSignGreaterThanSign||LA173_0==LeftParenthesis||LA173_0==RULE_ID) ) {
                        alt173=1;
                    }
                    switch (alt173) {
                        case 1 :
                            // InternalMyCsmParser.g:8573:5: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            {
                            // InternalMyCsmParser.g:8573:5: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) )
                            // InternalMyCsmParser.g:8574:6: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            {
                            // InternalMyCsmParser.g:8574:6: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            // InternalMyCsmParser.g:8575:7: lv_paramTypes_1_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_17);
                            lv_paramTypes_1_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                              							}
                              							add(
                              								current,
                              								"paramTypes",
                              								lv_paramTypes_1_0,
                              								"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalMyCsmParser.g:8592:5: (otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            loop172:
                            do {
                                int alt172=2;
                                int LA172_0 = input.LA(1);

                                if ( (LA172_0==Comma) ) {
                                    alt172=1;
                                }


                                switch (alt172) {
                            	case 1 :
                            	    // InternalMyCsmParser.g:8593:6: otherlv_2= Comma ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    {
                            	    otherlv_2=(Token)match(input,Comma,FOLLOW_52); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
                            	      					
                            	    }
                            	    // InternalMyCsmParser.g:8597:6: ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    // InternalMyCsmParser.g:8598:7: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    {
                            	    // InternalMyCsmParser.g:8598:7: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    // InternalMyCsmParser.g:8599:8: lv_paramTypes_3_0= ruleJvmTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_17);
                            	    lv_paramTypes_3_0=ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"paramTypes",
                            	      									lv_paramTypes_3_0,
                            	      									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop172;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }
                    break;

            }

            otherlv_5=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
              		
            }
            // InternalMyCsmParser.g:8627:3: ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            // InternalMyCsmParser.g:8628:4: (lv_returnType_6_0= ruleJvmTypeReference )
            {
            // InternalMyCsmParser.g:8628:4: (lv_returnType_6_0= ruleJvmTypeReference )
            // InternalMyCsmParser.g:8629:5: lv_returnType_6_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_returnType_6_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
              					}
              					set(
              						current,
              						"returnType",
              						lv_returnType_6_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFunctionTypeRef"


    // $ANTLR start "entryRuleJvmParameterizedTypeReference"
    // InternalMyCsmParser.g:8650:1: entryRuleJvmParameterizedTypeReference returns [EObject current=null] : iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF ;
    public final EObject entryRuleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmParameterizedTypeReference = null;


        try {
            // InternalMyCsmParser.g:8650:70: (iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF )
            // InternalMyCsmParser.g:8651:2: iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmParameterizedTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmParameterizedTypeReference"


    // $ANTLR start "ruleJvmParameterizedTypeReference"
    // InternalMyCsmParser.g:8657:1: ruleJvmParameterizedTypeReference returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )? ) ;
    public final EObject ruleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_arguments_2_0 = null;

        EObject lv_arguments_4_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:8663:2: ( ( ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )? ) )
            // InternalMyCsmParser.g:8664:2: ( ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )? )
            {
            // InternalMyCsmParser.g:8664:2: ( ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )? )
            // InternalMyCsmParser.g:8665:3: ( ( ruleQualifiedName ) ) ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )?
            {
            // InternalMyCsmParser.g:8665:3: ( ( ruleQualifiedName ) )
            // InternalMyCsmParser.g:8666:4: ( ruleQualifiedName )
            {
            // InternalMyCsmParser.g:8666:4: ( ruleQualifiedName )
            // InternalMyCsmParser.g:8667:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_105);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyCsmParser.g:8681:3: ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )?
            int alt179=2;
            alt179 = dfa179.predict(input);
            switch (alt179) {
                case 1 :
                    // InternalMyCsmParser.g:8682:4: ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )*
                    {
                    // InternalMyCsmParser.g:8682:4: ( ( LessThanSign )=>otherlv_1= LessThanSign )
                    // InternalMyCsmParser.g:8683:5: ( LessThanSign )=>otherlv_1= LessThanSign
                    {
                    otherlv_1=(Token)match(input,LessThanSign,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
                      				
                    }

                    }

                    // InternalMyCsmParser.g:8689:4: ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalMyCsmParser.g:8690:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalMyCsmParser.g:8690:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalMyCsmParser.g:8691:6: lv_arguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_65);
                    lv_arguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                      						}
                      						add(
                      							current,
                      							"arguments",
                      							lv_arguments_2_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyCsmParser.g:8708:4: (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop175:
                    do {
                        int alt175=2;
                        int LA175_0 = input.LA(1);

                        if ( (LA175_0==Comma) ) {
                            alt175=1;
                        }


                        switch (alt175) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:8709:5: otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_64); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalMyCsmParser.g:8713:5: ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalMyCsmParser.g:8714:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalMyCsmParser.g:8714:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalMyCsmParser.g:8715:7: lv_arguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_65);
                    	    lv_arguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"arguments",
                    	      								lv_arguments_4_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop175;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,GreaterThanSign,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
                      			
                    }
                    // InternalMyCsmParser.g:8737:4: ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )*
                    loop178:
                    do {
                        int alt178=2;
                        int LA178_0 = input.LA(1);

                        if ( (LA178_0==FullStop) ) {
                            int LA178_2 = input.LA(2);

                            if ( (LA178_2==RULE_ID) ) {
                                int LA178_3 = input.LA(3);

                                if ( (synpred45_InternalMyCsmParser()) ) {
                                    alt178=1;
                                }


                            }


                        }


                        switch (alt178) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:8738:5: ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )?
                    	    {
                    	    // InternalMyCsmParser.g:8738:5: ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) )
                    	    // InternalMyCsmParser.g:8739:6: ( ( () FullStop ) )=> ( () otherlv_7= FullStop )
                    	    {
                    	    // InternalMyCsmParser.g:8745:6: ( () otherlv_7= FullStop )
                    	    // InternalMyCsmParser.g:8746:7: () otherlv_7= FullStop
                    	    {
                    	    // InternalMyCsmParser.g:8746:7: ()
                    	    // InternalMyCsmParser.g:8747:8: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								current = forceCreateModelElementAndSet(
                    	      									grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0(),
                    	      									current);
                    	      							
                    	    }

                    	    }

                    	    otherlv_7=(Token)match(input,FullStop,FOLLOW_93); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_7, grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1());
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalMyCsmParser.g:8759:5: ( ( ruleValidID ) )
                    	    // InternalMyCsmParser.g:8760:6: ( ruleValidID )
                    	    {
                    	    // InternalMyCsmParser.g:8760:6: ( ruleValidID )
                    	    // InternalMyCsmParser.g:8761:7: ruleValidID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    ruleValidID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalMyCsmParser.g:8775:5: ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )?
                    	    int alt177=2;
                    	    alt177 = dfa177.predict(input);
                    	    switch (alt177) {
                    	        case 1 :
                    	            // InternalMyCsmParser.g:8776:6: ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign
                    	            {
                    	            // InternalMyCsmParser.g:8776:6: ( ( LessThanSign )=>otherlv_9= LessThanSign )
                    	            // InternalMyCsmParser.g:8777:7: ( LessThanSign )=>otherlv_9= LessThanSign
                    	            {
                    	            otherlv_9=(Token)match(input,LessThanSign,FOLLOW_64); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              							newLeafNode(otherlv_9, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0());
                    	              						
                    	            }

                    	            }

                    	            // InternalMyCsmParser.g:8783:6: ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) )
                    	            // InternalMyCsmParser.g:8784:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            {
                    	            // InternalMyCsmParser.g:8784:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            // InternalMyCsmParser.g:8785:8: lv_arguments_10_0= ruleJvmArgumentTypeReference
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_65);
                    	            lv_arguments_10_0=ruleJvmArgumentTypeReference();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"arguments",
                    	              									lv_arguments_10_0,
                    	              									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }


                    	            }

                    	            // InternalMyCsmParser.g:8802:6: (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )*
                    	            loop176:
                    	            do {
                    	                int alt176=2;
                    	                int LA176_0 = input.LA(1);

                    	                if ( (LA176_0==Comma) ) {
                    	                    alt176=1;
                    	                }


                    	                switch (alt176) {
                    	            	case 1 :
                    	            	    // InternalMyCsmParser.g:8803:7: otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    {
                    	            	    otherlv_11=(Token)match(input,Comma,FOLLOW_64); if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      							newLeafNode(otherlv_11, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0());
                    	            	      						
                    	            	    }
                    	            	    // InternalMyCsmParser.g:8807:7: ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    // InternalMyCsmParser.g:8808:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    {
                    	            	    // InternalMyCsmParser.g:8808:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    // InternalMyCsmParser.g:8809:9: lv_arguments_12_0= ruleJvmArgumentTypeReference
                    	            	    {
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0());
                    	            	      								
                    	            	    }
                    	            	    pushFollow(FOLLOW_65);
                    	            	    lv_arguments_12_0=ruleJvmArgumentTypeReference();

                    	            	    state._fsp--;
                    	            	    if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									if (current==null) {
                    	            	      										current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	            	      									}
                    	            	      									add(
                    	            	      										current,
                    	            	      										"arguments",
                    	            	      										lv_arguments_12_0,
                    	            	      										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	            	      									afterParserOrEnumRuleCall();
                    	            	      								
                    	            	    }

                    	            	    }


                    	            	    }


                    	            	    }
                    	            	    break;

                    	            	default :
                    	            	    break loop176;
                    	                }
                    	            } while (true);

                    	            otherlv_13=(Token)match(input,GreaterThanSign,FOLLOW_101); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_13, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop178;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmParameterizedTypeReference"


    // $ANTLR start "entryRuleJvmArgumentTypeReference"
    // InternalMyCsmParser.g:8838:1: entryRuleJvmArgumentTypeReference returns [EObject current=null] : iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF ;
    public final EObject entryRuleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmArgumentTypeReference = null;


        try {
            // InternalMyCsmParser.g:8838:65: (iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF )
            // InternalMyCsmParser.g:8839:2: iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmArgumentTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmArgumentTypeReference"


    // $ANTLR start "ruleJvmArgumentTypeReference"
    // InternalMyCsmParser.g:8845:1: ruleJvmArgumentTypeReference returns [EObject current=null] : (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) ;
    public final EObject ruleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmTypeReference_0 = null;

        EObject this_JvmWildcardTypeReference_1 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:8851:2: ( (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) )
            // InternalMyCsmParser.g:8852:2: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            {
            // InternalMyCsmParser.g:8852:2: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==EqualsSignGreaterThanSign||LA180_0==LeftParenthesis||LA180_0==RULE_ID) ) {
                alt180=1;
            }
            else if ( (LA180_0==QuestionMark) ) {
                alt180=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 180, 0, input);

                throw nvae;
            }
            switch (alt180) {
                case 1 :
                    // InternalMyCsmParser.g:8853:3: this_JvmTypeReference_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmTypeReference_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmTypeReference_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:8862:3: this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmWildcardTypeReference_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmArgumentTypeReference"


    // $ANTLR start "entryRuleJvmWildcardTypeReference"
    // InternalMyCsmParser.g:8874:1: entryRuleJvmWildcardTypeReference returns [EObject current=null] : iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF ;
    public final EObject entryRuleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmWildcardTypeReference = null;


        try {
            // InternalMyCsmParser.g:8874:65: (iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF )
            // InternalMyCsmParser.g:8875:2: iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmWildcardTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmWildcardTypeReference"


    // $ANTLR start "ruleJvmWildcardTypeReference"
    // InternalMyCsmParser.g:8881:1: ruleJvmWildcardTypeReference returns [EObject current=null] : ( () otherlv_1= QuestionMark ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) ;
    public final EObject ruleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_constraints_2_0 = null;

        EObject lv_constraints_3_0 = null;

        EObject lv_constraints_4_0 = null;

        EObject lv_constraints_5_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:8887:2: ( ( () otherlv_1= QuestionMark ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) )
            // InternalMyCsmParser.g:8888:2: ( () otherlv_1= QuestionMark ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            {
            // InternalMyCsmParser.g:8888:2: ( () otherlv_1= QuestionMark ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            // InternalMyCsmParser.g:8889:3: () otherlv_1= QuestionMark ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            {
            // InternalMyCsmParser.g:8889:3: ()
            // InternalMyCsmParser.g:8890:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,QuestionMark,FOLLOW_107); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
              		
            }
            // InternalMyCsmParser.g:8900:3: ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            int alt183=3;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==Extends) ) {
                alt183=1;
            }
            else if ( (LA183_0==Super) ) {
                alt183=2;
            }
            switch (alt183) {
                case 1 :
                    // InternalMyCsmParser.g:8901:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    {
                    // InternalMyCsmParser.g:8901:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    // InternalMyCsmParser.g:8902:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    {
                    // InternalMyCsmParser.g:8902:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) )
                    // InternalMyCsmParser.g:8903:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    {
                    // InternalMyCsmParser.g:8903:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    // InternalMyCsmParser.g:8904:7: lv_constraints_2_0= ruleJvmUpperBound
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_108);
                    lv_constraints_2_0=ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      							}
                      							add(
                      								current,
                      								"constraints",
                      								lv_constraints_2_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmUpperBound");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalMyCsmParser.g:8921:5: ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    loop181:
                    do {
                        int alt181=2;
                        int LA181_0 = input.LA(1);

                        if ( (LA181_0==Ampersand) ) {
                            alt181=1;
                        }


                        switch (alt181) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:8922:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    {
                    	    // InternalMyCsmParser.g:8922:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    // InternalMyCsmParser.g:8923:7: lv_constraints_3_0= ruleJvmUpperBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_108);
                    	    lv_constraints_3_0=ruleJvmUpperBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_3_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmUpperBoundAnded");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop181;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:8942:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    {
                    // InternalMyCsmParser.g:8942:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    // InternalMyCsmParser.g:8943:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    {
                    // InternalMyCsmParser.g:8943:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) )
                    // InternalMyCsmParser.g:8944:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    {
                    // InternalMyCsmParser.g:8944:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    // InternalMyCsmParser.g:8945:7: lv_constraints_4_0= ruleJvmLowerBound
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_108);
                    lv_constraints_4_0=ruleJvmLowerBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      							}
                      							add(
                      								current,
                      								"constraints",
                      								lv_constraints_4_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmLowerBound");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalMyCsmParser.g:8962:5: ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    loop182:
                    do {
                        int alt182=2;
                        int LA182_0 = input.LA(1);

                        if ( (LA182_0==Ampersand) ) {
                            alt182=1;
                        }


                        switch (alt182) {
                    	case 1 :
                    	    // InternalMyCsmParser.g:8963:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    {
                    	    // InternalMyCsmParser.g:8963:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    // InternalMyCsmParser.g:8964:7: lv_constraints_5_0= ruleJvmLowerBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_108);
                    	    lv_constraints_5_0=ruleJvmLowerBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_5_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmLowerBoundAnded");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop182;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmWildcardTypeReference"


    // $ANTLR start "entryRuleJvmUpperBound"
    // InternalMyCsmParser.g:8987:1: entryRuleJvmUpperBound returns [EObject current=null] : iv_ruleJvmUpperBound= ruleJvmUpperBound EOF ;
    public final EObject entryRuleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBound = null;


        try {
            // InternalMyCsmParser.g:8987:54: (iv_ruleJvmUpperBound= ruleJvmUpperBound EOF )
            // InternalMyCsmParser.g:8988:2: iv_ruleJvmUpperBound= ruleJvmUpperBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBound=ruleJvmUpperBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBound"


    // $ANTLR start "ruleJvmUpperBound"
    // InternalMyCsmParser.g:8994:1: ruleJvmUpperBound returns [EObject current=null] : (otherlv_0= Extends ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:9000:2: ( (otherlv_0= Extends ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalMyCsmParser.g:9001:2: (otherlv_0= Extends ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalMyCsmParser.g:9001:2: (otherlv_0= Extends ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalMyCsmParser.g:9002:3: otherlv_0= Extends ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,Extends,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
              		
            }
            // InternalMyCsmParser.g:9006:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalMyCsmParser.g:9007:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalMyCsmParser.g:9007:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalMyCsmParser.g:9008:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBound"


    // $ANTLR start "entryRuleJvmUpperBoundAnded"
    // InternalMyCsmParser.g:9029:1: entryRuleJvmUpperBoundAnded returns [EObject current=null] : iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF ;
    public final EObject entryRuleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBoundAnded = null;


        try {
            // InternalMyCsmParser.g:9029:59: (iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF )
            // InternalMyCsmParser.g:9030:2: iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBoundAnded"


    // $ANTLR start "ruleJvmUpperBoundAnded"
    // InternalMyCsmParser.g:9036:1: ruleJvmUpperBoundAnded returns [EObject current=null] : (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:9042:2: ( (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalMyCsmParser.g:9043:2: (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalMyCsmParser.g:9043:2: (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalMyCsmParser.g:9044:3: otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,Ampersand,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
              		
            }
            // InternalMyCsmParser.g:9048:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalMyCsmParser.g:9049:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalMyCsmParser.g:9049:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalMyCsmParser.g:9050:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBoundAnded"


    // $ANTLR start "entryRuleJvmLowerBound"
    // InternalMyCsmParser.g:9071:1: entryRuleJvmLowerBound returns [EObject current=null] : iv_ruleJvmLowerBound= ruleJvmLowerBound EOF ;
    public final EObject entryRuleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBound = null;


        try {
            // InternalMyCsmParser.g:9071:54: (iv_ruleJvmLowerBound= ruleJvmLowerBound EOF )
            // InternalMyCsmParser.g:9072:2: iv_ruleJvmLowerBound= ruleJvmLowerBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBound=ruleJvmLowerBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBound"


    // $ANTLR start "ruleJvmLowerBound"
    // InternalMyCsmParser.g:9078:1: ruleJvmLowerBound returns [EObject current=null] : (otherlv_0= Super ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:9084:2: ( (otherlv_0= Super ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalMyCsmParser.g:9085:2: (otherlv_0= Super ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalMyCsmParser.g:9085:2: (otherlv_0= Super ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalMyCsmParser.g:9086:3: otherlv_0= Super ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,Super,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
              		
            }
            // InternalMyCsmParser.g:9090:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalMyCsmParser.g:9091:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalMyCsmParser.g:9091:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalMyCsmParser.g:9092:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBound"


    // $ANTLR start "entryRuleJvmLowerBoundAnded"
    // InternalMyCsmParser.g:9113:1: entryRuleJvmLowerBoundAnded returns [EObject current=null] : iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF ;
    public final EObject entryRuleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBoundAnded = null;


        try {
            // InternalMyCsmParser.g:9113:59: (iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF )
            // InternalMyCsmParser.g:9114:2: iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBoundAnded=ruleJvmLowerBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBoundAnded"


    // $ANTLR start "ruleJvmLowerBoundAnded"
    // InternalMyCsmParser.g:9120:1: ruleJvmLowerBoundAnded returns [EObject current=null] : (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:9126:2: ( (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalMyCsmParser.g:9127:2: (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalMyCsmParser.g:9127:2: (otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalMyCsmParser.g:9128:3: otherlv_0= Ampersand ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,Ampersand,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0());
              		
            }
            // InternalMyCsmParser.g:9132:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalMyCsmParser.g:9133:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalMyCsmParser.g:9133:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalMyCsmParser.g:9134:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmLowerBoundAndedRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBoundAnded"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // InternalMyCsmParser.g:9155:1: entryRuleQualifiedNameWithWildcard returns [String current=null] : iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF ;
    public final String entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameWithWildcard = null;


        try {
            // InternalMyCsmParser.g:9155:65: (iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF )
            // InternalMyCsmParser.g:9156:2: iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameWithWildcard.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // InternalMyCsmParser.g:9162:1: ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QualifiedName_0= ruleQualifiedName kw= FullStop kw= Asterisk ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameWithWildcard() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:9168:2: ( (this_QualifiedName_0= ruleQualifiedName kw= FullStop kw= Asterisk ) )
            // InternalMyCsmParser.g:9169:2: (this_QualifiedName_0= ruleQualifiedName kw= FullStop kw= Asterisk )
            {
            // InternalMyCsmParser.g:9169:2: (this_QualifiedName_0= ruleQualifiedName kw= FullStop kw= Asterisk )
            // InternalMyCsmParser.g:9170:3: this_QualifiedName_0= ruleQualifiedName kw= FullStop kw= Asterisk
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_109);
            this_QualifiedName_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_QualifiedName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,FullStop,FOLLOW_110); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1());
              		
            }
            kw=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleValidID"
    // InternalMyCsmParser.g:9194:1: entryRuleValidID returns [String current=null] : iv_ruleValidID= ruleValidID EOF ;
    public final String entryRuleValidID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleValidID = null;


        try {
            // InternalMyCsmParser.g:9194:47: (iv_ruleValidID= ruleValidID EOF )
            // InternalMyCsmParser.g:9195:2: iv_ruleValidID= ruleValidID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValidIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValidID=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValidID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValidID"


    // $ANTLR start "ruleValidID"
    // InternalMyCsmParser.g:9201:1: ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleValidID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;


        	enterRule();

        try {
            // InternalMyCsmParser.g:9207:2: (this_ID_0= RULE_ID )
            // InternalMyCsmParser.g:9208:2: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValidID"


    // $ANTLR start "entryRuleXImportDeclaration"
    // InternalMyCsmParser.g:9218:1: entryRuleXImportDeclaration returns [EObject current=null] : iv_ruleXImportDeclaration= ruleXImportDeclaration EOF ;
    public final EObject entryRuleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportDeclaration = null;


        try {
            // InternalMyCsmParser.g:9218:59: (iv_ruleXImportDeclaration= ruleXImportDeclaration EOF )
            // InternalMyCsmParser.g:9219:2: iv_ruleXImportDeclaration= ruleXImportDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportDeclaration=ruleXImportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportDeclaration"


    // $ANTLR start "ruleXImportDeclaration"
    // InternalMyCsmParser.g:9225:1: ruleXImportDeclaration returns [EObject current=null] : (otherlv_0= Import ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= Semicolon )? ) ;
    public final EObject ruleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_static_1_0=null;
        Token lv_extension_2_0=null;
        Token lv_wildcard_4_0=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_memberName_5_0 = null;

        AntlrDatatypeRuleToken lv_importedNamespace_7_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:9231:2: ( (otherlv_0= Import ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= Semicolon )? ) )
            // InternalMyCsmParser.g:9232:2: (otherlv_0= Import ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= Semicolon )? )
            {
            // InternalMyCsmParser.g:9232:2: (otherlv_0= Import ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= Semicolon )? )
            // InternalMyCsmParser.g:9233:3: otherlv_0= Import ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= Semicolon )?
            {
            otherlv_0=(Token)match(input,Import,FOLLOW_111); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getXImportDeclarationAccess().getImportKeyword_0());
              		
            }
            // InternalMyCsmParser.g:9237:3: ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )
            int alt186=3;
            alt186 = dfa186.predict(input);
            switch (alt186) {
                case 1 :
                    // InternalMyCsmParser.g:9238:4: ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    {
                    // InternalMyCsmParser.g:9238:4: ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    // InternalMyCsmParser.g:9239:5: ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    {
                    // InternalMyCsmParser.g:9239:5: ( (lv_static_1_0= Static ) )
                    // InternalMyCsmParser.g:9240:6: (lv_static_1_0= Static )
                    {
                    // InternalMyCsmParser.g:9240:6: (lv_static_1_0= Static )
                    // InternalMyCsmParser.g:9241:7: lv_static_1_0= Static
                    {
                    lv_static_1_0=(Token)match(input,Static,FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_static_1_0, grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      							}
                      							setWithLastConsumed(current, "static", lv_static_1_0 != null, "static");
                      						
                    }

                    }


                    }

                    // InternalMyCsmParser.g:9253:5: ( (lv_extension_2_0= Extension ) )?
                    int alt184=2;
                    int LA184_0 = input.LA(1);

                    if ( (LA184_0==Extension) ) {
                        alt184=1;
                    }
                    switch (alt184) {
                        case 1 :
                            // InternalMyCsmParser.g:9254:6: (lv_extension_2_0= Extension )
                            {
                            // InternalMyCsmParser.g:9254:6: (lv_extension_2_0= Extension )
                            // InternalMyCsmParser.g:9255:7: lv_extension_2_0= Extension
                            {
                            lv_extension_2_0=(Token)match(input,Extension,FOLLOW_112); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_extension_2_0, grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              							}
                              							setWithLastConsumed(current, "extension", lv_extension_2_0 != null, "extension");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalMyCsmParser.g:9267:5: ( ( ruleQualifiedNameInStaticImport ) )
                    // InternalMyCsmParser.g:9268:6: ( ruleQualifiedNameInStaticImport )
                    {
                    // InternalMyCsmParser.g:9268:6: ( ruleQualifiedNameInStaticImport )
                    // InternalMyCsmParser.g:9269:7: ruleQualifiedNameInStaticImport
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_113);
                    ruleQualifiedNameInStaticImport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalMyCsmParser.g:9283:5: ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    int alt185=2;
                    int LA185_0 = input.LA(1);

                    if ( (LA185_0==Asterisk) ) {
                        alt185=1;
                    }
                    else if ( (LA185_0==RULE_ID) ) {
                        alt185=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 185, 0, input);

                        throw nvae;
                    }
                    switch (alt185) {
                        case 1 :
                            // InternalMyCsmParser.g:9284:6: ( (lv_wildcard_4_0= Asterisk ) )
                            {
                            // InternalMyCsmParser.g:9284:6: ( (lv_wildcard_4_0= Asterisk ) )
                            // InternalMyCsmParser.g:9285:7: (lv_wildcard_4_0= Asterisk )
                            {
                            // InternalMyCsmParser.g:9285:7: (lv_wildcard_4_0= Asterisk )
                            // InternalMyCsmParser.g:9286:8: lv_wildcard_4_0= Asterisk
                            {
                            lv_wildcard_4_0=(Token)match(input,Asterisk,FOLLOW_114); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_wildcard_4_0, grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              								}
                              								setWithLastConsumed(current, "wildcard", lv_wildcard_4_0 != null, "*");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMyCsmParser.g:9299:6: ( (lv_memberName_5_0= ruleValidID ) )
                            {
                            // InternalMyCsmParser.g:9299:6: ( (lv_memberName_5_0= ruleValidID ) )
                            // InternalMyCsmParser.g:9300:7: (lv_memberName_5_0= ruleValidID )
                            {
                            // InternalMyCsmParser.g:9300:7: (lv_memberName_5_0= ruleValidID )
                            // InternalMyCsmParser.g:9301:8: lv_memberName_5_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_3_1_0());
                              							
                            }
                            pushFollow(FOLLOW_114);
                            lv_memberName_5_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                              								}
                              								set(
                              									current,
                              									"memberName",
                              									lv_memberName_5_0,
                              									"org.eclipse.xtext.xbase.Xtype.ValidID");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyCsmParser.g:9321:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalMyCsmParser.g:9321:4: ( ( ruleQualifiedName ) )
                    // InternalMyCsmParser.g:9322:5: ( ruleQualifiedName )
                    {
                    // InternalMyCsmParser.g:9322:5: ( ruleQualifiedName )
                    // InternalMyCsmParser.g:9323:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_114);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalMyCsmParser.g:9338:4: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    {
                    // InternalMyCsmParser.g:9338:4: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    // InternalMyCsmParser.g:9339:5: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    {
                    // InternalMyCsmParser.g:9339:5: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    // InternalMyCsmParser.g:9340:6: lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_114);
                    lv_importedNamespace_7_0=ruleQualifiedNameWithWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"importedNamespace",
                      							lv_importedNamespace_7_0,
                      							"org.eclipse.xtext.xbase.Xtype.QualifiedNameWithWildcard");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyCsmParser.g:9358:3: (otherlv_8= Semicolon )?
            int alt187=2;
            int LA187_0 = input.LA(1);

            if ( (LA187_0==Semicolon) ) {
                alt187=1;
            }
            switch (alt187) {
                case 1 :
                    // InternalMyCsmParser.g:9359:4: otherlv_8= Semicolon
                    {
                    otherlv_8=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportDeclaration"


    // $ANTLR start "entryRuleQualifiedNameInStaticImport"
    // InternalMyCsmParser.g:9368:1: entryRuleQualifiedNameInStaticImport returns [String current=null] : iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF ;
    public final String entryRuleQualifiedNameInStaticImport() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameInStaticImport = null;


        try {
            // InternalMyCsmParser.g:9368:67: (iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF )
            // InternalMyCsmParser.g:9369:2: iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameInStaticImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameInStaticImport=ruleQualifiedNameInStaticImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameInStaticImport.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameInStaticImport"


    // $ANTLR start "ruleQualifiedNameInStaticImport"
    // InternalMyCsmParser.g:9375:1: ruleQualifiedNameInStaticImport returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID kw= FullStop )+ ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameInStaticImport() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;



        	enterRule();

        try {
            // InternalMyCsmParser.g:9381:2: ( (this_ValidID_0= ruleValidID kw= FullStop )+ )
            // InternalMyCsmParser.g:9382:2: (this_ValidID_0= ruleValidID kw= FullStop )+
            {
            // InternalMyCsmParser.g:9382:2: (this_ValidID_0= ruleValidID kw= FullStop )+
            int cnt188=0;
            loop188:
            do {
                int alt188=2;
                int LA188_0 = input.LA(1);

                if ( (LA188_0==RULE_ID) ) {
                    int LA188_2 = input.LA(2);

                    if ( (LA188_2==FullStop) ) {
                        alt188=1;
                    }


                }


                switch (alt188) {
            	case 1 :
            	    // InternalMyCsmParser.g:9383:3: this_ValidID_0= ruleValidID kw= FullStop
            	    {
            	    if ( state.backtracking==0 ) {

            	      			newCompositeNode(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0());
            	      		
            	    }
            	    pushFollow(FOLLOW_109);
            	    this_ValidID_0=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(this_ValidID_0);
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			afterParserOrEnumRuleCall();
            	      		
            	    }
            	    kw=(Token)match(input,FullStop,FOLLOW_115); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(kw);
            	      			newLeafNode(kw, grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1());
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt188 >= 1 ) break loop188;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(188, input);
                        throw eee;
                }
                cnt188++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameInStaticImport"

    // $ANTLR start synpred1_InternalMyCsmParser
    public final void synpred1_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:3284:6: ( ( () ( ( ruleOpMultiAssign ) ) ) )
        // InternalMyCsmParser.g:3284:7: ( () ( ( ruleOpMultiAssign ) ) )
        {
        // InternalMyCsmParser.g:3284:7: ( () ( ( ruleOpMultiAssign ) ) )
        // InternalMyCsmParser.g:3285:7: () ( ( ruleOpMultiAssign ) )
        {
        // InternalMyCsmParser.g:3285:7: ()
        // InternalMyCsmParser.g:3286:7: 
        {
        }

        // InternalMyCsmParser.g:3287:7: ( ( ruleOpMultiAssign ) )
        // InternalMyCsmParser.g:3288:8: ( ruleOpMultiAssign )
        {
        // InternalMyCsmParser.g:3288:8: ( ruleOpMultiAssign )
        // InternalMyCsmParser.g:3289:9: ruleOpMultiAssign
        {
        pushFollow(FOLLOW_2);
        ruleOpMultiAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred1_InternalMyCsmParser

    // $ANTLR start synpred2_InternalMyCsmParser
    public final void synpred2_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:3478:5: ( ( () ( ( ruleOpOr ) ) ) )
        // InternalMyCsmParser.g:3478:6: ( () ( ( ruleOpOr ) ) )
        {
        // InternalMyCsmParser.g:3478:6: ( () ( ( ruleOpOr ) ) )
        // InternalMyCsmParser.g:3479:6: () ( ( ruleOpOr ) )
        {
        // InternalMyCsmParser.g:3479:6: ()
        // InternalMyCsmParser.g:3480:6: 
        {
        }

        // InternalMyCsmParser.g:3481:6: ( ( ruleOpOr ) )
        // InternalMyCsmParser.g:3482:7: ( ruleOpOr )
        {
        // InternalMyCsmParser.g:3482:7: ( ruleOpOr )
        // InternalMyCsmParser.g:3483:8: ruleOpOr
        {
        pushFollow(FOLLOW_2);
        ruleOpOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred2_InternalMyCsmParser

    // $ANTLR start synpred3_InternalMyCsmParser
    public final void synpred3_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:3585:5: ( ( () ( ( ruleOpAnd ) ) ) )
        // InternalMyCsmParser.g:3585:6: ( () ( ( ruleOpAnd ) ) )
        {
        // InternalMyCsmParser.g:3585:6: ( () ( ( ruleOpAnd ) ) )
        // InternalMyCsmParser.g:3586:6: () ( ( ruleOpAnd ) )
        {
        // InternalMyCsmParser.g:3586:6: ()
        // InternalMyCsmParser.g:3587:6: 
        {
        }

        // InternalMyCsmParser.g:3588:6: ( ( ruleOpAnd ) )
        // InternalMyCsmParser.g:3589:7: ( ruleOpAnd )
        {
        // InternalMyCsmParser.g:3589:7: ( ruleOpAnd )
        // InternalMyCsmParser.g:3590:8: ruleOpAnd
        {
        pushFollow(FOLLOW_2);
        ruleOpAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred3_InternalMyCsmParser

    // $ANTLR start synpred4_InternalMyCsmParser
    public final void synpred4_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:3692:5: ( ( () ( ( ruleOpEquality ) ) ) )
        // InternalMyCsmParser.g:3692:6: ( () ( ( ruleOpEquality ) ) )
        {
        // InternalMyCsmParser.g:3692:6: ( () ( ( ruleOpEquality ) ) )
        // InternalMyCsmParser.g:3693:6: () ( ( ruleOpEquality ) )
        {
        // InternalMyCsmParser.g:3693:6: ()
        // InternalMyCsmParser.g:3694:6: 
        {
        }

        // InternalMyCsmParser.g:3695:6: ( ( ruleOpEquality ) )
        // InternalMyCsmParser.g:3696:7: ( ruleOpEquality )
        {
        // InternalMyCsmParser.g:3696:7: ( ruleOpEquality )
        // InternalMyCsmParser.g:3697:8: ruleOpEquality
        {
        pushFollow(FOLLOW_2);
        ruleOpEquality();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred4_InternalMyCsmParser

    // $ANTLR start synpred5_InternalMyCsmParser
    public final void synpred5_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:3820:6: ( ( () Instanceof ) )
        // InternalMyCsmParser.g:3820:7: ( () Instanceof )
        {
        // InternalMyCsmParser.g:3820:7: ( () Instanceof )
        // InternalMyCsmParser.g:3821:7: () Instanceof
        {
        // InternalMyCsmParser.g:3821:7: ()
        // InternalMyCsmParser.g:3822:7: 
        {
        }

        match(input,Instanceof,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalMyCsmParser

    // $ANTLR start synpred6_InternalMyCsmParser
    public final void synpred6_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:3863:6: ( ( () ( ( ruleOpCompare ) ) ) )
        // InternalMyCsmParser.g:3863:7: ( () ( ( ruleOpCompare ) ) )
        {
        // InternalMyCsmParser.g:3863:7: ( () ( ( ruleOpCompare ) ) )
        // InternalMyCsmParser.g:3864:7: () ( ( ruleOpCompare ) )
        {
        // InternalMyCsmParser.g:3864:7: ()
        // InternalMyCsmParser.g:3865:7: 
        {
        }

        // InternalMyCsmParser.g:3866:7: ( ( ruleOpCompare ) )
        // InternalMyCsmParser.g:3867:8: ( ruleOpCompare )
        {
        // InternalMyCsmParser.g:3867:8: ( ruleOpCompare )
        // InternalMyCsmParser.g:3868:9: ruleOpCompare
        {
        pushFollow(FOLLOW_2);
        ruleOpCompare();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred6_InternalMyCsmParser

    // $ANTLR start synpred7_InternalMyCsmParser
    public final void synpred7_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:3998:5: ( ( () ( ( ruleOpOther ) ) ) )
        // InternalMyCsmParser.g:3998:6: ( () ( ( ruleOpOther ) ) )
        {
        // InternalMyCsmParser.g:3998:6: ( () ( ( ruleOpOther ) ) )
        // InternalMyCsmParser.g:3999:6: () ( ( ruleOpOther ) )
        {
        // InternalMyCsmParser.g:3999:6: ()
        // InternalMyCsmParser.g:4000:6: 
        {
        }

        // InternalMyCsmParser.g:4001:6: ( ( ruleOpOther ) )
        // InternalMyCsmParser.g:4002:7: ( ruleOpOther )
        {
        // InternalMyCsmParser.g:4002:7: ( ruleOpOther )
        // InternalMyCsmParser.g:4003:8: ruleOpOther
        {
        pushFollow(FOLLOW_2);
        ruleOpOther();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred7_InternalMyCsmParser

    // $ANTLR start synpred8_InternalMyCsmParser
    public final void synpred8_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:4118:6: ( ( GreaterThanSign GreaterThanSign ) )
        // InternalMyCsmParser.g:4118:7: ( GreaterThanSign GreaterThanSign )
        {
        // InternalMyCsmParser.g:4118:7: ( GreaterThanSign GreaterThanSign )
        // InternalMyCsmParser.g:4119:7: GreaterThanSign GreaterThanSign
        {
        match(input,GreaterThanSign,FOLLOW_55); if (state.failed) return ;
        match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalMyCsmParser

    // $ANTLR start synpred9_InternalMyCsmParser
    public final void synpred9_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:4153:6: ( ( LessThanSign LessThanSign ) )
        // InternalMyCsmParser.g:4153:7: ( LessThanSign LessThanSign )
        {
        // InternalMyCsmParser.g:4153:7: ( LessThanSign LessThanSign )
        // InternalMyCsmParser.g:4154:7: LessThanSign LessThanSign
        {
        match(input,LessThanSign,FOLLOW_45); if (state.failed) return ;
        match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred9_InternalMyCsmParser

    // $ANTLR start synpred10_InternalMyCsmParser
    public final void synpred10_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:4226:5: ( ( () ( ( ruleOpAdd ) ) ) )
        // InternalMyCsmParser.g:4226:6: ( () ( ( ruleOpAdd ) ) )
        {
        // InternalMyCsmParser.g:4226:6: ( () ( ( ruleOpAdd ) ) )
        // InternalMyCsmParser.g:4227:6: () ( ( ruleOpAdd ) )
        {
        // InternalMyCsmParser.g:4227:6: ()
        // InternalMyCsmParser.g:4228:6: 
        {
        }

        // InternalMyCsmParser.g:4229:6: ( ( ruleOpAdd ) )
        // InternalMyCsmParser.g:4230:7: ( ruleOpAdd )
        {
        // InternalMyCsmParser.g:4230:7: ( ruleOpAdd )
        // InternalMyCsmParser.g:4231:8: ruleOpAdd
        {
        pushFollow(FOLLOW_2);
        ruleOpAdd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalMyCsmParser

    // $ANTLR start synpred11_InternalMyCsmParser
    public final void synpred11_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:4341:5: ( ( () ( ( ruleOpMulti ) ) ) )
        // InternalMyCsmParser.g:4341:6: ( () ( ( ruleOpMulti ) ) )
        {
        // InternalMyCsmParser.g:4341:6: ( () ( ( ruleOpMulti ) ) )
        // InternalMyCsmParser.g:4342:6: () ( ( ruleOpMulti ) )
        {
        // InternalMyCsmParser.g:4342:6: ()
        // InternalMyCsmParser.g:4343:6: 
        {
        }

        // InternalMyCsmParser.g:4344:6: ( ( ruleOpMulti ) )
        // InternalMyCsmParser.g:4345:7: ( ruleOpMulti )
        {
        // InternalMyCsmParser.g:4345:7: ( ruleOpMulti )
        // InternalMyCsmParser.g:4346:8: ruleOpMulti
        {
        pushFollow(FOLLOW_2);
        ruleOpMulti();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred11_InternalMyCsmParser

    // $ANTLR start synpred12_InternalMyCsmParser
    public final void synpred12_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:4576:5: ( ( () As ) )
        // InternalMyCsmParser.g:4576:6: ( () As )
        {
        // InternalMyCsmParser.g:4576:6: ( () As )
        // InternalMyCsmParser.g:4577:6: () As
        {
        // InternalMyCsmParser.g:4577:6: ()
        // InternalMyCsmParser.g:4578:6: 
        {
        }

        match(input,As,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_InternalMyCsmParser

    // $ANTLR start synpred13_InternalMyCsmParser
    public final void synpred13_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:4644:4: ( ( () ( ( ruleOpPostfix ) ) ) )
        // InternalMyCsmParser.g:4644:5: ( () ( ( ruleOpPostfix ) ) )
        {
        // InternalMyCsmParser.g:4644:5: ( () ( ( ruleOpPostfix ) ) )
        // InternalMyCsmParser.g:4645:5: () ( ( ruleOpPostfix ) )
        {
        // InternalMyCsmParser.g:4645:5: ()
        // InternalMyCsmParser.g:4646:5: 
        {
        }

        // InternalMyCsmParser.g:4647:5: ( ( ruleOpPostfix ) )
        // InternalMyCsmParser.g:4648:6: ( ruleOpPostfix )
        {
        // InternalMyCsmParser.g:4648:6: ( ruleOpPostfix )
        // InternalMyCsmParser.g:4649:7: ruleOpPostfix
        {
        pushFollow(FOLLOW_2);
        ruleOpPostfix();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred13_InternalMyCsmParser

    // $ANTLR start synpred14_InternalMyCsmParser
    public final void synpred14_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:4740:6: ( ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
        // InternalMyCsmParser.g:4740:7: ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        {
        // InternalMyCsmParser.g:4740:7: ( () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        // InternalMyCsmParser.g:4741:7: () ( FullStop | ( ( ColonColon ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
        {
        // InternalMyCsmParser.g:4741:7: ()
        // InternalMyCsmParser.g:4742:7: 
        {
        }

        // InternalMyCsmParser.g:4743:7: ( FullStop | ( ( ColonColon ) ) )
        int alt189=2;
        int LA189_0 = input.LA(1);

        if ( (LA189_0==FullStop) ) {
            alt189=1;
        }
        else if ( (LA189_0==ColonColon) ) {
            alt189=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 189, 0, input);

            throw nvae;
        }
        switch (alt189) {
            case 1 :
                // InternalMyCsmParser.g:4744:8: FullStop
                {
                match(input,FullStop,FOLLOW_62); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalMyCsmParser.g:4746:8: ( ( ColonColon ) )
                {
                // InternalMyCsmParser.g:4746:8: ( ( ColonColon ) )
                // InternalMyCsmParser.g:4747:9: ( ColonColon )
                {
                // InternalMyCsmParser.g:4747:9: ( ColonColon )
                // InternalMyCsmParser.g:4748:10: ColonColon
                {
                match(input,ColonColon,FOLLOW_62); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalMyCsmParser.g:4752:7: ( ( ruleFeatureCallID ) )
        // InternalMyCsmParser.g:4753:8: ( ruleFeatureCallID )
        {
        // InternalMyCsmParser.g:4753:8: ( ruleFeatureCallID )
        // InternalMyCsmParser.g:4754:9: ruleFeatureCallID
        {
        pushFollow(FOLLOW_42);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred14_InternalMyCsmParser

    // $ANTLR start synpred15_InternalMyCsmParser
    public final void synpred15_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:4837:6: ( ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) ) )
        // InternalMyCsmParser.g:4837:7: ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) )
        {
        // InternalMyCsmParser.g:4837:7: ( () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) ) )
        // InternalMyCsmParser.g:4838:7: () ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) )
        {
        // InternalMyCsmParser.g:4838:7: ()
        // InternalMyCsmParser.g:4839:7: 
        {
        }

        // InternalMyCsmParser.g:4840:7: ( FullStop | ( ( QuestionMarkFullStop ) ) | ( ( ColonColon ) ) )
        int alt190=3;
        switch ( input.LA(1) ) {
        case FullStop:
            {
            alt190=1;
            }
            break;
        case QuestionMarkFullStop:
            {
            alt190=2;
            }
            break;
        case ColonColon:
            {
            alt190=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 190, 0, input);

            throw nvae;
        }

        switch (alt190) {
            case 1 :
                // InternalMyCsmParser.g:4841:8: FullStop
                {
                match(input,FullStop,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalMyCsmParser.g:4843:8: ( ( QuestionMarkFullStop ) )
                {
                // InternalMyCsmParser.g:4843:8: ( ( QuestionMarkFullStop ) )
                // InternalMyCsmParser.g:4844:9: ( QuestionMarkFullStop )
                {
                // InternalMyCsmParser.g:4844:9: ( QuestionMarkFullStop )
                // InternalMyCsmParser.g:4845:10: QuestionMarkFullStop
                {
                match(input,QuestionMarkFullStop,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalMyCsmParser.g:4849:8: ( ( ColonColon ) )
                {
                // InternalMyCsmParser.g:4849:8: ( ( ColonColon ) )
                // InternalMyCsmParser.g:4850:9: ( ColonColon )
                {
                // InternalMyCsmParser.g:4850:9: ( ColonColon )
                // InternalMyCsmParser.g:4851:10: ColonColon
                {
                match(input,ColonColon,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred15_InternalMyCsmParser

    // $ANTLR start synpred16_InternalMyCsmParser
    public final void synpred16_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:4975:7: ( ( LeftParenthesis ) )
        // InternalMyCsmParser.g:4975:8: ( LeftParenthesis )
        {
        // InternalMyCsmParser.g:4975:8: ( LeftParenthesis )
        // InternalMyCsmParser.g:4976:8: LeftParenthesis
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred16_InternalMyCsmParser

    // $ANTLR start synpred17_InternalMyCsmParser
    public final void synpred17_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:4994:8: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )
        // InternalMyCsmParser.g:4994:9: ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        {
        // InternalMyCsmParser.g:4994:9: ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        // InternalMyCsmParser.g:4995:9: () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) )
        {
        // InternalMyCsmParser.g:4995:9: ()
        // InternalMyCsmParser.g:4996:9: 
        {
        }

        // InternalMyCsmParser.g:4997:9: ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )?
        int alt192=2;
        int LA192_0 = input.LA(1);

        if ( (LA192_0==EqualsSignGreaterThanSign||LA192_0==LeftParenthesis||LA192_0==RULE_ID) ) {
            alt192=1;
        }
        switch (alt192) {
            case 1 :
                // InternalMyCsmParser.g:4998:10: ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalMyCsmParser.g:4998:10: ( ( ruleJvmFormalParameter ) )
                // InternalMyCsmParser.g:4999:11: ( ruleJvmFormalParameter )
                {
                // InternalMyCsmParser.g:4999:11: ( ruleJvmFormalParameter )
                // InternalMyCsmParser.g:5000:12: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_77);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalMyCsmParser.g:5003:10: ( Comma ( ( ruleJvmFormalParameter ) ) )*
                loop191:
                do {
                    int alt191=2;
                    int LA191_0 = input.LA(1);

                    if ( (LA191_0==Comma) ) {
                        alt191=1;
                    }


                    switch (alt191) {
                	case 1 :
                	    // InternalMyCsmParser.g:5004:11: Comma ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,Comma,FOLLOW_52); if (state.failed) return ;
                	    // InternalMyCsmParser.g:5005:11: ( ( ruleJvmFormalParameter ) )
                	    // InternalMyCsmParser.g:5006:12: ( ruleJvmFormalParameter )
                	    {
                	    // InternalMyCsmParser.g:5006:12: ( ruleJvmFormalParameter )
                	    // InternalMyCsmParser.g:5007:13: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_77);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop191;
                    }
                } while (true);


                }
                break;

        }

        // InternalMyCsmParser.g:5012:9: ( ( VerticalLine ) )
        // InternalMyCsmParser.g:5013:10: ( VerticalLine )
        {
        // InternalMyCsmParser.g:5013:10: ( VerticalLine )
        // InternalMyCsmParser.g:5014:11: VerticalLine
        {
        match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred17_InternalMyCsmParser

    // $ANTLR start synpred18_InternalMyCsmParser
    public final void synpred18_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:5091:6: ( ( () LeftSquareBracket ) )
        // InternalMyCsmParser.g:5091:7: ( () LeftSquareBracket )
        {
        // InternalMyCsmParser.g:5091:7: ( () LeftSquareBracket )
        // InternalMyCsmParser.g:5092:7: () LeftSquareBracket
        {
        // InternalMyCsmParser.g:5092:7: ()
        // InternalMyCsmParser.g:5093:7: 
        {
        }

        match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred18_InternalMyCsmParser

    // $ANTLR start synpred19_InternalMyCsmParser
    public final void synpred19_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:5164:4: ( ( () Synchronized LeftParenthesis ) )
        // InternalMyCsmParser.g:5164:5: ( () Synchronized LeftParenthesis )
        {
        // InternalMyCsmParser.g:5164:5: ( () Synchronized LeftParenthesis )
        // InternalMyCsmParser.g:5165:5: () Synchronized LeftParenthesis
        {
        // InternalMyCsmParser.g:5165:5: ()
        // InternalMyCsmParser.g:5166:5: 
        {
        }

        match(input,Synchronized,FOLLOW_15); if (state.failed) return ;
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalMyCsmParser

    // $ANTLR start synpred20_InternalMyCsmParser
    public final void synpred20_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:5209:4: ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )
        // InternalMyCsmParser.g:5209:5: ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon )
        {
        // InternalMyCsmParser.g:5209:5: ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon )
        // InternalMyCsmParser.g:5210:5: () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon
        {
        // InternalMyCsmParser.g:5210:5: ()
        // InternalMyCsmParser.g:5211:5: 
        {
        }

        match(input,For,FOLLOW_15); if (state.failed) return ;
        match(input,LeftParenthesis,FOLLOW_52); if (state.failed) return ;
        // InternalMyCsmParser.g:5214:5: ( ( ruleJvmFormalParameter ) )
        // InternalMyCsmParser.g:5215:6: ( ruleJvmFormalParameter )
        {
        // InternalMyCsmParser.g:5215:6: ( ruleJvmFormalParameter )
        // InternalMyCsmParser.g:5216:7: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_83);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred20_InternalMyCsmParser

    // $ANTLR start synpred21_InternalMyCsmParser
    public final void synpred21_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:5323:4: ( ( () LeftSquareBracket ) )
        // InternalMyCsmParser.g:5323:5: ( () LeftSquareBracket )
        {
        // InternalMyCsmParser.g:5323:5: ( () LeftSquareBracket )
        // InternalMyCsmParser.g:5324:5: () LeftSquareBracket
        {
        // InternalMyCsmParser.g:5324:5: ()
        // InternalMyCsmParser.g:5325:5: 
        {
        }

        match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred21_InternalMyCsmParser

    // $ANTLR start synpred23_InternalMyCsmParser
    public final void synpred23_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:5628:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )
        // InternalMyCsmParser.g:5628:5: ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        {
        // InternalMyCsmParser.g:5628:5: ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        // InternalMyCsmParser.g:5629:5: ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) )
        {
        // InternalMyCsmParser.g:5629:5: ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )?
        int alt194=2;
        int LA194_0 = input.LA(1);

        if ( (LA194_0==EqualsSignGreaterThanSign||LA194_0==LeftParenthesis||LA194_0==RULE_ID) ) {
            alt194=1;
        }
        switch (alt194) {
            case 1 :
                // InternalMyCsmParser.g:5630:6: ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalMyCsmParser.g:5630:6: ( ( ruleJvmFormalParameter ) )
                // InternalMyCsmParser.g:5631:7: ( ruleJvmFormalParameter )
                {
                // InternalMyCsmParser.g:5631:7: ( ruleJvmFormalParameter )
                // InternalMyCsmParser.g:5632:8: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_77);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalMyCsmParser.g:5635:6: ( Comma ( ( ruleJvmFormalParameter ) ) )*
                loop193:
                do {
                    int alt193=2;
                    int LA193_0 = input.LA(1);

                    if ( (LA193_0==Comma) ) {
                        alt193=1;
                    }


                    switch (alt193) {
                	case 1 :
                	    // InternalMyCsmParser.g:5636:7: Comma ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,Comma,FOLLOW_52); if (state.failed) return ;
                	    // InternalMyCsmParser.g:5637:7: ( ( ruleJvmFormalParameter ) )
                	    // InternalMyCsmParser.g:5638:8: ( ruleJvmFormalParameter )
                	    {
                	    // InternalMyCsmParser.g:5638:8: ( ruleJvmFormalParameter )
                	    // InternalMyCsmParser.g:5639:9: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_77);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop193;
                    }
                } while (true);


                }
                break;

        }

        // InternalMyCsmParser.g:5644:5: ( ( VerticalLine ) )
        // InternalMyCsmParser.g:5645:6: ( VerticalLine )
        {
        // InternalMyCsmParser.g:5645:6: ( VerticalLine )
        // InternalMyCsmParser.g:5646:7: VerticalLine
        {
        match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred23_InternalMyCsmParser

    // $ANTLR start synpred25_InternalMyCsmParser
    public final void synpred25_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:6037:5: ( Else )
        // InternalMyCsmParser.g:6037:6: Else
        {
        match(input,Else,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred25_InternalMyCsmParser

    // $ANTLR start synpred26_InternalMyCsmParser
    public final void synpred26_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:6096:6: ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )
        // InternalMyCsmParser.g:6096:7: ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon )
        {
        // InternalMyCsmParser.g:6096:7: ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon )
        // InternalMyCsmParser.g:6097:7: LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon
        {
        match(input,LeftParenthesis,FOLLOW_52); if (state.failed) return ;
        // InternalMyCsmParser.g:6098:7: ( ( ruleJvmFormalParameter ) )
        // InternalMyCsmParser.g:6099:8: ( ruleJvmFormalParameter )
        {
        // InternalMyCsmParser.g:6099:8: ( ruleJvmFormalParameter )
        // InternalMyCsmParser.g:6100:9: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_83);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred26_InternalMyCsmParser

    // $ANTLR start synpred27_InternalMyCsmParser
    public final void synpred27_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:6163:6: ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )
        // InternalMyCsmParser.g:6163:7: ( ( ( ruleJvmFormalParameter ) ) Colon )
        {
        // InternalMyCsmParser.g:6163:7: ( ( ( ruleJvmFormalParameter ) ) Colon )
        // InternalMyCsmParser.g:6164:7: ( ( ruleJvmFormalParameter ) ) Colon
        {
        // InternalMyCsmParser.g:6164:7: ( ( ruleJvmFormalParameter ) )
        // InternalMyCsmParser.g:6165:8: ( ruleJvmFormalParameter )
        {
        // InternalMyCsmParser.g:6165:8: ( ruleJvmFormalParameter )
        // InternalMyCsmParser.g:6166:9: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_83);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred27_InternalMyCsmParser

    // $ANTLR start synpred29_InternalMyCsmParser
    public final void synpred29_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:6920:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )
        // InternalMyCsmParser.g:6920:6: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        {
        // InternalMyCsmParser.g:6920:6: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        // InternalMyCsmParser.g:6921:6: ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) )
        {
        // InternalMyCsmParser.g:6921:6: ( ( ruleJvmTypeReference ) )
        // InternalMyCsmParser.g:6922:7: ( ruleJvmTypeReference )
        {
        // InternalMyCsmParser.g:6922:7: ( ruleJvmTypeReference )
        // InternalMyCsmParser.g:6923:8: ruleJvmTypeReference
        {
        pushFollow(FOLLOW_93);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalMyCsmParser.g:6926:6: ( ( ruleValidID ) )
        // InternalMyCsmParser.g:6927:7: ( ruleValidID )
        {
        // InternalMyCsmParser.g:6927:7: ( ruleValidID )
        // InternalMyCsmParser.g:6928:8: ruleValidID
        {
        pushFollow(FOLLOW_2);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred29_InternalMyCsmParser

    // $ANTLR start synpred30_InternalMyCsmParser
    public final void synpred30_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:7232:5: ( ( LeftParenthesis ) )
        // InternalMyCsmParser.g:7232:6: ( LeftParenthesis )
        {
        // InternalMyCsmParser.g:7232:6: ( LeftParenthesis )
        // InternalMyCsmParser.g:7233:6: LeftParenthesis
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred30_InternalMyCsmParser

    // $ANTLR start synpred31_InternalMyCsmParser
    public final void synpred31_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:7251:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )
        // InternalMyCsmParser.g:7251:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        {
        // InternalMyCsmParser.g:7251:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        // InternalMyCsmParser.g:7252:7: () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) )
        {
        // InternalMyCsmParser.g:7252:7: ()
        // InternalMyCsmParser.g:7253:7: 
        {
        }

        // InternalMyCsmParser.g:7254:7: ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )?
        int alt198=2;
        int LA198_0 = input.LA(1);

        if ( (LA198_0==EqualsSignGreaterThanSign||LA198_0==LeftParenthesis||LA198_0==RULE_ID) ) {
            alt198=1;
        }
        switch (alt198) {
            case 1 :
                // InternalMyCsmParser.g:7255:8: ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalMyCsmParser.g:7255:8: ( ( ruleJvmFormalParameter ) )
                // InternalMyCsmParser.g:7256:9: ( ruleJvmFormalParameter )
                {
                // InternalMyCsmParser.g:7256:9: ( ruleJvmFormalParameter )
                // InternalMyCsmParser.g:7257:10: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_77);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalMyCsmParser.g:7260:8: ( Comma ( ( ruleJvmFormalParameter ) ) )*
                loop197:
                do {
                    int alt197=2;
                    int LA197_0 = input.LA(1);

                    if ( (LA197_0==Comma) ) {
                        alt197=1;
                    }


                    switch (alt197) {
                	case 1 :
                	    // InternalMyCsmParser.g:7261:9: Comma ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,Comma,FOLLOW_52); if (state.failed) return ;
                	    // InternalMyCsmParser.g:7262:9: ( ( ruleJvmFormalParameter ) )
                	    // InternalMyCsmParser.g:7263:10: ( ruleJvmFormalParameter )
                	    {
                	    // InternalMyCsmParser.g:7263:10: ( ruleJvmFormalParameter )
                	    // InternalMyCsmParser.g:7264:11: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_77);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop197;
                    }
                } while (true);


                }
                break;

        }

        // InternalMyCsmParser.g:7269:7: ( ( VerticalLine ) )
        // InternalMyCsmParser.g:7270:8: ( VerticalLine )
        {
        // InternalMyCsmParser.g:7270:8: ( VerticalLine )
        // InternalMyCsmParser.g:7271:9: VerticalLine
        {
        match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred31_InternalMyCsmParser

    // $ANTLR start synpred32_InternalMyCsmParser
    public final void synpred32_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:7348:4: ( ( () LeftSquareBracket ) )
        // InternalMyCsmParser.g:7348:5: ( () LeftSquareBracket )
        {
        // InternalMyCsmParser.g:7348:5: ( () LeftSquareBracket )
        // InternalMyCsmParser.g:7349:5: () LeftSquareBracket
        {
        // InternalMyCsmParser.g:7349:5: ()
        // InternalMyCsmParser.g:7350:5: 
        {
        }

        match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalMyCsmParser

    // $ANTLR start synpred33_InternalMyCsmParser
    public final void synpred33_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:7508:5: ( LessThanSign )
        // InternalMyCsmParser.g:7508:6: LessThanSign
        {
        match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred33_InternalMyCsmParser

    // $ANTLR start synpred34_InternalMyCsmParser
    public final void synpred34_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:7565:5: ( ( LeftParenthesis ) )
        // InternalMyCsmParser.g:7565:6: ( LeftParenthesis )
        {
        // InternalMyCsmParser.g:7565:6: ( LeftParenthesis )
        // InternalMyCsmParser.g:7566:6: LeftParenthesis
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_InternalMyCsmParser

    // $ANTLR start synpred35_InternalMyCsmParser
    public final void synpred35_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:7584:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )
        // InternalMyCsmParser.g:7584:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        {
        // InternalMyCsmParser.g:7584:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) )
        // InternalMyCsmParser.g:7585:7: () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) )
        {
        // InternalMyCsmParser.g:7585:7: ()
        // InternalMyCsmParser.g:7586:7: 
        {
        }

        // InternalMyCsmParser.g:7587:7: ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )?
        int alt200=2;
        int LA200_0 = input.LA(1);

        if ( (LA200_0==EqualsSignGreaterThanSign||LA200_0==LeftParenthesis||LA200_0==RULE_ID) ) {
            alt200=1;
        }
        switch (alt200) {
            case 1 :
                // InternalMyCsmParser.g:7588:8: ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalMyCsmParser.g:7588:8: ( ( ruleJvmFormalParameter ) )
                // InternalMyCsmParser.g:7589:9: ( ruleJvmFormalParameter )
                {
                // InternalMyCsmParser.g:7589:9: ( ruleJvmFormalParameter )
                // InternalMyCsmParser.g:7590:10: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_77);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalMyCsmParser.g:7593:8: ( Comma ( ( ruleJvmFormalParameter ) ) )*
                loop199:
                do {
                    int alt199=2;
                    int LA199_0 = input.LA(1);

                    if ( (LA199_0==Comma) ) {
                        alt199=1;
                    }


                    switch (alt199) {
                	case 1 :
                	    // InternalMyCsmParser.g:7594:9: Comma ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,Comma,FOLLOW_52); if (state.failed) return ;
                	    // InternalMyCsmParser.g:7595:9: ( ( ruleJvmFormalParameter ) )
                	    // InternalMyCsmParser.g:7596:10: ( ruleJvmFormalParameter )
                	    {
                	    // InternalMyCsmParser.g:7596:10: ( ruleJvmFormalParameter )
                	    // InternalMyCsmParser.g:7597:11: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_77);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop199;
                    }
                } while (true);


                }
                break;

        }

        // InternalMyCsmParser.g:7602:7: ( ( VerticalLine ) )
        // InternalMyCsmParser.g:7603:8: ( VerticalLine )
        {
        // InternalMyCsmParser.g:7603:8: ( VerticalLine )
        // InternalMyCsmParser.g:7604:9: VerticalLine
        {
        match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred35_InternalMyCsmParser

    // $ANTLR start synpred36_InternalMyCsmParser
    public final void synpred36_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:7681:4: ( ( () LeftSquareBracket ) )
        // InternalMyCsmParser.g:7681:5: ( () LeftSquareBracket )
        {
        // InternalMyCsmParser.g:7681:5: ( () LeftSquareBracket )
        // InternalMyCsmParser.g:7682:5: () LeftSquareBracket
        {
        // InternalMyCsmParser.g:7682:5: ()
        // InternalMyCsmParser.g:7683:5: 
        {
        }

        match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred36_InternalMyCsmParser

    // $ANTLR start synpred37_InternalMyCsmParser
    public final void synpred37_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:8024:4: ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )
        // InternalMyCsmParser.g:
        {
        if ( input.LA(1)==Synchronized||input.LA(1)==Extension||input.LA(1)==Extends||(input.LA(1)>=Import && input.LA(1)<=Typeof)||(input.LA(1)>=False && input.LA(1)<=Throw)||input.LA(1)==While||input.LA(1)==Null||input.LA(1)==True||(input.LA(1)>=For && input.LA(1)<=New)||input.LA(1)==Try||(input.LA(1)>=Do && input.LA(1)<=If)||(input.LA(1)>=ExclamationMark && input.LA(1)<=NumberSign)||input.LA(1)==LeftParenthesis||input.LA(1)==PlusSign||input.LA(1)==HyphenMinus||input.LA(1)==LessThanSign||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_BEGIN||(input.LA(1)>=RULE_HEX && input.LA(1)<=RULE_STRING) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred37_InternalMyCsmParser

    // $ANTLR start synpred38_InternalMyCsmParser
    public final void synpred38_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:8095:6: ( Catch )
        // InternalMyCsmParser.g:8095:7: Catch
        {
        match(input,Catch,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred38_InternalMyCsmParser

    // $ANTLR start synpred39_InternalMyCsmParser
    public final void synpred39_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:8116:7: ( Finally )
        // InternalMyCsmParser.g:8116:8: Finally
        {
        match(input,Finally,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred39_InternalMyCsmParser

    // $ANTLR start synpred42_InternalMyCsmParser
    public final void synpred42_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:8360:5: ( FullStop )
        // InternalMyCsmParser.g:8360:6: FullStop
        {
        match(input,FullStop,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred42_InternalMyCsmParser

    // $ANTLR start synpred43_InternalMyCsmParser
    public final void synpred43_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:8486:5: ( ( () ruleArrayBrackets ) )
        // InternalMyCsmParser.g:8486:6: ( () ruleArrayBrackets )
        {
        // InternalMyCsmParser.g:8486:6: ( () ruleArrayBrackets )
        // InternalMyCsmParser.g:8487:6: () ruleArrayBrackets
        {
        // InternalMyCsmParser.g:8487:6: ()
        // InternalMyCsmParser.g:8488:6: 
        {
        }

        pushFollow(FOLLOW_2);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred43_InternalMyCsmParser

    // $ANTLR start synpred44_InternalMyCsmParser
    public final void synpred44_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:8683:5: ( LessThanSign )
        // InternalMyCsmParser.g:8683:6: LessThanSign
        {
        match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred44_InternalMyCsmParser

    // $ANTLR start synpred45_InternalMyCsmParser
    public final void synpred45_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:8739:6: ( ( () FullStop ) )
        // InternalMyCsmParser.g:8739:7: ( () FullStop )
        {
        // InternalMyCsmParser.g:8739:7: ( () FullStop )
        // InternalMyCsmParser.g:8740:7: () FullStop
        {
        // InternalMyCsmParser.g:8740:7: ()
        // InternalMyCsmParser.g:8741:7: 
        {
        }

        match(input,FullStop,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred45_InternalMyCsmParser

    // $ANTLR start synpred46_InternalMyCsmParser
    public final void synpred46_InternalMyCsmParser_fragment() throws RecognitionException {   
        // InternalMyCsmParser.g:8777:7: ( LessThanSign )
        // InternalMyCsmParser.g:8777:8: LessThanSign
        {
        match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred46_InternalMyCsmParser

    // Delegated rules

    public final boolean synpred20_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalMyCsmParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalMyCsmParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA81 dfa81 = new DFA81(this);
    protected DFA91 dfa91 = new DFA91(this);
    protected DFA94 dfa94 = new DFA94(this);
    protected DFA110 dfa110 = new DFA110(this);
    protected DFA109 dfa109 = new DFA109(this);
    protected DFA111 dfa111 = new DFA111(this);
    protected DFA113 dfa113 = new DFA113(this);
    protected DFA122 dfa122 = new DFA122(this);
    protected DFA129 dfa129 = new DFA129(this);
    protected DFA128 dfa128 = new DFA128(this);
    protected DFA149 dfa149 = new DFA149(this);
    protected DFA148 dfa148 = new DFA148(this);
    protected DFA150 dfa150 = new DFA150(this);
    protected DFA154 dfa154 = new DFA154(this);
    protected DFA157 dfa157 = new DFA157(this);
    protected DFA156 dfa156 = new DFA156(this);
    protected DFA158 dfa158 = new DFA158(this);
    protected DFA161 dfa161 = new DFA161(this);
    protected DFA179 dfa179 = new DFA179(this);
    protected DFA177 dfa177 = new DFA177(this);
    protected DFA186 dfa186 = new DFA186(this);
    static final String dfa_1s = "\12\uffff";
    static final String dfa_2s = "\1\10\11\uffff";
    static final String dfa_3s = "\1\15\7\0\2\uffff";
    static final String dfa_4s = "\1\163\7\0\2\uffff";
    static final String dfa_5s = "\10\uffff\1\2\1\1";
    static final String dfa_6s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\0\1\6\2\uffff}>";
    static final String[] dfa_7s = {
            "\2\10\2\uffff\1\10\6\uffff\3\10\3\uffff\5\10\2\uffff\4\10\1\uffff\1\10\3\uffff\3\10\3\uffff\4\10\1\uffff\2\10\1\uffff\4\10\1\5\2\10\1\3\1\10\1\1\1\10\1\2\2\10\1\4\16\10\1\uffff\12\10\1\6\1\uffff\1\7\1\uffff\3\10\1\uffff\10\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "3282:4: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA81_6 = input.LA(1);

                         
                        int index81_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyCsmParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index81_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA81_1 = input.LA(1);

                         
                        int index81_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyCsmParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index81_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA81_2 = input.LA(1);

                         
                        int index81_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyCsmParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index81_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA81_3 = input.LA(1);

                         
                        int index81_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyCsmParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index81_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA81_4 = input.LA(1);

                         
                        int index81_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyCsmParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index81_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA81_5 = input.LA(1);

                         
                        int index81_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyCsmParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index81_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA81_7 = input.LA(1);

                         
                        int index81_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalMyCsmParser()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index81_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\13\uffff";
    static final String dfa_9s = "\1\1\12\uffff";
    static final String dfa_10s = "\1\15\1\uffff\10\0\1\uffff";
    static final String dfa_11s = "\1\163\1\uffff\10\0\1\uffff";
    static final String dfa_12s = "\1\uffff\1\2\10\uffff\1\1";
    static final String dfa_13s = "\2\uffff\1\0\1\6\1\1\1\2\1\7\1\3\1\4\1\5\1\uffff}>";
    static final String[] dfa_14s = {
            "\2\1\2\uffff\1\1\6\uffff\3\1\3\uffff\5\1\2\uffff\4\1\1\uffff\1\1\3\uffff\3\1\3\uffff\2\1\1\5\1\1\1\uffff\2\1\1\uffff\14\1\1\4\1\6\2\1\1\10\1\1\1\7\2\1\1\11\7\1\1\uffff\12\1\1\2\1\uffff\1\3\1\uffff\3\1\1\uffff\10\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA91 extends DFA {

        public DFA91(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 91;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "()* loopback of 3996:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA91_2 = input.LA(1);

                         
                        int index91_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMyCsmParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index91_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA91_4 = input.LA(1);

                         
                        int index91_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMyCsmParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index91_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA91_5 = input.LA(1);

                         
                        int index91_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMyCsmParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index91_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA91_7 = input.LA(1);

                         
                        int index91_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMyCsmParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index91_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA91_8 = input.LA(1);

                         
                        int index91_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMyCsmParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index91_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA91_9 = input.LA(1);

                         
                        int index91_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMyCsmParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index91_9);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA91_3 = input.LA(1);

                         
                        int index91_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMyCsmParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index91_3);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA91_6 = input.LA(1);

                         
                        int index91_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMyCsmParser()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index91_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 91, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_15s = "\1\66\2\uffff\1\111\7\uffff";
    static final String dfa_16s = "\1\146\2\uffff\1\146\7\uffff";
    static final String dfa_17s = "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\7\1\10\1\11\1\3\1\6";
    static final String dfa_18s = "\13\uffff}>";
    static final String[] dfa_19s = {
            "\1\2\21\uffff\1\1\1\4\2\uffff\1\7\1\uffff\1\5\2\uffff\1\10\22\uffff\1\6\1\uffff\1\3",
            "",
            "",
            "\1\11\34\uffff\1\12",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA94 extends DFA {

        public DFA94(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 94;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "4072:2: (kw= HyphenMinusGreaterThanSign | kw= FullStopFullStopLessThanSign | (kw= GreaterThanSign kw= FullStopFullStop ) | kw= FullStopFullStop | kw= EqualsSignGreaterThanSign | (kw= GreaterThanSign ( ( ( ( GreaterThanSign GreaterThanSign ) )=> (kw= GreaterThanSign kw= GreaterThanSign ) ) | kw= GreaterThanSign ) ) | (kw= LessThanSign ( ( ( ( LessThanSign LessThanSign ) )=> (kw= LessThanSign kw= LessThanSign ) ) | kw= LessThanSign | kw= EqualsSignGreaterThanSign ) ) | kw= LessThanSignGreaterThanSign | kw= QuestionMarkColon )";
        }
    }
    static final String dfa_20s = "\120\uffff";
    static final String dfa_21s = "\1\2\117\uffff";
    static final String dfa_22s = "\1\15\1\0\116\uffff";
    static final String dfa_23s = "\1\163\1\0\116\uffff";
    static final String dfa_24s = "\2\uffff\1\2\114\uffff\1\1";
    static final String dfa_25s = "\1\uffff\1\0\116\uffff}>";
    static final String[] dfa_26s = {
            "\2\2\2\uffff\1\2\6\uffff\3\2\3\uffff\5\2\2\uffff\4\2\1\uffff\1\2\3\uffff\3\2\3\uffff\4\2\1\uffff\2\2\1\uffff\35\2\1\uffff\1\1\12\2\1\uffff\1\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA110 extends DFA {

        public DFA110(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 110;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "4973:5: ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_17_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= RightParenthesis )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA110_1 = input.LA(1);

                         
                        int index110_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index110_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 110, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_27s = "\44\uffff";
    static final String dfa_28s = "\1\15\2\0\41\uffff";
    static final String dfa_29s = "\1\163\2\0\41\uffff";
    static final String dfa_30s = "\3\uffff\2\1\1\2\35\uffff\1\3";
    static final String dfa_31s = "\1\0\1\1\1\2\41\uffff}>";
    static final String[] dfa_32s = {
            "\1\5\3\uffff\1\5\7\uffff\1\5\4\uffff\5\5\3\uffff\3\5\1\uffff\1\5\5\uffff\1\5\3\uffff\1\5\4\uffff\2\5\1\uffff\1\5\21\uffff\1\3\4\uffff\2\5\1\uffff\2\5\2\uffff\1\2\1\43\1\uffff\1\5\1\uffff\1\5\4\uffff\1\5\3\uffff\1\5\2\uffff\1\4\1\uffff\1\5\1\uffff\3\5\1\1\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA109 extends DFA {

        public DFA109(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 109;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "4992:6: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= Comma ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA109_0 = input.LA(1);

                         
                        int index109_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA109_0==RULE_ID) ) {s = 1;}

                        else if ( (LA109_0==LeftParenthesis) ) {s = 2;}

                        else if ( (LA109_0==EqualsSignGreaterThanSign) && (synpred17_InternalMyCsmParser())) {s = 3;}

                        else if ( (LA109_0==VerticalLine) && (synpred17_InternalMyCsmParser())) {s = 4;}

                        else if ( (LA109_0==Synchronized||LA109_0==Extension||LA109_0==Extends||(LA109_0>=Import && LA109_0<=Typeof)||(LA109_0>=False && LA109_0<=Throw)||LA109_0==While||LA109_0==Null||LA109_0==True||(LA109_0>=For && LA109_0<=New)||LA109_0==Try||(LA109_0>=Do && LA109_0<=If)||(LA109_0>=ExclamationMark && LA109_0<=NumberSign)||LA109_0==PlusSign||LA109_0==HyphenMinus||LA109_0==LessThanSign||LA109_0==LeftSquareBracket||LA109_0==RULE_BEGIN||(LA109_0>=RULE_HEX && LA109_0<=RULE_DECIMAL)||LA109_0==RULE_STRING) ) {s = 5;}

                        else if ( (LA109_0==RightParenthesis) ) {s = 35;}

                         
                        input.seek(index109_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA109_1 = input.LA(1);

                         
                        int index109_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalMyCsmParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index109_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA109_2 = input.LA(1);

                         
                        int index109_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalMyCsmParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index109_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 109, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_33s = {
            "\2\2\2\uffff\1\2\6\uffff\3\2\3\uffff\5\2\2\uffff\4\2\1\uffff\1\2\3\uffff\3\2\3\uffff\4\2\1\uffff\2\2\1\uffff\35\2\1\uffff\13\2\1\uffff\1\2\1\uffff\1\1\2\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA111 extends DFA {

        public DFA111(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 111;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "5090:5: ( ( ( () LeftSquareBracket ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA111_1 = input.LA(1);

                         
                        int index111_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index111_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 111, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\40\uffff";
    static final String dfa_35s = "\1\15\26\uffff\1\0\10\uffff";
    static final String dfa_36s = "\1\163\26\uffff\1\0\10\uffff";
    static final String dfa_37s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\6\uffff\1\6\11\uffff\1\7\1\uffff\1\12\1\13\1\14\1\15\1\16\1\17\1\10\1\11";
    static final String dfa_38s = "\1\0\26\uffff\1\1\10\uffff}>";
    static final String[] dfa_39s = {
            "\1\4\3\uffff\1\5\7\uffff\1\5\4\uffff\1\5\1\33\1\5\1\3\1\14\3\uffff\1\14\1\5\1\32\1\uffff\1\30\5\uffff\1\14\3\uffff\1\14\4\uffff\1\27\1\1\1\uffff\1\34\26\uffff\1\31\1\26\2\uffff\1\14\2\uffff\1\35\11\uffff\1\5\3\uffff\1\14\4\uffff\1\2\1\uffff\3\14\1\5\1\14",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA113 extends DFA {

        public DFA113(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 113;
            this.eot = dfa_34;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "5135:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () Synchronized LeftParenthesis ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () For LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA113_0 = input.LA(1);

                         
                        int index113_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA113_0==New) ) {s = 1;}

                        else if ( (LA113_0==RULE_BEGIN) ) {s = 2;}

                        else if ( (LA113_0==Switch) ) {s = 3;}

                        else if ( (LA113_0==Synchronized) && (synpred19_InternalMyCsmParser())) {s = 4;}

                        else if ( (LA113_0==Extension||LA113_0==Extends||LA113_0==Import||LA113_0==Static||LA113_0==Super||LA113_0==LessThanSign||LA113_0==RULE_ID) ) {s = 5;}

                        else if ( (LA113_0==Typeof||LA113_0==False||LA113_0==Null||LA113_0==True||LA113_0==NumberSign||LA113_0==LeftSquareBracket||(LA113_0>=RULE_HEX && LA113_0<=RULE_DECIMAL)||LA113_0==RULE_STRING) ) {s = 12;}

                        else if ( (LA113_0==If) ) {s = 22;}

                        else if ( (LA113_0==For) ) {s = 23;}

                        else if ( (LA113_0==While) ) {s = 24;}

                        else if ( (LA113_0==Do) ) {s = 25;}

                        else if ( (LA113_0==Throw) ) {s = 26;}

                        else if ( (LA113_0==Return) ) {s = 27;}

                        else if ( (LA113_0==Try) ) {s = 28;}

                        else if ( (LA113_0==LeftParenthesis) ) {s = 29;}

                         
                        input.seek(index113_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA113_23 = input.LA(1);

                         
                        int index113_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalMyCsmParser()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index113_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 113, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_40s = "\46\uffff";
    static final String dfa_41s = "\1\15\2\0\43\uffff";
    static final String dfa_42s = "\1\163\2\0\43\uffff";
    static final String dfa_43s = "\3\uffff\2\1\1\2\40\uffff";
    static final String dfa_44s = "\1\0\1\1\1\2\43\uffff}>";
    static final String[] dfa_45s = {
            "\1\5\3\uffff\1\5\7\uffff\1\5\4\uffff\5\5\3\uffff\3\5\1\uffff\1\5\5\uffff\1\5\3\uffff\1\5\4\uffff\2\5\1\uffff\3\5\17\uffff\1\3\4\uffff\2\5\1\uffff\2\5\2\uffff\1\2\2\uffff\1\5\1\uffff\1\5\4\uffff\1\5\3\uffff\2\5\1\uffff\1\4\1\uffff\1\5\1\uffff\3\5\1\1\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA122 extends DFA {

        public DFA122(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 122;
            this.eot = dfa_40;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "5627:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= Comma ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= VerticalLine ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA122_0 = input.LA(1);

                         
                        int index122_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA122_0==RULE_ID) ) {s = 1;}

                        else if ( (LA122_0==LeftParenthesis) ) {s = 2;}

                        else if ( (LA122_0==EqualsSignGreaterThanSign) && (synpred23_InternalMyCsmParser())) {s = 3;}

                        else if ( (LA122_0==VerticalLine) && (synpred23_InternalMyCsmParser())) {s = 4;}

                        else if ( (LA122_0==Synchronized||LA122_0==Extension||LA122_0==Extends||(LA122_0>=Import && LA122_0<=Typeof)||(LA122_0>=False && LA122_0<=Throw)||LA122_0==While||LA122_0==Null||LA122_0==True||(LA122_0>=For && LA122_0<=New)||(LA122_0>=Try && LA122_0<=Var)||(LA122_0>=Do && LA122_0<=If)||(LA122_0>=ExclamationMark && LA122_0<=NumberSign)||LA122_0==PlusSign||LA122_0==HyphenMinus||LA122_0==LessThanSign||(LA122_0>=LeftSquareBracket && LA122_0<=RightSquareBracket)||LA122_0==RULE_BEGIN||(LA122_0>=RULE_HEX && LA122_0<=RULE_DECIMAL)||LA122_0==RULE_STRING) ) {s = 5;}

                         
                        input.seek(index122_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA122_1 = input.LA(1);

                         
                        int index122_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalMyCsmParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index122_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA122_2 = input.LA(1);

                         
                        int index122_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalMyCsmParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index122_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 122, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_46s = "\43\uffff";
    static final String dfa_47s = "\1\15\1\0\41\uffff";
    static final String dfa_48s = "\1\163\1\0\41\uffff";
    static final String dfa_49s = "\2\uffff\1\2\37\uffff\1\1";
    static final String dfa_50s = "\1\uffff\1\0\41\uffff}>";
    static final String[] dfa_51s = {
            "\1\2\3\uffff\1\2\7\uffff\1\2\4\uffff\5\2\3\uffff\3\2\1\uffff\1\2\5\uffff\1\2\3\uffff\1\2\4\uffff\2\2\1\uffff\1\2\21\uffff\1\2\4\uffff\2\2\1\uffff\2\2\2\uffff\1\1\2\uffff\1\2\1\uffff\1\2\4\uffff\1\2\3\uffff\1\2\4\uffff\1\2\1\uffff\5\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[][] dfa_51 = unpackEncodedStringArray(dfa_51s);

    class DFA129 extends DFA {

        public DFA129(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 129;
            this.eot = dfa_46;
            this.eof = dfa_46;
            this.min = dfa_47;
            this.max = dfa_48;
            this.accept = dfa_49;
            this.special = dfa_50;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "6093:3: ( ( ( ( ( LeftParenthesis ( ( ruleJvmFormalParameter ) ) Colon ) )=> (otherlv_2= LeftParenthesis ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= Colon ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= RightParenthesis ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA129_1 = input.LA(1);

                         
                        int index129_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_InternalMyCsmParser()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index129_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 129, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_52s = "\42\uffff";
    static final String dfa_53s = "\1\15\2\0\37\uffff";
    static final String dfa_54s = "\1\163\2\0\37\uffff";
    static final String dfa_55s = "\3\uffff\1\1\1\2\35\uffff";
    static final String dfa_56s = "\1\0\1\1\1\2\37\uffff}>";
    static final String[] dfa_57s = {
            "\1\4\3\uffff\1\4\7\uffff\1\4\4\uffff\5\4\3\uffff\3\4\1\uffff\1\4\5\uffff\1\4\3\uffff\1\4\4\uffff\2\4\1\uffff\1\4\21\uffff\1\3\4\uffff\2\4\1\uffff\2\4\2\uffff\1\2\2\uffff\1\4\1\uffff\1\4\4\uffff\1\4\3\uffff\1\4\4\uffff\1\4\1\uffff\3\4\1\1\1\4",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA128 extends DFA {

        public DFA128(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 128;
            this.eot = dfa_52;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "6162:5: ( ( ( ( ( ruleJvmFormalParameter ) ) Colon ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= Colon ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA128_0 = input.LA(1);

                         
                        int index128_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA128_0==RULE_ID) ) {s = 1;}

                        else if ( (LA128_0==LeftParenthesis) ) {s = 2;}

                        else if ( (LA128_0==EqualsSignGreaterThanSign) && (synpred27_InternalMyCsmParser())) {s = 3;}

                        else if ( (LA128_0==Synchronized||LA128_0==Extension||LA128_0==Extends||(LA128_0>=Import && LA128_0<=Typeof)||(LA128_0>=False && LA128_0<=Throw)||LA128_0==While||LA128_0==Null||LA128_0==True||(LA128_0>=For && LA128_0<=New)||LA128_0==Try||(LA128_0>=Do && LA128_0<=If)||(LA128_0>=ExclamationMark && LA128_0<=NumberSign)||LA128_0==PlusSign||LA128_0==HyphenMinus||LA128_0==LessThanSign||LA128_0==LeftSquareBracket||LA128_0==RULE_BEGIN||(LA128_0>=RULE_HEX && LA128_0<=RULE_DECIMAL)||LA128_0==RULE_STRING) ) {s = 4;}

                         
                        input.seek(index128_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA128_1 = input.LA(1);

                         
                        int index128_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalMyCsmParser()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index128_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA128_2 = input.LA(1);

                         
                        int index128_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalMyCsmParser()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index128_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 128, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA149 extends DFA {

        public DFA149(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 149;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "7230:3: ( ( ( ( LeftParenthesis ) )=> (lv_explicitOperationCall_7_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= RightParenthesis )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA149_1 = input.LA(1);

                         
                        int index149_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index149_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 149, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA148 extends DFA {

        public DFA148(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 148;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "7249:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= Comma ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA148_0 = input.LA(1);

                         
                        int index148_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA148_0==RULE_ID) ) {s = 1;}

                        else if ( (LA148_0==LeftParenthesis) ) {s = 2;}

                        else if ( (LA148_0==EqualsSignGreaterThanSign) && (synpred31_InternalMyCsmParser())) {s = 3;}

                        else if ( (LA148_0==VerticalLine) && (synpred31_InternalMyCsmParser())) {s = 4;}

                        else if ( (LA148_0==Synchronized||LA148_0==Extension||LA148_0==Extends||(LA148_0>=Import && LA148_0<=Typeof)||(LA148_0>=False && LA148_0<=Throw)||LA148_0==While||LA148_0==Null||LA148_0==True||(LA148_0>=For && LA148_0<=New)||LA148_0==Try||(LA148_0>=Do && LA148_0<=If)||(LA148_0>=ExclamationMark && LA148_0<=NumberSign)||LA148_0==PlusSign||LA148_0==HyphenMinus||LA148_0==LessThanSign||LA148_0==LeftSquareBracket||LA148_0==RULE_BEGIN||(LA148_0>=RULE_HEX && LA148_0<=RULE_DECIMAL)||LA148_0==RULE_STRING) ) {s = 5;}

                        else if ( (LA148_0==RightParenthesis) ) {s = 35;}

                         
                        input.seek(index148_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA148_1 = input.LA(1);

                         
                        int index148_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalMyCsmParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index148_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA148_2 = input.LA(1);

                         
                        int index148_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalMyCsmParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index148_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 148, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA150 extends DFA {

        public DFA150(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 150;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "7347:3: ( ( ( () LeftSquareBracket ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA150_1 = input.LA(1);

                         
                        int index150_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index150_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 150, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_58s = {
            "\2\2\2\uffff\1\2\6\uffff\3\2\3\uffff\5\2\2\uffff\4\2\1\uffff\1\2\3\uffff\3\2\3\uffff\4\2\1\uffff\2\2\1\uffff\35\2\1\uffff\12\2\1\1\1\uffff\1\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA154 extends DFA {

        public DFA154(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 154;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "7506:3: ( ( ( LessThanSign )=>otherlv_3= LessThanSign ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= Comma ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= GreaterThanSign )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA154_1 = input.LA(1);

                         
                        int index154_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index154_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 154, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA157 extends DFA {

        public DFA157(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 157;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "7563:3: ( ( ( ( LeftParenthesis ) )=> (lv_explicitConstructorCall_8_0= LeftParenthesis ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= RightParenthesis )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA157_1 = input.LA(1);

                         
                        int index157_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index157_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 157, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA156 extends DFA {

        public DFA156(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 156;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "7582:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( Comma ( ( ruleJvmFormalParameter ) ) )* )? ( ( VerticalLine ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA156_0 = input.LA(1);

                         
                        int index156_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA156_0==RULE_ID) ) {s = 1;}

                        else if ( (LA156_0==LeftParenthesis) ) {s = 2;}

                        else if ( (LA156_0==EqualsSignGreaterThanSign) && (synpred35_InternalMyCsmParser())) {s = 3;}

                        else if ( (LA156_0==VerticalLine) && (synpred35_InternalMyCsmParser())) {s = 4;}

                        else if ( (LA156_0==Synchronized||LA156_0==Extension||LA156_0==Extends||(LA156_0>=Import && LA156_0<=Typeof)||(LA156_0>=False && LA156_0<=Throw)||LA156_0==While||LA156_0==Null||LA156_0==True||(LA156_0>=For && LA156_0<=New)||LA156_0==Try||(LA156_0>=Do && LA156_0<=If)||(LA156_0>=ExclamationMark && LA156_0<=NumberSign)||LA156_0==PlusSign||LA156_0==HyphenMinus||LA156_0==LessThanSign||LA156_0==LeftSquareBracket||LA156_0==RULE_BEGIN||(LA156_0>=RULE_HEX && LA156_0<=RULE_DECIMAL)||LA156_0==RULE_STRING) ) {s = 5;}

                        else if ( (LA156_0==RightParenthesis) ) {s = 35;}

                         
                        input.seek(index156_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA156_1 = input.LA(1);

                         
                        int index156_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalMyCsmParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index156_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA156_2 = input.LA(1);

                         
                        int index156_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalMyCsmParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index156_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 156, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA158 extends DFA {

        public DFA158(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 158;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "7680:3: ( ( ( () LeftSquareBracket ) )=> (lv_arguments_14_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA158_1 = input.LA(1);

                         
                        int index158_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index158_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 158, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_59s = "\1\41\117\uffff";
    static final String dfa_60s = "\1\15\40\0\57\uffff";
    static final String dfa_61s = "\1\163\40\0\57\uffff";
    static final String dfa_62s = "\41\uffff\1\2\55\uffff\1\1";
    static final String dfa_63s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\57\uffff}>";
    static final String[] dfa_64s = {
            "\1\14\1\41\2\uffff\1\5\6\uffff\1\41\1\2\1\41\3\uffff\1\4\1\36\1\3\1\13\1\30\2\uffff\1\41\1\21\1\16\1\35\1\uffff\1\33\3\uffff\2\41\1\26\3\uffff\1\22\3\41\1\uffff\1\32\1\11\1\uffff\1\37\26\41\1\34\1\31\1\41\1\6\1\17\1\41\1\uffff\1\40\2\41\1\10\1\41\1\7\4\41\1\15\1\uffff\1\41\1\uffff\1\20\2\41\1\uffff\1\41\1\12\1\41\1\23\1\24\1\25\1\1\1\27",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[][] dfa_64 = unpackEncodedStringArray(dfa_64s);

    class DFA161 extends DFA {

        public DFA161(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 161;
            this.eot = dfa_20;
            this.eof = dfa_59;
            this.min = dfa_60;
            this.max = dfa_61;
            this.accept = dfa_62;
            this.special = dfa_63;
            this.transition = dfa_64;
        }
        public String getDescription() {
            return "8023:3: ( ( Extends | Static | Import | Extension | ExclamationMark | HyphenMinus | PlusSign | New | Switch | Synchronized | LessThanSign | Super | NumberSign | LeftSquareBracket | False | True | Null | Typeof | If | For | While | Do | Throw | Return | Try | LeftParenthesis | RULE_ID | RULE_BEGIN | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA161_1 = input.LA(1);

                         
                        int index161_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA161_2 = input.LA(1);

                         
                        int index161_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA161_3 = input.LA(1);

                         
                        int index161_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA161_4 = input.LA(1);

                         
                        int index161_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA161_5 = input.LA(1);

                         
                        int index161_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA161_6 = input.LA(1);

                         
                        int index161_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA161_7 = input.LA(1);

                         
                        int index161_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA161_8 = input.LA(1);

                         
                        int index161_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA161_9 = input.LA(1);

                         
                        int index161_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA161_10 = input.LA(1);

                         
                        int index161_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA161_11 = input.LA(1);

                         
                        int index161_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA161_12 = input.LA(1);

                         
                        int index161_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA161_13 = input.LA(1);

                         
                        int index161_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA161_14 = input.LA(1);

                         
                        int index161_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA161_15 = input.LA(1);

                         
                        int index161_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA161_16 = input.LA(1);

                         
                        int index161_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA161_17 = input.LA(1);

                         
                        int index161_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA161_18 = input.LA(1);

                         
                        int index161_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA161_19 = input.LA(1);

                         
                        int index161_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA161_20 = input.LA(1);

                         
                        int index161_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA161_21 = input.LA(1);

                         
                        int index161_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA161_22 = input.LA(1);

                         
                        int index161_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA161_23 = input.LA(1);

                         
                        int index161_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA161_24 = input.LA(1);

                         
                        int index161_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA161_25 = input.LA(1);

                         
                        int index161_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA161_26 = input.LA(1);

                         
                        int index161_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA161_27 = input.LA(1);

                         
                        int index161_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA161_28 = input.LA(1);

                         
                        int index161_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA161_29 = input.LA(1);

                         
                        int index161_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA161_30 = input.LA(1);

                         
                        int index161_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA161_31 = input.LA(1);

                         
                        int index161_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA161_32 = input.LA(1);

                         
                        int index161_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalMyCsmParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index161_32);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 161, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_65s = "\121\uffff";
    static final String dfa_66s = "\1\2\120\uffff";
    static final String dfa_67s = "\1\15\1\0\117\uffff";
    static final String dfa_68s = "\1\163\1\0\117\uffff";
    static final String dfa_69s = "\2\uffff\1\2\115\uffff\1\1";
    static final String dfa_70s = "\1\uffff\1\0\117\uffff}>";
    static final String[] dfa_71s = {
            "\2\2\2\uffff\1\2\6\uffff\3\2\3\uffff\5\2\2\uffff\4\2\1\uffff\1\2\3\uffff\3\2\3\uffff\4\2\1\uffff\2\2\1\uffff\50\2\1\1\1\uffff\1\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[][] dfa_71 = unpackEncodedStringArray(dfa_71s);

    class DFA179 extends DFA {

        public DFA179(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 179;
            this.eot = dfa_65;
            this.eof = dfa_66;
            this.min = dfa_67;
            this.max = dfa_68;
            this.accept = dfa_69;
            this.special = dfa_70;
            this.transition = dfa_71;
        }
        public String getDescription() {
            return "8681:3: ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= Comma ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= GreaterThanSign ( ( ( ( () FullStop ) )=> ( () otherlv_7= FullStop ) ) ( ( ruleValidID ) ) ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )? )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA179_1 = input.LA(1);

                         
                        int index179_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalMyCsmParser()) ) {s = 80;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index179_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 179, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA177 extends DFA {

        public DFA177(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 177;
            this.eot = dfa_65;
            this.eof = dfa_66;
            this.min = dfa_67;
            this.max = dfa_68;
            this.accept = dfa_69;
            this.special = dfa_70;
            this.transition = dfa_71;
        }
        public String getDescription() {
            return "8775:5: ( ( ( LessThanSign )=>otherlv_9= LessThanSign ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= Comma ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= GreaterThanSign )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA177_1 = input.LA(1);

                         
                        int index177_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalMyCsmParser()) ) {s = 80;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index177_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 177, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_72s = "\7\uffff";
    static final String dfa_73s = "\2\uffff\1\4\2\uffff\1\4\1\uffff";
    static final String dfa_74s = "\1\40\1\uffff\1\140\1\134\1\uffff\1\140\1\uffff";
    static final String dfa_75s = "\1\162\1\uffff\1\143\1\162\1\uffff\1\143\1\uffff";
    static final String dfa_76s = "\1\uffff\1\1\2\uffff\1\2\1\uffff\1\3";
    static final String dfa_77s = "\7\uffff}>";
    static final String[] dfa_78s = {
            "\1\1\121\uffff\1\2",
            "",
            "\1\3\2\uffff\1\4",
            "\1\6\25\uffff\1\5",
            "",
            "\1\3\2\uffff\1\4",
            ""
    };

    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[][] dfa_78 = unpackEncodedStringArray(dfa_78s);

    class DFA186 extends DFA {

        public DFA186(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 186;
            this.eot = dfa_72;
            this.eof = dfa_73;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_78;
        }
        public String getDescription() {
            return "9237:3: ( ( ( (lv_static_1_0= Static ) ) ( (lv_extension_2_0= Extension ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= Asterisk ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x00002010000000C0L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000000L,0x0000400040000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000008030L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000008000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x000C000000000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0000000048000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000001000L,0x0000400000000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000180820800000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000020000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000000L,0x0001000080000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000010300800L,0x0000400000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000010200800L,0x0000400000000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000200800L,0x0000400000000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000200000L,0x0000400000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000010300900L,0x0000400000000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000010200900L,0x0000400000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000200900L,0x0000400000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000200100L,0x0000400000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0802000008000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0802000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0800000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0008000000000600L,0x0000400000000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0008000000000400L,0x0000400000000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0008000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000600L,0x0000400000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000400L,0x0000400000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x761105C7C2022000L,0x000FE110A4D80000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x761105C7C2022000L,0x000FE118A4D80000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x761105C7C2022000L,0x000FA110A4D80000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000002L,0x00000050000004A9L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000000L,0x0000004000008000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x80A0000000000002L,0x0000000000002000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000004002L,0x0000005000008000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0004000004004000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0040000000000002L,0x0000005000025300L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000000L,0x0000001000004000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000002L,0x00000000A0000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000002L,0x0000000211000004L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000050L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000002L,0x0000000100010800L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000142020000L,0x0004000000000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000008142020000L,0x0004001000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0004008004004000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000000L,0x0000004040000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000002L,0x0000010104010800L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x761105C7C2022000L,0x000FA910ACD84000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000002L,0x0000010100010800L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x761105C7C2022000L,0x000FB110A4D80000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000100040000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x761105C7C2022000L,0x000FA310A4D80000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000020040000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x761105C7C2022000L,0x000FAB10A4D84000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x0000080040000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x761105C7C2022002L,0x000FA118A4D80000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x761105C7C2022002L,0x000FA110A4D80000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x761105C7C2022000L,0x000FA110A4D84000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000400001000000L,0x0004100444004000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000400000000000L,0x0000000440000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x0000000440000000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x761105C7C2022000L,0x000FA118A4D80000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000000L,0x0000000840000000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x761105C7C2022000L,0x000FA110ACD80000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000002L,0x0000002000000000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000000002L,0x0000010004000000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000002L,0x0000011004000000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000000L,0x0000010008000000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000002004000000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000002004000002L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000000000L,0x0003000000000000L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000000L,0x000400000C004000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000002L,0x0000001100000000L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000008002000002L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000100000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000020000L,0x0004000000000000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000000L,0x0004000010000000L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000002L,0x0000000800000000L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000002L,0x0004000000000000L});

}